@use "../../setting" as *;

$SpaceBetween: (
  "0": "$\\0",
  "px": "$\\px",
  "0\\.5": "$\\0\\.5",
  "1": "$\\1",
  "1\\.5": "$\\1\\.5",
  "2": "$\\2",
  "2\\.5": "$\\2\\.5",
  "3": "$\\3",
  "3\\.5": "$\\3\\.5",
  "4": "$\\4",
  "5": "$\\5",
  "6": "$\\6",
  "7": "$\\7",
  "8": "$\\8",
  "9": "$\\9",
  "10": "$\\10",
  "11": "$\\11",
  "12": "$\\12",
  "14": "$\\14",
  "16": "$\\16",
  "20": "$\\20",
  "24": "$\\24",
  "28": "$\\28",
  "32": "$\\32",
  "36": "$\\36",
  "40": "$\\40",
  "44": "$\\44",
  "48": "$\\48",
  "52": "$\\52",
  "56": "$\\56",
  "60": "$\\60",
  "64": "$\\64",
  "72": "$\\72",
  "80": "$\\80",
  "96": "$\\96",
);

@if $Basic {
  /*x
  @mixin space-x-reverse {
    $tw-space-x-reverse: 1 !global;

    > * ~ * {
      @include margin-left($tw-dummy-space-x-value * (1 - $tw-space-x-reverse));
      @include margin-right($tw-dummy-space-x-value * $tw-space-x-reverse);
    }
  }

  @mixin space-y-reverse {
    $tw-space-y-reverse: 1 !global;

    > * ~ * {
      @include margin-top($tw-dummy-space-y-value * (1 - $tw-space-y-reverse));
      @include margin-bottom($tw-dummy-space-y-value * $tw-space-y-reverse);
    }
  }
  x*/
  /*x
    @mixin -space-x-reverse {
      $tw-space-x-reverse: 1 !global;

      > * ~ * {
        @include margin-left(-$tw-dummy-space-x-value * (1 - $tw-space-x-reverse));
        @include margin-right(-$tw-dummy-space-x-value * $tw-space-x-reverse);
      }
    }

    @mixin -space-y-reverse {
      $tw-space-y-reverse: 1 !global;

      > * ~ * {
        @include margin-top(-$tw-dummy-space-y-value * (1 - $tw-space-y-reverse));
        @include margin-bottom(-$tw-dummy-space-y-value * $tw-space-y-reverse);
      }
    }
  x*/
  @each $key, $value in $SpaceBetween {
    /*x
    @mixin space-x-#{$key} {
      $tw-dummy-space-x-value: #{$value} !global;

      > * ~ * {
        @include margin-left(#{$value} * (1 - $tw-space-x-reverse));
        @include margin-right(#{$value} * $tw-space-x-reverse);
      }
    }

    @mixin space-y-#{$key} {
      $tw-dummy-space-y-value: #{$value} !global;

      > * ~ * {
        @include margin-top(#{$value} * (1 - $tw-space-y-reverse));
        @include margin-bottom(#{$value} * $tw-space-y-reverse);
      }
    }
    x*/
    /*x
    @mixin -space-x-#{$key} {
      $tw-dummy-space-x-value: -#{$value} !global;

      > * ~ * {
        @include margin-left(-#{$value} * (1 - $tw-space-x-reverse));
        @include margin-right(-#{$value} * $tw-space-x-reverse);
      }
    }

    @mixin -space-y-#{$key} {
      $tw-dummy-space-y-value: -#{$value} !global;

      > * ~ * {
        @include margin-top(-#{$value} * (1 - $tw-space-y-reverse));
        @include margin-bottom(-#{$value} * $tw-space-y-reverse);
      }
    }
    x*/
  }
}

@if $Breakpoint {
  @each $rwd in $rwdBox {
    /*x
    @mixin #{$rwd}\:space-x-reverse {
      $tw-space-x-reverse: 1 !global;

      @include #{$rwd} {
        > * ~ * {
          @include margin-left($tw-dummy-space-x-value * (1 - $tw-space-x-reverse));
          @include margin-right($tw-dummy-space-x-value * $tw-space-x-reverse);
        }
      }
    }

    @mixin #{$rwd}\:space-y-reverse {
      $tw-space-y-reverse: 1 !global;

      @include #{$rwd} {
        > * ~ * {
          @include margin-top($tw-dummy-space-y-value * (1 - $tw-space-y-reverse));
          @include margin-bottom($tw-dummy-space-y-value * $tw-space-y-reverse);
        }
      }
    }
    x*/
    /*x
    @mixin #{$rwd}\:-space-x-reverse {
      $tw-space-x-reverse: 1 !global;

      @include #{$rwd} {
        > * ~ * {
          @include margin-left(-$tw-dummy-space-x-value * (1 - $tw-space-x-reverse));
          @include margin-right(-$tw-dummy-space-x-value * $tw-space-x-reverse);
        }
      }
    }

    @mixin #{$rwd}\:-space-y-reverse {
      $tw-space-y-reverse: 1 !global;

      @include #{$rwd} {
        > * ~ * {
          @include margin-top(-$tw-dummy-space-y-value * (1 - $tw-space-y-reverse));
          @include margin-bottom(-$tw-dummy-space-y-value * $tw-space-y-reverse);
        }
      }
    }
    x*/
    @each $key, $value in $SpaceBetween {
      /*x
      @mixin #{$rwd}\:space-x-#{$key} {
        $tw-dummy-space-x-value: #{$value} !global;

        @include #{$rwd} {
          > * ~ * {
            @include margin-left(#{$value} * (1 - $tw-space-x-reverse));
            @include margin-right(#{$value} * $tw-space-x-reverse);
          }
        }
      }

      @mixin #{$rwd}\:space-y-#{$key} {
        $tw-dummy-space-y-value: #{$value} !global;

        @include #{$rwd} {
          > * ~ * {
            @include margin-top(#{$value} * (1 - $tw-space-y-reverse));
            @include margin-bottom(#{$value} * $tw-space-y-reverse);
          }
        }
      }
      x*/
      /*x
      @mixin #{$rwd}\:-space-x-#{$key} {
        $tw-dummy-space-x-value: -#{$value} !global;

        @include #{$rwd} {
          > * ~ * {
            @include margin-left(-#{$value} * (1 - $tw-space-x-reverse));
            @include margin-right(-#{$value} * $tw-space-x-reverse);
          }
        }
      }

      @mixin #{$rwd}\:-space-y-#{$key} {
        $tw-dummy-space-y-value: -#{$value} !global;

        @include #{$rwd} {
          > * ~ * {
            @include margin-top(-#{$value} * (1 - $tw-space-y-reverse));
            @include margin-bottom(-#{$value} * $tw-space-y-reverse);
          }
        }
      }
      x*/
    }
  }
}

@if $Custom {
  /*x
  @mixin space-x-($v) {
    $tw-dummy-space-x-value: $v !global; // update value when using reverse

    > * ~ * {
      @include margin-left($v * (1 - $tw-space-x-reverse));
      @include margin-right($v * $tw-space-x-reverse);
    }
  }

  @mixin space-y-($v) {
    $tw-dummy-space-y-value: $v !global; // update value when using reverse

    > * ~ * {
      @include margin-top($v * (1 - $tw-space-y-reverse));
      @include margin-bottom($v * $tw-space-y-reverse);
    }
  }
  x*/
  /*x
  @mixin -space-x-($v) {
    $tw-dummy-space-x-value: -$v !global; // update value when using reverse

    > * ~ * {
      @include margin-left(-$v * (1 - $tw-space-x-reverse));
      @include margin-right(-$v * $tw-space-x-reverse);
    }
  }

  @mixin -space-y-($v) {
    $tw-dummy-space-y-value: -$v !global; // update value when using reverse

    > * ~ * {
      @include margin-top(-$v * (1 - $tw-space-y-reverse));
      @include margin-bottom(-$v * $tw-space-y-reverse);
    }
  }
  x*/

  @each $rwd in $rwdBox {
    /*x
    @mixin #{$rwd}\:space-x-($v) {
      $tw-dummy-space-x-value: $v !global; // update value when using reverse

      @include #{$rwd} {
        > * ~ * {
          @include margin-left($v * (1 - $tw-space-x-reverse));
          @include margin-right($v * $tw-space-x-reverse);
        }
      }
    }

    @mixin #{$rwd}\:space-y-($v) {
      $tw-dummy-space-y-value: $v !global; // update value when using reverse

      @include #{$rwd} {
        > * ~ * {
          @include margin-top($v * (1 - $tw-space-y-reverse));
          @include margin-bottom($v * $tw-space-y-reverse);
        }
      }
    }
    x*/
    /*x
    @mixin #{$rwd}\:-space-x-($v) {
      $tw-dummy-space-x-value: -$v !global; // update value when using reverse

      @include #{$rwd} {
        > * ~ * {
          @include margin-left(-$v * (1 - $tw-space-x-reverse));
          @include margin-right(-$v * $tw-space-x-reverse);
        }
      }
    }

    @mixin #{$rwd}\:-space-y-($v) {
      $tw-dummy-space-y-value: -$v !global; // update value when using reverse

      @include #{$rwd} {
        > * ~ * {
          @include margin-top(-$v * (1 - $tw-space-y-reverse));
          @include margin-bottom(-$v * $tw-space-y-reverse);
        }
      }
    }
    x*/
  }
}
