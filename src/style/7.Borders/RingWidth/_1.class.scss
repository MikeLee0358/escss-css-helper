@use '../../setting' as *;

// Custom same as @mixin ring-($v)
$RingWidth: (
  'ring-0': '0px + $tw-ring-offset-width',
  'ring-1': '1px + $tw-ring-offset-width',
  'ring-2': '2px + $tw-ring-offset-width',
  'ring': '3px + $tw-ring-offset-width',
  'ring-4': '4px + $tw-ring-offset-width',
  'ring-8': '8px + $tw-ring-offset-width',
);

$RingWidth2: (
  'ring-inset': null,
);

@if $isBasic {
  @each $key, $value in $RingWidth {
    /*x
    @mixin #{$key} {
      $tw-dummy-not-match--ring-offset-width: true !global;
      $tw-dummy-ring-width: #{$value} !global;

      @include box-shadow(get_box-shadow());
    }
    x*/
  }

  @each $key, $value in $RingWidth2 {
    /*x
    @mixin #{$key} {
      $tw-dummy-not-match--ring-offset-width: true !global;

      @include box-shadow(get_box-shadow());
    }
    x*/
  }
}

@if $isRwd {
  @each $rwd in $rwdBox {
    @each $key, $value in $RingWidth {
      /*x
      @mixin #{$rwd}\:#{$key} {
        $tw-dummy-not-match--ring-offset-width: true !global;
        $tw-dummy-ring-width: #{$value} !global;

        @include box-shadow(get_box-shadow(), $#{$rwd});
      }
      x*/
    }

    @each $key, $value in $RingWidth2 {
      /*x
      @mixin #{$rwd}\:#{$key} {
        $tw-dummy-not-match--ring-offset-width: true !global;

        @include box-shadow(get_box-shadow(), $#{$rwd});
      }
      x*/
    }
  }
}
