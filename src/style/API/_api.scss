/*x
// Outer API:
// 1. hover_bg-gradient: makes bg-gradient hover possible.
// 2. reset: reset global variables($), if a class uses it.

// Help bg-gradient hover transition
// .demo {
//    @include bg-gradient-to-r;
//    @include from-red-500;
//
//    @include hover_bg-gradient {
//      @include from-sky-500;
//      @include sm\:from-rose-500;
//    }
// }
@mixin hover_bg-gradient {
  & {
    @include relative;
  }

  &::before {
    content: "";
    @include absolute;
    @include inset-0;
    @include opacity-0;
    @include transition-all;
    @content; // take outside stuff to override inside property
  }

  &:hover::before {
    @include opacity-100;
    @include cursor-pointer;
  }
}

// reset global variables
// Best Practice: USE IN EVERY CLASSES.
// why? 1. Can be an indicator of how many css that you've used,
//      2. Only a class uses global variable needs to do reset, but people will be lazy so use it in every classes.

// .demo {
//  @include scale-50; // this one uses global variable so needs to be reset.
//
//  @include reset;  // reset global variables to prevent unexpected behavior that relates to transform property. e.g. using scale、rotate、skew..
// }
@mixin reset {
  // Gradient Color Stops
  $tw-dummy-gradient-direction: null !global;
  $tw-gradient-from: #fff !global;
  $tw-gradient-via: null !global;
  $tw-gradient-to: transparent !global;
  $tw-gradient-from-position: null !global;
  $tw-gradient-via-position: null !global;
  $tw-gradient-to-position: null !global;

  // Space Between
  $tw-dummy-space-x-value: 0 !global;
  $tw-dummy-space-y-value: 0 !global;
  $tw-space-x-reverse: 0 !global;
  $tw-space-y-reverse: 0 !global;

  // Divide Width
  $tw-dummy-divide-x-value: 0 !global;
  $tw-dummy-divide-y-value: 0 !global;
  $tw-divide-x-reverse: 0 !global;
  $tw-divide-y-reverse: 0 !global;

  // Box Shadow
  $tw-ring-offset-width: 0 !global;
  $tw-ring-offset-color: #fff !global;
  $tw-ring-inset: null !global;
  $tw-dummy-ring-width: 0 !global;
  $tw-ring-color: rgb(59 130 246 / 0.5) !global;
  $tw-dummy-shadow-token: null !global;
  $tw-dummy-shadow-width: 0 0 0 0 !global;
  $tw-shadow-color: #fff !global;

  // Scroll Snap Type
  $tw-scroll-snap-strictness: proximity !global;

  // Transforms
  $tw-translate-x: 0 !global;
  $tw-translate-y: 0 !global;
  $tw-rotate: 0deg !global;
  $tw-skew-x: 0deg !global;
  $tw-skew-y: 0deg !global;
  $tw-scale-x: 1 !global;
  $tw-scale-y: 1 !global;

  // Filters
  $tw-blur: null !global;
  $tw-brightness: null !global;
  $tw-contrast: null !global;
  $tw-grayscale: null !global;
  $tw-hue-rotate: null !global;
  $tw-invert: null !global;
  $tw-saturate: null !global;
  $tw-sepia: null !global;
  $tw-drop-shadow: null !global;
  $tw-backdrop-blur: null !global;
  $tw-backdrop-brightness: null !global;
  $tw-backdrop-contrast: null !global;
  $tw-backdrop-grayscale: null !global;
  $tw-backdrop-hue-rotate: null !global;
  $tw-backdrop-invert: null !global;
  $tw-backdrop-opacity: null !global;
  $tw-backdrop-saturate: null !global;
  $tw-backdrop-sepia: null !global;

  // For matching tailwind behavior
  $tw-dummy-not-match--snap: false !global;
  $tw-dummy-not-match--shadow-color: false !global;
  $tw-dummy-not-match--ring-offset-width: false !global;
}

// reset your base css
// #example {
//   @include init;  initial your default base css
//   @include escss-preflight; add new base css
//   color: red;  your style
// }

@mixin init {
  @layer base {
    all: initial;
  }
}

@mixin escss-preflight {
  // escss-preflight is based on tailwindcss v3.4.4
  @layer base {
    $isHtmlTagOnly: selector.is-superselector(&, html);

    // edge case: to match same as preflight
    @if $isHtmlTagOnly {
      &:root {
        box-sizing: border-box;
        border-width: 0;
        border-style: solid;
        border-color: #e5e7eb;

        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        -moz-tab-size: 4;
        tab-size: 4;
        font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
          "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-feature-settings: normal;
        font-variation-settings: normal;
        -webkit-tap-highlight-color: transparent;
      }
    }

    $isBodyTag: selector.is-superselector(&, body);

    // edge case: to match same as preflight
    @if $isBodyTag {
      & {
        box-sizing: border-box;
        border-width: 0;
        border-style: solid;
        border-color: #e5e7eb;

        margin: 0;
        line-height: inherit;
      }
    }

    body & {
      box-sizing: border-box;
      border-width: 0;
      border-style: solid;
      border-color: #e5e7eb;

      margin: 0;
      line-height: inherit;
    }

    @at-root hr#{&} {
      height: 0;
      color: inherit;
      border-top-width: 1px;
    }

    @at-root abbr:where([title])#{&} {
      -webkit-text-decoration: underline dotted;
      text-decoration: underline dotted;
    }

    @at-root h1#{&},
      h2#{&},
      h3#{&},
      h4#{&},
      h5#{&},
      h6#{&} {
      font-size: inherit;
      font-weight: inherit;
    }

    @at-root a#{&} {
      color: inherit;
      text-decoration: inherit;
    }

    @at-root b#{&},
      strong#{&} {
      font-weight: bolder;
    }

    @at-root code#{&},
      kbd#{&},
      samp#{&},
      pre#{&} {
      font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
        "Liberation Mono", "Courier New", monospace;
      font-feature-settings: normal;
      font-variation-settings: normal;
      font-size: 1em;
    }

    @at-root kbd#{&} {
      color: initial;
      background-color: initial;
      border-radius: initial;
      padding: 0;
      font-weight: initial;
    }

    @at-root small#{&} {
      font-size: 80%;
    }

    @at-root mark#{&} {
      padding: initial;
      background-color: initial;
    }

    @at-root sub#{&},
      sup#{&} {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline;
    }

    @at-root sub#{&} {
      bottom: -0.25em;
    }

    @at-root sup#{&} {
      top: -0.5em;
    }

    @at-root table#{&} {
      text-indent: 0;
      border-color: inherit;
      border-collapse: collapse;
    }

    @at-root button#{&},
      input#{&},
      optgroup#{&},
      select#{&},
      textarea#{&} {
      font-family: inherit;
      font-feature-settings: inherit;
      font-variation-settings: inherit;
      font-size: 100%;
      font-weight: inherit;
      line-height: inherit;
      letter-spacing: inherit;
      color: inherit;
      margin: 0;
      padding: 0;
    }

    @at-root button#{&},
      select#{&} {
      text-transform: none;
    }

    @at-root button#{&},
      input:where([type="button"])#{&},
      input:where([type="reset"])#{&},
      input:where([type="submit"])#{&} {
      -webkit-appearance: button;
      background-color: transparent;
      background-image: none;
    }

    &:-moz-focusring {
      outline: auto;
    }

    &:-moz-ui-invalid {
      box-shadow: none;
    }

    @at-root progress#{&} {
      vertical-align: baseline;
    }

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      height: auto;
    }

    @at-root [type="search"]#{&} {
      -webkit-appearance: textfield;
      outline-offset: -2px;
    }

    &::-webkit-search-decoration {
      -webkit-appearance: none;
    }

    &::-webkit-file-upload-button {
      -webkit-appearance: button;
      font: inherit;
    }

    @at-root summary#{&} {
      display: list-item;
    }

    @at-root blockquote#{&},
      dl#{&},
      dd#{&},
      h1#{&},
      h2#{&},
      h3#{&},
      h4#{&},
      h5#{&},
      h6#{&},
      hr#{&},
      figure#{&},
      p#{&},
      pre#{&} {
      margin: 0;
    }

    @at-root fieldset#{&} {
      margin: 0;
      padding: 0;
    }

    @at-root legend#{&} {
      padding: 0;
    }

    @at-root ol#{&},
      ul#{&},
      menu#{&} {
      list-style: none;
      margin: 0;
      padding: 0;
    }

    @at-root dialog#{&} {
      padding: 0;
    }

    @at-root textarea#{&} {
      resize: vertical;
    }

    @at-root input::-moz-placeholder#{&},
      textarea::-moz-placeholder#{&} {
      opacity: 1;
      color: #9ca3af;
    }

    @at-root input::placeholder#{&},
      textarea::placeholder#{&} {
      opacity: 1;
      color: #9ca3af;
    }

    @at-root [role="button"]#{&} {
      cursor: pointer;
    }

    &:disabled {
      cursor: default;
    }

    @at-root img#{&},
      svg#{&},
      video#{&},
      canvas#{&},
      audio#{&},
      iframe#{&},
      embed#{&},
      object#{&} {
      display: block;
      vertical-align: middle;
    }

    @at-root img#{&},
      video#{&} {
      max-width: 100%;
      height: auto;
    }

    @at-root [hidden]#{&} {
      display: none;
    }
  }
}

@mixin sm {
  @media (min-width: $sm) {
    @content;
  }
}

@mixin md {
  @media (min-width: $md) {
    @content;
  }
}

@mixin lg {
  @media (min-width: $lg) {
    @content;
  }
}

@mixin xl {
  @media (min-width: $xl) {
    @content;
  }
}

@mixin \2xl {
  @media (min-width: $\2xl) {
    @content;
  }
}

@mixin dark {
  .dark & {
    @content;
  }

  @media (prefers-color-scheme: dark) {
    & {
      @content;
    }
  }
}
x*/
