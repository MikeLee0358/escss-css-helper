@use '../../mode0' as *;
@use 'true' as *;

// private member(prefix - or _) can't be imported, so I put here for testing

@mixin -space-x-reverse {
  $tw-space-x-reverse: 1 !global;

  > * ~ * {
    margin-left: -$tw-dummy-space-x-value * (1 - $tw-space-x-reverse);
    margin-right: -$tw-dummy-space-x-value * $tw-space-x-reverse;
  }
}

@mixin -space-y-reverse {
  $tw-space-y-reverse: 1 !global;

  > * ~ * {
    margin-top: -$tw-dummy-space-y-value * (1 - $tw-space-y-reverse);
    margin-bottom: -$tw-dummy-space-y-value * $tw-space-y-reverse;
  }
}

@mixin -space-x-0 {
  $tw-dummy-space-x-value: -$\0 !global;

  > * ~ * {
    margin-left: -$\0 * (1 - $tw-space-x-reverse);
    margin-right: -$\0 * $tw-space-x-reverse;
  }
}

@mixin -space-y-0 {
  $tw-dummy-space-y-value: -$\0 !global;

  > * ~ * {
    margin-top: -$\0 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\0 * $tw-space-y-reverse;
  }
}

@mixin -space-x-px {
  $tw-dummy-space-x-value: -$\px !global;

  > * ~ * {
    margin-left: -$\px* (1 - $tw-space-x-reverse);
    margin-right: -$\px* $tw-space-x-reverse;
  }
}

@mixin -space-y-px {
  $tw-dummy-space-y-value: -$\px !global;

  > * ~ * {
    margin-top: -$\px* (1 - $tw-space-y-reverse);
    margin-bottom: -$\px* $tw-space-y-reverse;
  }
}

@mixin -space-x-0\.5 {
  $tw-dummy-space-x-value: -$\0\.5 !global;

  > * ~ * {
    margin-left: -$\0\.5 * (1 - $tw-space-x-reverse);
    margin-right: -$\0\.5 * $tw-space-x-reverse;
  }
}

@mixin -space-y-0\.5 {
  $tw-dummy-space-y-value: -$\0\.5 !global;

  > * ~ * {
    margin-top: -$\0\.5 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\0\.5 * $tw-space-y-reverse;
  }
}

@mixin -space-x-1 {
  $tw-dummy-space-x-value: -$\1 !global;

  > * ~ * {
    margin-left: -$\1 * (1 - $tw-space-x-reverse);
    margin-right: -$\1 * $tw-space-x-reverse;
  }
}

@mixin -space-y-1 {
  $tw-dummy-space-y-value: -$\1 !global;

  > * ~ * {
    margin-top: -$\1 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\1 * $tw-space-y-reverse;
  }
}

@mixin -space-x-1\.5 {
  $tw-dummy-space-x-value: -$\1\.5 !global;

  > * ~ * {
    margin-left: -$\1\.5 * (1 - $tw-space-x-reverse);
    margin-right: -$\1\.5 * $tw-space-x-reverse;
  }
}

@mixin -space-y-1\.5 {
  $tw-dummy-space-y-value: -$\1\.5 !global;

  > * ~ * {
    margin-top: -$\1\.5 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\1\.5 * $tw-space-y-reverse;
  }
}

@mixin -space-x-2 {
  $tw-dummy-space-x-value: -$\2 !global;

  > * ~ * {
    margin-left: -$\2 * (1 - $tw-space-x-reverse);
    margin-right: -$\2 * $tw-space-x-reverse;
  }
}

@mixin -space-y-2 {
  $tw-dummy-space-y-value: -$\2 !global;

  > * ~ * {
    margin-top: -$\2 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\2 * $tw-space-y-reverse;
  }
}

@mixin -space-x-2\.5 {
  $tw-dummy-space-x-value: -$\2\.5 !global;

  > * ~ * {
    margin-left: -$\2\.5 * (1 - $tw-space-x-reverse);
    margin-right: -$\2\.5 * $tw-space-x-reverse;
  }
}

@mixin -space-y-2\.5 {
  $tw-dummy-space-y-value: -$\2\.5 !global;

  > * ~ * {
    margin-top: -$\2\.5 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\2\.5 * $tw-space-y-reverse;
  }
}

@mixin -space-x-3 {
  $tw-dummy-space-x-value: -$\3 !global;

  > * ~ * {
    margin-left: -$\3 * (1 - $tw-space-x-reverse);
    margin-right: -$\3 * $tw-space-x-reverse;
  }
}

@mixin -space-y-3 {
  $tw-dummy-space-y-value: -$\3 !global;

  > * ~ * {
    margin-top: -$\3 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\3 * $tw-space-y-reverse;
  }
}

@mixin -space-x-3\.5 {
  $tw-dummy-space-x-value: -$\3\.5 !global;

  > * ~ * {
    margin-left: -$\3\.5 * (1 - $tw-space-x-reverse);
    margin-right: -$\3\.5 * $tw-space-x-reverse;
  }
}

@mixin -space-y-3\.5 {
  $tw-dummy-space-y-value: -$\3\.5 !global;

  > * ~ * {
    margin-top: -$\3\.5 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\3\.5 * $tw-space-y-reverse;
  }
}

@mixin -space-x-4 {
  $tw-dummy-space-x-value: -$\4 !global;

  > * ~ * {
    margin-left: -$\4 * (1 - $tw-space-x-reverse);
    margin-right: -$\4 * $tw-space-x-reverse;
  }
}

@mixin -space-y-4 {
  $tw-dummy-space-y-value: -$\4 !global;

  > * ~ * {
    margin-top: -$\4 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\4 * $tw-space-y-reverse;
  }
}

@mixin -space-x-5 {
  $tw-dummy-space-x-value: -$\5 !global;

  > * ~ * {
    margin-left: -$\5 * (1 - $tw-space-x-reverse);
    margin-right: -$\5 * $tw-space-x-reverse;
  }
}

@mixin -space-y-5 {
  $tw-dummy-space-y-value: -$\5 !global;

  > * ~ * {
    margin-top: -$\5 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\5 * $tw-space-y-reverse;
  }
}

@mixin -space-x-6 {
  $tw-dummy-space-x-value: -$\6 !global;

  > * ~ * {
    margin-left: -$\6 * (1 - $tw-space-x-reverse);
    margin-right: -$\6 * $tw-space-x-reverse;
  }
}

@mixin -space-y-6 {
  $tw-dummy-space-y-value: -$\6 !global;

  > * ~ * {
    margin-top: -$\6 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\6 * $tw-space-y-reverse;
  }
}

@mixin -space-x-7 {
  $tw-dummy-space-x-value: -$\7 !global;

  > * ~ * {
    margin-left: -$\7 * (1 - $tw-space-x-reverse);
    margin-right: -$\7 * $tw-space-x-reverse;
  }
}

@mixin -space-y-7 {
  $tw-dummy-space-y-value: -$\7 !global;

  > * ~ * {
    margin-top: -$\7 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\7 * $tw-space-y-reverse;
  }
}

@mixin -space-x-8 {
  $tw-dummy-space-x-value: -$\8 !global;

  > * ~ * {
    margin-left: -$\8 * (1 - $tw-space-x-reverse);
    margin-right: -$\8 * $tw-space-x-reverse;
  }
}

@mixin -space-y-8 {
  $tw-dummy-space-y-value: -$\8 !global;

  > * ~ * {
    margin-top: -$\8 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\8 * $tw-space-y-reverse;
  }
}

@mixin -space-x-9 {
  $tw-dummy-space-x-value: -$\9 !global;

  > * ~ * {
    margin-left: -$\9 * (1 - $tw-space-x-reverse);
    margin-right: -$\9 * $tw-space-x-reverse;
  }
}

@mixin -space-y-9 {
  $tw-dummy-space-y-value: -$\9 !global;

  > * ~ * {
    margin-top: -$\9 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\9 * $tw-space-y-reverse;
  }
}

@mixin -space-x-10 {
  $tw-dummy-space-x-value: -$\10 !global;

  > * ~ * {
    margin-left: -$\10 * (1 - $tw-space-x-reverse);
    margin-right: -$\10 * $tw-space-x-reverse;
  }
}

@mixin -space-y-10 {
  $tw-dummy-space-y-value: -$\10 !global;

  > * ~ * {
    margin-top: -$\10 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\10 * $tw-space-y-reverse;
  }
}

@mixin -space-x-11 {
  $tw-dummy-space-x-value: -$\11 !global;

  > * ~ * {
    margin-left: -$\11 * (1 - $tw-space-x-reverse);
    margin-right: -$\11 * $tw-space-x-reverse;
  }
}

@mixin -space-y-11 {
  $tw-dummy-space-y-value: -$\11 !global;

  > * ~ * {
    margin-top: -$\11 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\11 * $tw-space-y-reverse;
  }
}

@mixin -space-x-12 {
  $tw-dummy-space-x-value: -$\12 !global;

  > * ~ * {
    margin-left: -$\12 * (1 - $tw-space-x-reverse);
    margin-right: -$\12 * $tw-space-x-reverse;
  }
}

@mixin -space-y-12 {
  $tw-dummy-space-y-value: -$\12 !global;

  > * ~ * {
    margin-top: -$\12 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\12 * $tw-space-y-reverse;
  }
}

@mixin -space-x-14 {
  $tw-dummy-space-x-value: -$\14 !global;

  > * ~ * {
    margin-left: -$\14 * (1 - $tw-space-x-reverse);
    margin-right: -$\14 * $tw-space-x-reverse;
  }
}

@mixin -space-y-14 {
  $tw-dummy-space-y-value: -$\14 !global;

  > * ~ * {
    margin-top: -$\14 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\14 * $tw-space-y-reverse;
  }
}

@mixin -space-x-16 {
  $tw-dummy-space-x-value: -$\16 !global;

  > * ~ * {
    margin-left: -$\16 * (1 - $tw-space-x-reverse);
    margin-right: -$\16 * $tw-space-x-reverse;
  }
}

@mixin -space-y-16 {
  $tw-dummy-space-y-value: -$\16 !global;

  > * ~ * {
    margin-top: -$\16 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\16 * $tw-space-y-reverse;
  }
}

@mixin -space-x-20 {
  $tw-dummy-space-x-value: -$\20 !global;

  > * ~ * {
    margin-left: -$\20 * (1 - $tw-space-x-reverse);
    margin-right: -$\20 * $tw-space-x-reverse;
  }
}

@mixin -space-y-20 {
  $tw-dummy-space-y-value: -$\20 !global;

  > * ~ * {
    margin-top: -$\20 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\20 * $tw-space-y-reverse;
  }
}

@mixin -space-x-24 {
  $tw-dummy-space-x-value: -$\24 !global;

  > * ~ * {
    margin-left: -$\24 * (1 - $tw-space-x-reverse);
    margin-right: -$\24 * $tw-space-x-reverse;
  }
}

@mixin -space-y-24 {
  $tw-dummy-space-y-value: -$\24 !global;

  > * ~ * {
    margin-top: -$\24 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\24 * $tw-space-y-reverse;
  }
}

@mixin -space-x-28 {
  $tw-dummy-space-x-value: -$\28 !global;

  > * ~ * {
    margin-left: -$\28 * (1 - $tw-space-x-reverse);
    margin-right: -$\28 * $tw-space-x-reverse;
  }
}

@mixin -space-y-28 {
  $tw-dummy-space-y-value: -$\28 !global;

  > * ~ * {
    margin-top: -$\28 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\28 * $tw-space-y-reverse;
  }
}

@mixin -space-x-32 {
  $tw-dummy-space-x-value: -$\32 !global;

  > * ~ * {
    margin-left: -$\32 * (1 - $tw-space-x-reverse);
    margin-right: -$\32 * $tw-space-x-reverse;
  }
}

@mixin -space-y-32 {
  $tw-dummy-space-y-value: -$\32 !global;

  > * ~ * {
    margin-top: -$\32 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\32 * $tw-space-y-reverse;
  }
}

@mixin -space-x-36 {
  $tw-dummy-space-x-value: -$\36 !global;

  > * ~ * {
    margin-left: -$\36 * (1 - $tw-space-x-reverse);
    margin-right: -$\36 * $tw-space-x-reverse;
  }
}

@mixin -space-y-36 {
  $tw-dummy-space-y-value: -$\36 !global;

  > * ~ * {
    margin-top: -$\36 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\36 * $tw-space-y-reverse;
  }
}

@mixin -space-x-40 {
  $tw-dummy-space-x-value: -$\40 !global;

  > * ~ * {
    margin-left: -$\40 * (1 - $tw-space-x-reverse);
    margin-right: -$\40 * $tw-space-x-reverse;
  }
}

@mixin -space-y-40 {
  $tw-dummy-space-y-value: -$\40 !global;

  > * ~ * {
    margin-top: -$\40 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\40 * $tw-space-y-reverse;
  }
}

@mixin -space-x-44 {
  $tw-dummy-space-x-value: -$\44 !global;

  > * ~ * {
    margin-left: -$\44 * (1 - $tw-space-x-reverse);
    margin-right: -$\44 * $tw-space-x-reverse;
  }
}

@mixin -space-y-44 {
  $tw-dummy-space-y-value: -$\44 !global;

  > * ~ * {
    margin-top: -$\44 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\44 * $tw-space-y-reverse;
  }
}

@mixin -space-x-48 {
  $tw-dummy-space-x-value: -$\48 !global;

  > * ~ * {
    margin-left: -$\48 * (1 - $tw-space-x-reverse);
    margin-right: -$\48 * $tw-space-x-reverse;
  }
}

@mixin -space-y-48 {
  $tw-dummy-space-y-value: -$\48 !global;

  > * ~ * {
    margin-top: -$\48 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\48 * $tw-space-y-reverse;
  }
}

@mixin -space-x-52 {
  $tw-dummy-space-x-value: -$\52 !global;

  > * ~ * {
    margin-left: -$\52 * (1 - $tw-space-x-reverse);
    margin-right: -$\52 * $tw-space-x-reverse;
  }
}

@mixin -space-y-52 {
  $tw-dummy-space-y-value: -$\52 !global;

  > * ~ * {
    margin-top: -$\52 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\52 * $tw-space-y-reverse;
  }
}

@mixin -space-x-56 {
  $tw-dummy-space-x-value: -$\56 !global;

  > * ~ * {
    margin-left: -$\56 * (1 - $tw-space-x-reverse);
    margin-right: -$\56 * $tw-space-x-reverse;
  }
}

@mixin -space-y-56 {
  $tw-dummy-space-y-value: -$\56 !global;

  > * ~ * {
    margin-top: -$\56 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\56 * $tw-space-y-reverse;
  }
}

@mixin -space-x-60 {
  $tw-dummy-space-x-value: -$\60 !global;

  > * ~ * {
    margin-left: -$\60 * (1 - $tw-space-x-reverse);
    margin-right: -$\60 * $tw-space-x-reverse;
  }
}

@mixin -space-y-60 {
  $tw-dummy-space-y-value: -$\60 !global;

  > * ~ * {
    margin-top: -$\60 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\60 * $tw-space-y-reverse;
  }
}

@mixin -space-x-64 {
  $tw-dummy-space-x-value: -$\64 !global;

  > * ~ * {
    margin-left: -$\64 * (1 - $tw-space-x-reverse);
    margin-right: -$\64 * $tw-space-x-reverse;
  }
}

@mixin -space-y-64 {
  $tw-dummy-space-y-value: -$\64 !global;

  > * ~ * {
    margin-top: -$\64 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\64 * $tw-space-y-reverse;
  }
}

@mixin -space-x-72 {
  $tw-dummy-space-x-value: -$\72 !global;

  > * ~ * {
    margin-left: -$\72 * (1 - $tw-space-x-reverse);
    margin-right: -$\72 * $tw-space-x-reverse;
  }
}

@mixin -space-y-72 {
  $tw-dummy-space-y-value: -$\72 !global;

  > * ~ * {
    margin-top: -$\72 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\72 * $tw-space-y-reverse;
  }
}

@mixin -space-x-80 {
  $tw-dummy-space-x-value: -$\80 !global;

  > * ~ * {
    margin-left: -$\80 * (1 - $tw-space-x-reverse);
    margin-right: -$\80 * $tw-space-x-reverse;
  }
}

@mixin -space-y-80 {
  $tw-dummy-space-y-value: -$\80 !global;

  > * ~ * {
    margin-top: -$\80 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\80 * $tw-space-y-reverse;
  }
}

@mixin -space-x-96 {
  $tw-dummy-space-x-value: -$\96 !global;

  > * ~ * {
    margin-left: -$\96 * (1 - $tw-space-x-reverse);
    margin-right: -$\96 * $tw-space-x-reverse;
  }
}

@mixin -space-y-96 {
  $tw-dummy-space-y-value: -$\96 !global;

  > * ~ * {
    margin-top: -$\96 * (1 - $tw-space-y-reverse);
    margin-bottom: -$\96 * $tw-space-y-reverse;
  }
}

@mixin get_-space-x-($v, $isReverse: false) {
  @if $isReverse {
    $tw-space-x-reverse: 1 !global;
    $v: $tw-dummy-space-x-value;
  } @else {
    $tw-dummy-space-x-value: -$v !global; // update value when using reverse
  }

  > * ~ * {
    @include margin-left(-$v * (1 - $tw-space-x-reverse));
    @include margin-right(-$v * $tw-space-x-reverse);
  }
}

@mixin get_-space-y-($v, $isReverse: false) {
  @if $isReverse {
    $tw-space-y-reverse: 1 !global;
    $v: $tw-dummy-space-y-value;
  } @else {
    $tw-dummy-space-y-value: -$v !global; // update value when using reverse
  }

  > * ~ * {
    @include margin-top(-$v * (1 - $tw-space-y-reverse));
    @include margin-bottom(-$v * $tw-space-y-reverse);
  }
}

@mixin -space-x-($v, $isReverse: false) {
  @include get_-space-x-($v, $isReverse);
}

@mixin -space-y-($v, $isReverse: false) {
  @include get_-space-y-($v, $isReverse);
}

@include describe('3.Spacing') {
  @include describe('Space Between') {
    @include describe('Basic') {
      @include it('space-x-0 ') {
        @include assert {
          @include output {
            @include space-x-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it('space-y-0 ') {
        @include assert {
          @include output {
            @include space-y-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it('space-x-0\.5 ') {
        @include assert {
          @include output {
            @include space-x-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.125rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-0\.5 ') {
        @include assert {
          @include output {
            @include space-y-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.125rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-1 ') {
        @include assert {
          @include output {
            @include space-x-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-1 ') {
        @include assert {
          @include output {
            @include space-y-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-1\.5 ') {
        @include assert {
          @include output {
            @include space-x-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.375rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-1\.5 ') {
        @include assert {
          @include output {
            @include space-y-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.375rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-2 ') {
        @include assert {
          @include output {
            @include space-x-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-2 ') {
        @include assert {
          @include output {
            @include space-y-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-2\.5 ') {
        @include assert {
          @include output {
            @include space-x-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.625rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-2\.5 ') {
        @include assert {
          @include output {
            @include space-y-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.625rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-3 ') {
        @include assert {
          @include output {
            @include space-x-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-3 ') {
        @include assert {
          @include output {
            @include space-y-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-3\.5 ') {
        @include assert {
          @include output {
            @include space-x-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.875rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-3\.5 ') {
        @include assert {
          @include output {
            @include space-y-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.875rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-4 ') {
        @include assert {
          @include output {
            @include space-x-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-4 ') {
        @include assert {
          @include output {
            @include space-y-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-5 ') {
        @include assert {
          @include output {
            @include space-x-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-5 ') {
        @include assert {
          @include output {
            @include space-y-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-6 ') {
        @include assert {
          @include output {
            @include space-x-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-6 ') {
        @include assert {
          @include output {
            @include space-y-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-7 ') {
        @include assert {
          @include output {
            @include space-x-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-7 ') {
        @include assert {
          @include output {
            @include space-y-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-8 ') {
        @include assert {
          @include output {
            @include space-x-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-8 ') {
        @include assert {
          @include output {
            @include space-y-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-9 ') {
        @include assert {
          @include output {
            @include space-x-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-9 ') {
        @include assert {
          @include output {
            @include space-y-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-10 ') {
        @include assert {
          @include output {
            @include space-x-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-10 ') {
        @include assert {
          @include output {
            @include space-y-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-11 ') {
        @include assert {
          @include output {
            @include space-x-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-11 ') {
        @include assert {
          @include output {
            @include space-y-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-12 ') {
        @include assert {
          @include output {
            @include space-x-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 3rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-12 ') {
        @include assert {
          @include output {
            @include space-y-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 3rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-14 ') {
        @include assert {
          @include output {
            @include space-x-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 3.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-14 ') {
        @include assert {
          @include output {
            @include space-y-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 3.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-16 ') {
        @include assert {
          @include output {
            @include space-x-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 4rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-16 ') {
        @include assert {
          @include output {
            @include space-y-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 4rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-20 ') {
        @include assert {
          @include output {
            @include space-x-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-20 ') {
        @include assert {
          @include output {
            @include space-y-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-24 ') {
        @include assert {
          @include output {
            @include space-x-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 6rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-24 ') {
        @include assert {
          @include output {
            @include space-y-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 6rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-28 ') {
        @include assert {
          @include output {
            @include space-x-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 7rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-28 ') {
        @include assert {
          @include output {
            @include space-y-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 7rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-32 ') {
        @include assert {
          @include output {
            @include space-x-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 8rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-32 ') {
        @include assert {
          @include output {
            @include space-y-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 8rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-36 ') {
        @include assert {
          @include output {
            @include space-x-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 9rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-36 ') {
        @include assert {
          @include output {
            @include space-y-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 9rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-40 ') {
        @include assert {
          @include output {
            @include space-x-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 10rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-40 ') {
        @include assert {
          @include output {
            @include space-y-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 10rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-44 ') {
        @include assert {
          @include output {
            @include space-x-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 11rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-44 ') {
        @include assert {
          @include output {
            @include space-y-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 11rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-48 ') {
        @include assert {
          @include output {
            @include space-x-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 12rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-48 ') {
        @include assert {
          @include output {
            @include space-y-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 12rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-52 ') {
        @include assert {
          @include output {
            @include space-x-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 13rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-52 ') {
        @include assert {
          @include output {
            @include space-y-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 13rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-56 ') {
        @include assert {
          @include output {
            @include space-x-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 14rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-56 ') {
        @include assert {
          @include output {
            @include space-y-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 14rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-60 ') {
        @include assert {
          @include output {
            @include space-x-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 15rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-60 ') {
        @include assert {
          @include output {
            @include space-y-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 15rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-64 ') {
        @include assert {
          @include output {
            @include space-x-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 16rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-64 ') {
        @include assert {
          @include output {
            @include space-y-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 16rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-72 ') {
        @include assert {
          @include output {
            @include space-x-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 18rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-72 ') {
        @include assert {
          @include output {
            @include space-y-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 18rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-80 ') {
        @include assert {
          @include output {
            @include space-x-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 20rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-80 ') {
        @include assert {
          @include output {
            @include space-y-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 20rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-96 ') {
        @include assert {
          @include output {
            @include space-x-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 24rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it('space-y-96 ') {
        @include assert {
          @include output {
            @include space-y-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 24rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it('space-x-px ') {
        @include assert {
          @include output {
            @include space-x-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it('space-y-px ') {
        @include assert {
          @include output {
            @include space-y-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it('space-y-reverse ') {
        @include assert {
          @include output {
            @include space-y-4;
            @include space-y-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1rem;
              margin-bottom: 0rem;
            }

            > * ~ * {
              margin-top: 0rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it('space-x-reverse ') {
        @include assert {
          @include output {
            @include space-x-4;
            @include space-x-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1rem;
              margin-right: 0rem;
            }

            > * ~ * {
              margin-left: 0rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it('-space-x-0 ') {
        @include assert {
          @include output {
            @include -space-x-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it('-space-y-0 ') {
        @include assert {
          @include output {
            @include -space-y-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it('-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include -space-x-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.125rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include -space-y-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.125rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-1 ') {
        @include assert {
          @include output {
            @include -space-x-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-1 ') {
        @include assert {
          @include output {
            @include -space-y-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include -space-x-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.375rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include -space-y-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.375rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-2 ') {
        @include assert {
          @include output {
            @include -space-x-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-2 ') {
        @include assert {
          @include output {
            @include -space-y-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include -space-x-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.625rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include -space-y-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.625rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-3 ') {
        @include assert {
          @include output {
            @include -space-x-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-3 ') {
        @include assert {
          @include output {
            @include -space-y-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include -space-x-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.875rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include -space-y-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.875rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-4 ') {
        @include assert {
          @include output {
            @include -space-x-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-4 ') {
        @include assert {
          @include output {
            @include -space-y-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-5 ') {
        @include assert {
          @include output {
            @include -space-x-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-5 ') {
        @include assert {
          @include output {
            @include -space-y-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-6 ') {
        @include assert {
          @include output {
            @include -space-x-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-6 ') {
        @include assert {
          @include output {
            @include -space-y-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-7 ') {
        @include assert {
          @include output {
            @include -space-x-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-7 ') {
        @include assert {
          @include output {
            @include -space-y-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-8 ') {
        @include assert {
          @include output {
            @include -space-x-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-8 ') {
        @include assert {
          @include output {
            @include -space-y-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-9 ') {
        @include assert {
          @include output {
            @include -space-x-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-9 ') {
        @include assert {
          @include output {
            @include -space-y-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-10 ') {
        @include assert {
          @include output {
            @include -space-x-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-10 ') {
        @include assert {
          @include output {
            @include -space-y-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-11 ') {
        @include assert {
          @include output {
            @include -space-x-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-11 ') {
        @include assert {
          @include output {
            @include -space-y-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-12 ') {
        @include assert {
          @include output {
            @include -space-x-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -3rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-12 ') {
        @include assert {
          @include output {
            @include -space-y-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -3rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-14 ') {
        @include assert {
          @include output {
            @include -space-x-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -3.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-14 ') {
        @include assert {
          @include output {
            @include -space-y-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -3.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-16 ') {
        @include assert {
          @include output {
            @include -space-x-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -4rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-16 ') {
        @include assert {
          @include output {
            @include -space-y-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -4rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-20 ') {
        @include assert {
          @include output {
            @include -space-x-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-20 ') {
        @include assert {
          @include output {
            @include -space-y-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-24 ') {
        @include assert {
          @include output {
            @include -space-x-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -6rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-24 ') {
        @include assert {
          @include output {
            @include -space-y-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -6rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-28 ') {
        @include assert {
          @include output {
            @include -space-x-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -7rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-28 ') {
        @include assert {
          @include output {
            @include -space-y-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -7rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-32 ') {
        @include assert {
          @include output {
            @include -space-x-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -8rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-32 ') {
        @include assert {
          @include output {
            @include -space-y-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -8rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-36 ') {
        @include assert {
          @include output {
            @include -space-x-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -9rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-36 ') {
        @include assert {
          @include output {
            @include -space-y-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -9rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-40 ') {
        @include assert {
          @include output {
            @include -space-x-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -10rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-40 ') {
        @include assert {
          @include output {
            @include -space-y-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -10rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-44 ') {
        @include assert {
          @include output {
            @include -space-x-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -11rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-44 ') {
        @include assert {
          @include output {
            @include -space-y-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -11rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-48 ') {
        @include assert {
          @include output {
            @include -space-x-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -12rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-48 ') {
        @include assert {
          @include output {
            @include -space-y-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -12rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-52 ') {
        @include assert {
          @include output {
            @include -space-x-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -13rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-52 ') {
        @include assert {
          @include output {
            @include -space-y-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -13rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-56 ') {
        @include assert {
          @include output {
            @include -space-x-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -14rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-56 ') {
        @include assert {
          @include output {
            @include -space-y-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -14rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-60 ') {
        @include assert {
          @include output {
            @include -space-x-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -15rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-60 ') {
        @include assert {
          @include output {
            @include -space-y-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -15rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-64 ') {
        @include assert {
          @include output {
            @include -space-x-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -16rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-64 ') {
        @include assert {
          @include output {
            @include -space-y-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -16rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-72 ') {
        @include assert {
          @include output {
            @include -space-x-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -18rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-72 ') {
        @include assert {
          @include output {
            @include -space-y-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -18rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-80 ') {
        @include assert {
          @include output {
            @include -space-x-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -20rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-80 ') {
        @include assert {
          @include output {
            @include -space-y-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -20rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-96 ') {
        @include assert {
          @include output {
            @include -space-x-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -24rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it('-space-y-96 ') {
        @include assert {
          @include output {
            @include -space-y-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -24rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it('-space-x-px ') {
        @include assert {
          @include output {
            @include -space-x-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it('-space-y-px ') {
        @include assert {
          @include output {
            @include -space-y-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it('space-y-reverse ') {
        @include assert {
          @include output {
            @include -space-y-4;
            @include space-y-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1rem;
              margin-bottom: -0rem;
            }

            > * ~ * {
              margin-top: -0rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it('space-x-reverse ') {
        @include assert {
          @include output {
            @include -space-x-4;
            @include space-x-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1rem;
              margin-right: -0rem;
            }

            > * ~ * {
              margin-left: -0rem;
              margin-right: -1rem;
            }
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:space-x-0 ') {
        @include assert {
          @include output {
            @include sm\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-0 ') {
        @include assert {
          @include output {
            @include sm\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-0\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-0\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-1 ') {
        @include assert {
          @include output {
            @include sm\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-1 ') {
        @include assert {
          @include output {
            @include sm\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-1\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-1\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-2 ') {
        @include assert {
          @include output {
            @include sm\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-2 ') {
        @include assert {
          @include output {
            @include sm\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-2\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-2\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-3 ') {
        @include assert {
          @include output {
            @include sm\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-3 ') {
        @include assert {
          @include output {
            @include sm\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-3\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-3\.5 ') {
        @include assert {
          @include output {
            @include sm\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-4 ') {
        @include assert {
          @include output {
            @include sm\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-4 ') {
        @include assert {
          @include output {
            @include sm\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-5 ') {
        @include assert {
          @include output {
            @include sm\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-5 ') {
        @include assert {
          @include output {
            @include sm\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-6 ') {
        @include assert {
          @include output {
            @include sm\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-6 ') {
        @include assert {
          @include output {
            @include sm\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-7 ') {
        @include assert {
          @include output {
            @include sm\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-7 ') {
        @include assert {
          @include output {
            @include sm\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-8 ') {
        @include assert {
          @include output {
            @include sm\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-8 ') {
        @include assert {
          @include output {
            @include sm\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-9 ') {
        @include assert {
          @include output {
            @include sm\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-9 ') {
        @include assert {
          @include output {
            @include sm\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-10 ') {
        @include assert {
          @include output {
            @include sm\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-10 ') {
        @include assert {
          @include output {
            @include sm\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-11 ') {
        @include assert {
          @include output {
            @include sm\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-11 ') {
        @include assert {
          @include output {
            @include sm\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-12 ') {
        @include assert {
          @include output {
            @include sm\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-12 ') {
        @include assert {
          @include output {
            @include sm\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-14 ') {
        @include assert {
          @include output {
            @include sm\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-14 ') {
        @include assert {
          @include output {
            @include sm\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-16 ') {
        @include assert {
          @include output {
            @include sm\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-16 ') {
        @include assert {
          @include output {
            @include sm\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-20 ') {
        @include assert {
          @include output {
            @include sm\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-20 ') {
        @include assert {
          @include output {
            @include sm\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-24 ') {
        @include assert {
          @include output {
            @include sm\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-24 ') {
        @include assert {
          @include output {
            @include sm\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-28 ') {
        @include assert {
          @include output {
            @include sm\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-28 ') {
        @include assert {
          @include output {
            @include sm\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-32 ') {
        @include assert {
          @include output {
            @include sm\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-32 ') {
        @include assert {
          @include output {
            @include sm\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-36 ') {
        @include assert {
          @include output {
            @include sm\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-36 ') {
        @include assert {
          @include output {
            @include sm\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-40 ') {
        @include assert {
          @include output {
            @include sm\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-40 ') {
        @include assert {
          @include output {
            @include sm\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-44 ') {
        @include assert {
          @include output {
            @include sm\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-44 ') {
        @include assert {
          @include output {
            @include sm\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-48 ') {
        @include assert {
          @include output {
            @include sm\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-48 ') {
        @include assert {
          @include output {
            @include sm\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-52 ') {
        @include assert {
          @include output {
            @include sm\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-52 ') {
        @include assert {
          @include output {
            @include sm\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-56 ') {
        @include assert {
          @include output {
            @include sm\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-56 ') {
        @include assert {
          @include output {
            @include sm\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-60 ') {
        @include assert {
          @include output {
            @include sm\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-60 ') {
        @include assert {
          @include output {
            @include sm\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-64 ') {
        @include assert {
          @include output {
            @include sm\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-64 ') {
        @include assert {
          @include output {
            @include sm\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-72 ') {
        @include assert {
          @include output {
            @include sm\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-72 ') {
        @include assert {
          @include output {
            @include sm\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-80 ') {
        @include assert {
          @include output {
            @include sm\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-80 ') {
        @include assert {
          @include output {
            @include sm\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-96 ') {
        @include assert {
          @include output {
            @include sm\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-96 ') {
        @include assert {
          @include output {
            @include sm\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-px ') {
        @include assert {
          @include output {
            @include sm\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-px ') {
        @include assert {
          @include output {
            @include sm\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:space-y-reverse ') {
        @include assert {
          @include output {
            @include sm\:space-y-4;
            @include sm\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-reverse ') {
        @include assert {
          @include output {
            @include sm\:space-x-4;
            @include sm\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-0 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-0 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-1 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-1 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-2 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-2 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-3 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-3 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-4 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-4 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-5 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-5 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-6 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-6 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-7 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-7 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-8 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-8 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-9 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-9 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-10 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-10 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-11 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-11 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-12 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-12 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-14 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-14 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-16 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-16 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-20 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-20 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-24 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-24 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-28 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-28 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-32 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-32 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-36 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-36 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-40 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-40 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-44 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-44 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-48 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-48 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-52 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-52 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-56 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-56 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-60 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-60 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-64 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-64 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-72 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-72 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-80 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-80 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-96 ') {
        @include assert {
          @include output {
            @include sm\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-96 ') {
        @include assert {
          @include output {
            @include sm\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-px ') {
        @include assert {
          @include output {
            @include sm\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-px ') {
        @include assert {
          @include output {
            @include sm\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('md\:space-x-0 ') {
        @include assert {
          @include output {
            @include md\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('md\:space-y-0 ') {
        @include assert {
          @include output {
            @include md\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('md\:space-x-0\.5 ') {
        @include assert {
          @include output {
            @include md\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-0\.5 ') {
        @include assert {
          @include output {
            @include md\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-1 ') {
        @include assert {
          @include output {
            @include md\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-1 ') {
        @include assert {
          @include output {
            @include md\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-1\.5 ') {
        @include assert {
          @include output {
            @include md\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-1\.5 ') {
        @include assert {
          @include output {
            @include md\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-2 ') {
        @include assert {
          @include output {
            @include md\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-2 ') {
        @include assert {
          @include output {
            @include md\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-2\.5 ') {
        @include assert {
          @include output {
            @include md\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-2\.5 ') {
        @include assert {
          @include output {
            @include md\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-3 ') {
        @include assert {
          @include output {
            @include md\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-3 ') {
        @include assert {
          @include output {
            @include md\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-3\.5 ') {
        @include assert {
          @include output {
            @include md\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-3\.5 ') {
        @include assert {
          @include output {
            @include md\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-4 ') {
        @include assert {
          @include output {
            @include md\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-4 ') {
        @include assert {
          @include output {
            @include md\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-5 ') {
        @include assert {
          @include output {
            @include md\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-5 ') {
        @include assert {
          @include output {
            @include md\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-6 ') {
        @include assert {
          @include output {
            @include md\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-6 ') {
        @include assert {
          @include output {
            @include md\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-7 ') {
        @include assert {
          @include output {
            @include md\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-7 ') {
        @include assert {
          @include output {
            @include md\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-8 ') {
        @include assert {
          @include output {
            @include md\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-8 ') {
        @include assert {
          @include output {
            @include md\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-9 ') {
        @include assert {
          @include output {
            @include md\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-9 ') {
        @include assert {
          @include output {
            @include md\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-10 ') {
        @include assert {
          @include output {
            @include md\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-10 ') {
        @include assert {
          @include output {
            @include md\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-11 ') {
        @include assert {
          @include output {
            @include md\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-11 ') {
        @include assert {
          @include output {
            @include md\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-12 ') {
        @include assert {
          @include output {
            @include md\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-12 ') {
        @include assert {
          @include output {
            @include md\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-14 ') {
        @include assert {
          @include output {
            @include md\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-14 ') {
        @include assert {
          @include output {
            @include md\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-16 ') {
        @include assert {
          @include output {
            @include md\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-16 ') {
        @include assert {
          @include output {
            @include md\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-20 ') {
        @include assert {
          @include output {
            @include md\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-20 ') {
        @include assert {
          @include output {
            @include md\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-24 ') {
        @include assert {
          @include output {
            @include md\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-24 ') {
        @include assert {
          @include output {
            @include md\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-28 ') {
        @include assert {
          @include output {
            @include md\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-28 ') {
        @include assert {
          @include output {
            @include md\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-32 ') {
        @include assert {
          @include output {
            @include md\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-32 ') {
        @include assert {
          @include output {
            @include md\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-36 ') {
        @include assert {
          @include output {
            @include md\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-36 ') {
        @include assert {
          @include output {
            @include md\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-40 ') {
        @include assert {
          @include output {
            @include md\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-40 ') {
        @include assert {
          @include output {
            @include md\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-44 ') {
        @include assert {
          @include output {
            @include md\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-44 ') {
        @include assert {
          @include output {
            @include md\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-48 ') {
        @include assert {
          @include output {
            @include md\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-48 ') {
        @include assert {
          @include output {
            @include md\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-52 ') {
        @include assert {
          @include output {
            @include md\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-52 ') {
        @include assert {
          @include output {
            @include md\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-56 ') {
        @include assert {
          @include output {
            @include md\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-56 ') {
        @include assert {
          @include output {
            @include md\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-60 ') {
        @include assert {
          @include output {
            @include md\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-60 ') {
        @include assert {
          @include output {
            @include md\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-64 ') {
        @include assert {
          @include output {
            @include md\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-64 ') {
        @include assert {
          @include output {
            @include md\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-72 ') {
        @include assert {
          @include output {
            @include md\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-72 ') {
        @include assert {
          @include output {
            @include md\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-80 ') {
        @include assert {
          @include output {
            @include md\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-80 ') {
        @include assert {
          @include output {
            @include md\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-96 ') {
        @include assert {
          @include output {
            @include md\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-y-96 ') {
        @include assert {
          @include output {
            @include md\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-px ') {
        @include assert {
          @include output {
            @include md\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('md\:space-y-px ') {
        @include assert {
          @include output {
            @include md\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('md\:space-y-reverse ') {
        @include assert {
          @include output {
            @include md\:space-y-4;
            @include md\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it('md\:space-x-reverse ') {
        @include assert {
          @include output {
            @include md\:space-x-4;
            @include md\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-0 ') {
        @include assert {
          @include output {
            @include md\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-0 ') {
        @include assert {
          @include output {
            @include md\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-1 ') {
        @include assert {
          @include output {
            @include md\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-1 ') {
        @include assert {
          @include output {
            @include md\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-2 ') {
        @include assert {
          @include output {
            @include md\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-2 ') {
        @include assert {
          @include output {
            @include md\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-3 ') {
        @include assert {
          @include output {
            @include md\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-3 ') {
        @include assert {
          @include output {
            @include md\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include md\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-4 ') {
        @include assert {
          @include output {
            @include md\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-4 ') {
        @include assert {
          @include output {
            @include md\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-5 ') {
        @include assert {
          @include output {
            @include md\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-5 ') {
        @include assert {
          @include output {
            @include md\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-6 ') {
        @include assert {
          @include output {
            @include md\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-6 ') {
        @include assert {
          @include output {
            @include md\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-7 ') {
        @include assert {
          @include output {
            @include md\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-7 ') {
        @include assert {
          @include output {
            @include md\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-8 ') {
        @include assert {
          @include output {
            @include md\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-8 ') {
        @include assert {
          @include output {
            @include md\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-9 ') {
        @include assert {
          @include output {
            @include md\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-9 ') {
        @include assert {
          @include output {
            @include md\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-10 ') {
        @include assert {
          @include output {
            @include md\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-10 ') {
        @include assert {
          @include output {
            @include md\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-11 ') {
        @include assert {
          @include output {
            @include md\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-11 ') {
        @include assert {
          @include output {
            @include md\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-12 ') {
        @include assert {
          @include output {
            @include md\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-12 ') {
        @include assert {
          @include output {
            @include md\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-14 ') {
        @include assert {
          @include output {
            @include md\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-14 ') {
        @include assert {
          @include output {
            @include md\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-16 ') {
        @include assert {
          @include output {
            @include md\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-16 ') {
        @include assert {
          @include output {
            @include md\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-20 ') {
        @include assert {
          @include output {
            @include md\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-20 ') {
        @include assert {
          @include output {
            @include md\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-24 ') {
        @include assert {
          @include output {
            @include md\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-24 ') {
        @include assert {
          @include output {
            @include md\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-28 ') {
        @include assert {
          @include output {
            @include md\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-28 ') {
        @include assert {
          @include output {
            @include md\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-32 ') {
        @include assert {
          @include output {
            @include md\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-32 ') {
        @include assert {
          @include output {
            @include md\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-36 ') {
        @include assert {
          @include output {
            @include md\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-36 ') {
        @include assert {
          @include output {
            @include md\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-40 ') {
        @include assert {
          @include output {
            @include md\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-40 ') {
        @include assert {
          @include output {
            @include md\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-44 ') {
        @include assert {
          @include output {
            @include md\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-44 ') {
        @include assert {
          @include output {
            @include md\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-48 ') {
        @include assert {
          @include output {
            @include md\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-48 ') {
        @include assert {
          @include output {
            @include md\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-52 ') {
        @include assert {
          @include output {
            @include md\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-52 ') {
        @include assert {
          @include output {
            @include md\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-56 ') {
        @include assert {
          @include output {
            @include md\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-56 ') {
        @include assert {
          @include output {
            @include md\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-60 ') {
        @include assert {
          @include output {
            @include md\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-60 ') {
        @include assert {
          @include output {
            @include md\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-64 ') {
        @include assert {
          @include output {
            @include md\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-64 ') {
        @include assert {
          @include output {
            @include md\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-72 ') {
        @include assert {
          @include output {
            @include md\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-72 ') {
        @include assert {
          @include output {
            @include md\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-80 ') {
        @include assert {
          @include output {
            @include md\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-80 ') {
        @include assert {
          @include output {
            @include md\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-96 ') {
        @include assert {
          @include output {
            @include md\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-96 ') {
        @include assert {
          @include output {
            @include md\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-px ') {
        @include assert {
          @include output {
            @include md\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-px ') {
        @include assert {
          @include output {
            @include md\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-0 ') {
        @include assert {
          @include output {
            @include lg\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-0 ') {
        @include assert {
          @include output {
            @include lg\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-0\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-0\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-1 ') {
        @include assert {
          @include output {
            @include lg\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-1 ') {
        @include assert {
          @include output {
            @include lg\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-1\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-1\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-2 ') {
        @include assert {
          @include output {
            @include lg\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-2 ') {
        @include assert {
          @include output {
            @include lg\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-2\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-2\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-3 ') {
        @include assert {
          @include output {
            @include lg\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-3 ') {
        @include assert {
          @include output {
            @include lg\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-3\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-3\.5 ') {
        @include assert {
          @include output {
            @include lg\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-4 ') {
        @include assert {
          @include output {
            @include lg\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-4 ') {
        @include assert {
          @include output {
            @include lg\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-5 ') {
        @include assert {
          @include output {
            @include lg\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-5 ') {
        @include assert {
          @include output {
            @include lg\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-6 ') {
        @include assert {
          @include output {
            @include lg\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-6 ') {
        @include assert {
          @include output {
            @include lg\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-7 ') {
        @include assert {
          @include output {
            @include lg\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-7 ') {
        @include assert {
          @include output {
            @include lg\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-8 ') {
        @include assert {
          @include output {
            @include lg\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-8 ') {
        @include assert {
          @include output {
            @include lg\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-9 ') {
        @include assert {
          @include output {
            @include lg\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-9 ') {
        @include assert {
          @include output {
            @include lg\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-10 ') {
        @include assert {
          @include output {
            @include lg\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-10 ') {
        @include assert {
          @include output {
            @include lg\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-11 ') {
        @include assert {
          @include output {
            @include lg\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-11 ') {
        @include assert {
          @include output {
            @include lg\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-12 ') {
        @include assert {
          @include output {
            @include lg\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-12 ') {
        @include assert {
          @include output {
            @include lg\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-14 ') {
        @include assert {
          @include output {
            @include lg\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-14 ') {
        @include assert {
          @include output {
            @include lg\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-16 ') {
        @include assert {
          @include output {
            @include lg\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-16 ') {
        @include assert {
          @include output {
            @include lg\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-20 ') {
        @include assert {
          @include output {
            @include lg\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-20 ') {
        @include assert {
          @include output {
            @include lg\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-24 ') {
        @include assert {
          @include output {
            @include lg\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-24 ') {
        @include assert {
          @include output {
            @include lg\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-28 ') {
        @include assert {
          @include output {
            @include lg\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-28 ') {
        @include assert {
          @include output {
            @include lg\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-32 ') {
        @include assert {
          @include output {
            @include lg\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-32 ') {
        @include assert {
          @include output {
            @include lg\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-36 ') {
        @include assert {
          @include output {
            @include lg\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-36 ') {
        @include assert {
          @include output {
            @include lg\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-40 ') {
        @include assert {
          @include output {
            @include lg\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-40 ') {
        @include assert {
          @include output {
            @include lg\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-44 ') {
        @include assert {
          @include output {
            @include lg\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-44 ') {
        @include assert {
          @include output {
            @include lg\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-48 ') {
        @include assert {
          @include output {
            @include lg\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-48 ') {
        @include assert {
          @include output {
            @include lg\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-52 ') {
        @include assert {
          @include output {
            @include lg\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-52 ') {
        @include assert {
          @include output {
            @include lg\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-56 ') {
        @include assert {
          @include output {
            @include lg\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-56 ') {
        @include assert {
          @include output {
            @include lg\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-60 ') {
        @include assert {
          @include output {
            @include lg\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-60 ') {
        @include assert {
          @include output {
            @include lg\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-64 ') {
        @include assert {
          @include output {
            @include lg\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-64 ') {
        @include assert {
          @include output {
            @include lg\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-72 ') {
        @include assert {
          @include output {
            @include lg\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-72 ') {
        @include assert {
          @include output {
            @include lg\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-80 ') {
        @include assert {
          @include output {
            @include lg\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-80 ') {
        @include assert {
          @include output {
            @include lg\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-96 ') {
        @include assert {
          @include output {
            @include lg\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-96 ') {
        @include assert {
          @include output {
            @include lg\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-px ') {
        @include assert {
          @include output {
            @include lg\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-px ') {
        @include assert {
          @include output {
            @include lg\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-reverse ') {
        @include assert {
          @include output {
            @include lg\:space-y-4;
            @include lg\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-reverse ') {
        @include assert {
          @include output {
            @include lg\:space-x-4;
            @include lg\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-0 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-0 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-1 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-1 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-2 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-2 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-3 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-3 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-4 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-4 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-5 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-5 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-6 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-6 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-7 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-7 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-8 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-8 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-9 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-9 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-10 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-10 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-11 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-11 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-12 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-12 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-14 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-14 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-16 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-16 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-20 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-20 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-24 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-24 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-28 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-28 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-32 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-32 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-36 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-36 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-40 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-40 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-44 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-44 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-48 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-48 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-52 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-52 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-56 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-56 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-60 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-60 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-64 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-64 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-72 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-72 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-80 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-80 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-96 ') {
        @include assert {
          @include output {
            @include lg\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-96 ') {
        @include assert {
          @include output {
            @include lg\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-px ') {
        @include assert {
          @include output {
            @include lg\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-px ') {
        @include assert {
          @include output {
            @include lg\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-0 ') {
        @include assert {
          @include output {
            @include xl\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-0 ') {
        @include assert {
          @include output {
            @include xl\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-0\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-0\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-1 ') {
        @include assert {
          @include output {
            @include xl\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-1 ') {
        @include assert {
          @include output {
            @include xl\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-1\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-1\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-2 ') {
        @include assert {
          @include output {
            @include xl\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-2 ') {
        @include assert {
          @include output {
            @include xl\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-2\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-2\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-3 ') {
        @include assert {
          @include output {
            @include xl\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-3 ') {
        @include assert {
          @include output {
            @include xl\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-3\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-3\.5 ') {
        @include assert {
          @include output {
            @include xl\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-4 ') {
        @include assert {
          @include output {
            @include xl\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-4 ') {
        @include assert {
          @include output {
            @include xl\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-5 ') {
        @include assert {
          @include output {
            @include xl\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-5 ') {
        @include assert {
          @include output {
            @include xl\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-6 ') {
        @include assert {
          @include output {
            @include xl\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-6 ') {
        @include assert {
          @include output {
            @include xl\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-7 ') {
        @include assert {
          @include output {
            @include xl\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-7 ') {
        @include assert {
          @include output {
            @include xl\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-8 ') {
        @include assert {
          @include output {
            @include xl\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-8 ') {
        @include assert {
          @include output {
            @include xl\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-9 ') {
        @include assert {
          @include output {
            @include xl\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-9 ') {
        @include assert {
          @include output {
            @include xl\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-10 ') {
        @include assert {
          @include output {
            @include xl\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-10 ') {
        @include assert {
          @include output {
            @include xl\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-11 ') {
        @include assert {
          @include output {
            @include xl\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-11 ') {
        @include assert {
          @include output {
            @include xl\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-12 ') {
        @include assert {
          @include output {
            @include xl\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-12 ') {
        @include assert {
          @include output {
            @include xl\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-14 ') {
        @include assert {
          @include output {
            @include xl\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-14 ') {
        @include assert {
          @include output {
            @include xl\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-16 ') {
        @include assert {
          @include output {
            @include xl\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-16 ') {
        @include assert {
          @include output {
            @include xl\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-20 ') {
        @include assert {
          @include output {
            @include xl\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-20 ') {
        @include assert {
          @include output {
            @include xl\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-24 ') {
        @include assert {
          @include output {
            @include xl\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-24 ') {
        @include assert {
          @include output {
            @include xl\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-28 ') {
        @include assert {
          @include output {
            @include xl\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-28 ') {
        @include assert {
          @include output {
            @include xl\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-32 ') {
        @include assert {
          @include output {
            @include xl\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-32 ') {
        @include assert {
          @include output {
            @include xl\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-36 ') {
        @include assert {
          @include output {
            @include xl\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-36 ') {
        @include assert {
          @include output {
            @include xl\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-40 ') {
        @include assert {
          @include output {
            @include xl\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-40 ') {
        @include assert {
          @include output {
            @include xl\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-44 ') {
        @include assert {
          @include output {
            @include xl\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-44 ') {
        @include assert {
          @include output {
            @include xl\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-48 ') {
        @include assert {
          @include output {
            @include xl\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-48 ') {
        @include assert {
          @include output {
            @include xl\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-52 ') {
        @include assert {
          @include output {
            @include xl\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-52 ') {
        @include assert {
          @include output {
            @include xl\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-56 ') {
        @include assert {
          @include output {
            @include xl\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-56 ') {
        @include assert {
          @include output {
            @include xl\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-60 ') {
        @include assert {
          @include output {
            @include xl\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-60 ') {
        @include assert {
          @include output {
            @include xl\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-64 ') {
        @include assert {
          @include output {
            @include xl\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-64 ') {
        @include assert {
          @include output {
            @include xl\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-72 ') {
        @include assert {
          @include output {
            @include xl\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-72 ') {
        @include assert {
          @include output {
            @include xl\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-80 ') {
        @include assert {
          @include output {
            @include xl\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-80 ') {
        @include assert {
          @include output {
            @include xl\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-96 ') {
        @include assert {
          @include output {
            @include xl\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-96 ') {
        @include assert {
          @include output {
            @include xl\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-px ') {
        @include assert {
          @include output {
            @include xl\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-px ') {
        @include assert {
          @include output {
            @include xl\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-reverse ') {
        @include assert {
          @include output {
            @include xl\:space-y-4;
            @include xl\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-reverse ') {
        @include assert {
          @include output {
            @include xl\:space-x-4;
            @include xl\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-0 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-0 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-1 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-1 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-2 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-2 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-3 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-3 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-4 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-4 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-5 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-5 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-6 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-6 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-7 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-7 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-8 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-8 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-9 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-9 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-10 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-10 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-11 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-11 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-12 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-12 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-14 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-14 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-16 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-16 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-20 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-20 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-24 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-24 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-28 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-28 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-32 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-32 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-36 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-36 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-40 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-40 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-44 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-44 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-48 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-48 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-52 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-52 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-56 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-56 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-60 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-60 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-64 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-64 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-72 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-72 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-80 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-80 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-96 ') {
        @include assert {
          @include output {
            @include xl\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-96 ') {
        @include assert {
          @include output {
            @include xl\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-px ') {
        @include assert {
          @include output {
            @include xl\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-px ') {
        @include assert {
          @include output {
            @include xl\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-0 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-0 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-0\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-0\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-1 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-1 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-1\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-1\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-2 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-2 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-2\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-2\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-3 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-3 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-3\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-3\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-4 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-4 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-5 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-6 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-6 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-7 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-7 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-8 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-8 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-9 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-9 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-10 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-10 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-11 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-11 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-12 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-12 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-14 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-14 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-16 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-16 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-20 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-20 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-24 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-24 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-28 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-28 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-32 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-32 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-36 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-36 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-40 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-40 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-44 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-44 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-48 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-48 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-52 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-52 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-56 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-56 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-60 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-60 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-64 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-64 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-72 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-72 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-80 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-80 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-96 ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-96 ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-px ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-px ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-reverse ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-4;
            @include \2xl\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-reverse ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-4;
            @include \2xl\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-0 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-0 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-0\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-0\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-1 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-1 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-1\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-1\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-2 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-2 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-2\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-2\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-3 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-3 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-3\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-3\.5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-4 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-4 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-5 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-6 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-6 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-7 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-7 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-8 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-8 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-9 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-9 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-10 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-10 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-11 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-11 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-12 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-12 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-14 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-14 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-16 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-16 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-20 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-20 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-24 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-24 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-28 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-28 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-32 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-32 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-36 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-36 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-40 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-40 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-44 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-44 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-48 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-48 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-52 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-52 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-56 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-56 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-60 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-60 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-64 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-64 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-72 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-72 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-80 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-80 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-96 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-96 ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-px ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-px ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('space-y-(5px) ') {
        @include assert {
          @include output {
            @include space-y-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 5px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it('space-x-(5px) ') {
        @include assert {
          @include output {
            @include space-x-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 5px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it('-space-y-(5px) ') {
        @include assert {
          @include output {
            @include -space-y-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -5px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it('-space-x-(5px) ') {
        @include assert {
          @include output {
            @include -space-x-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -5px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it('sm\:space-y-(5px) ') {
        @include assert {
          @include output {
            @include sm\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:space-x-(5px) ') {
        @include assert {
          @include output {
            @include sm\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('sm\:-space-y-(5px) ') {
        @include assert {
          @include output {
            @include sm\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('sm\:-space-x-(5px) ') {
        @include assert {
          @include output {
            @include sm\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('md\:space-y-(5px) ') {
        @include assert {
          @include output {
            @include md\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('md\:space-x-(5px) ') {
        @include assert {
          @include output {
            @include md\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('md\:-space-y-(5px) ') {
        @include assert {
          @include output {
            @include md\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('md\:-space-x-(5px) ') {
        @include assert {
          @include output {
            @include md\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-y-(5px) ') {
        @include assert {
          @include output {
            @include lg\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:space-x-(5px) ') {
        @include assert {
          @include output {
            @include lg\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('lg\:-space-y-(5px) ') {
        @include assert {
          @include output {
            @include lg\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('lg\:-space-x-(5px) ') {
        @include assert {
          @include output {
            @include lg\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-y-(5px) ') {
        @include assert {
          @include output {
            @include xl\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:space-x-(5px) ') {
        @include assert {
          @include output {
            @include xl\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('xl\:-space-y-(5px) ') {
        @include assert {
          @include output {
            @include xl\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('xl\:-space-x-(5px) ') {
        @include assert {
          @include output {
            @include xl\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-y-(5px) ') {
        @include assert {
          @include output {
            @include \2xl\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:space-x-(5px) ') {
        @include assert {
          @include output {
            @include \2xl\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-y-(5px) ') {
        @include assert {
          @include output {
            @include \2xl\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it('2xl\:-space-x-(5px) ') {
        @include assert {
          @include output {
            @include \2xl\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }
    }
  }
}
