@use '../../mode0' as *;
@use 'true' as *;

@include describe('3.Spacing') {
  @include describe('Padding') {
    @include describe('Basic') {
      @include it('p-0') {
        @include assert {
          @include output {
            @include p-0;
            @include reset;
          }

          @include expect {
            padding: 0px;
          }
        }
      }

      @include it('px-0') {
        @include assert {
          @include output {
            @include px-0;
            @include reset;
          }

          @include expect {
            padding-left: 0px;
            padding-right: 0px;
          }
        }
      }

      @include it('py-0') {
        @include assert {
          @include output {
            @include py-0;
            @include reset;
          }

          @include expect {
            padding-top: 0px;
            padding-bottom: 0px;
          }
        }
      }

      @include it('ps-0') {
        @include assert {
          @include output {
            @include ps-0;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0px;
          }
        }
      }

      @include it('pe-0') {
        @include assert {
          @include output {
            @include pe-0;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0px;
          }
        }
      }

      @include it('pt-0') {
        @include assert {
          @include output {
            @include pt-0;
            @include reset;
          }

          @include expect {
            padding-top: 0px;
          }
        }
      }

      @include it('pr-0') {
        @include assert {
          @include output {
            @include pr-0;
            @include reset;
          }

          @include expect {
            padding-right: 0px;
          }
        }
      }

      @include it('pb-0') {
        @include assert {
          @include output {
            @include pb-0;
            @include reset;
          }

          @include expect {
            padding-bottom: 0px;
          }
        }
      }

      @include it('pl-0') {
        @include assert {
          @include output {
            @include pl-0;
            @include reset;
          }

          @include expect {
            padding-left: 0px;
          }
        }
      }

      @include it('p-px') {
        @include assert {
          @include output {
            @include p-px;
            @include reset;
          }

          @include expect {
            padding: 1px;
          }
        }
      }

      @include it('px-px') {
        @include assert {
          @include output {
            @include px-px;
            @include reset;
          }

          @include expect {
            padding-left: 1px;
            padding-right: 1px;
          }
        }
      }

      @include it('py-px') {
        @include assert {
          @include output {
            @include py-px;
            @include reset;
          }

          @include expect {
            padding-top: 1px;
            padding-bottom: 1px;
          }
        }
      }

      @include it('ps-px') {
        @include assert {
          @include output {
            @include ps-px;
            @include reset;
          }

          @include expect {
            padding-inline-start: 1px;
          }
        }
      }

      @include it('pe-px') {
        @include assert {
          @include output {
            @include pe-px;
            @include reset;
          }

          @include expect {
            padding-inline-end: 1px;
          }
        }
      }

      @include it('pt-px') {
        @include assert {
          @include output {
            @include pt-px;
            @include reset;
          }

          @include expect {
            padding-top: 1px;
          }
        }
      }

      @include it('pr-px') {
        @include assert {
          @include output {
            @include pr-px;
            @include reset;
          }

          @include expect {
            padding-right: 1px;
          }
        }
      }

      @include it('pb-px') {
        @include assert {
          @include output {
            @include pb-px;
            @include reset;
          }

          @include expect {
            padding-bottom: 1px;
          }
        }
      }

      @include it('pl-px') {
        @include assert {
          @include output {
            @include pl-px;
            @include reset;
          }

          @include expect {
            padding-left: 1px;
          }
        }
      }

      @include it('p-0\.5') {
        @include assert {
          @include output {
            @include p-0\.5;
            @include reset;
          }

          @include expect {
            padding: 0.125rem;
          }
        }
      }

      @include it('px-0\.5') {
        @include assert {
          @include output {
            @include px-0\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.125rem;
            padding-right: 0.125rem;
          }
        }
      }

      @include it('py-0\.5') {
        @include assert {
          @include output {
            @include py-0\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.125rem;
            padding-bottom: 0.125rem;
          }
        }
      }

      @include it('ps-0\.5') {
        @include assert {
          @include output {
            @include ps-0\.5;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.125rem;
          }
        }
      }

      @include it('pe-0\.5') {
        @include assert {
          @include output {
            @include pe-0\.5;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.125rem;
          }
        }
      }

      @include it('pt-0\.5') {
        @include assert {
          @include output {
            @include pt-0\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.125rem;
          }
        }
      }

      @include it('pr-0\.5') {
        @include assert {
          @include output {
            @include pr-0\.5;
            @include reset;
          }

          @include expect {
            padding-right: 0.125rem;
          }
        }
      }

      @include it('pb-0\.5') {
        @include assert {
          @include output {
            @include pb-0\.5;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.125rem;
          }
        }
      }

      @include it('pl-0\.5') {
        @include assert {
          @include output {
            @include pl-0\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.125rem;
          }
        }
      }

      @include it('p-1') {
        @include assert {
          @include output {
            @include p-1;
            @include reset;
          }

          @include expect {
            padding: 0.25rem;
          }
        }
      }

      @include it('px-1') {
        @include assert {
          @include output {
            @include px-1;
            @include reset;
          }

          @include expect {
            padding-left: 0.25rem;
            padding-right: 0.25rem;
          }
        }
      }

      @include it('py-1') {
        @include assert {
          @include output {
            @include py-1;
            @include reset;
          }

          @include expect {
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
          }
        }
      }

      @include it('ps-1') {
        @include assert {
          @include output {
            @include ps-1;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.25rem;
          }
        }
      }

      @include it('pe-1') {
        @include assert {
          @include output {
            @include pe-1;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.25rem;
          }
        }
      }

      @include it('pt-1') {
        @include assert {
          @include output {
            @include pt-1;
            @include reset;
          }

          @include expect {
            padding-top: 0.25rem;
          }
        }
      }

      @include it('pr-1') {
        @include assert {
          @include output {
            @include pr-1;
            @include reset;
          }

          @include expect {
            padding-right: 0.25rem;
          }
        }
      }

      @include it('pb-1') {
        @include assert {
          @include output {
            @include pb-1;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.25rem;
          }
        }
      }

      @include it('pl-1') {
        @include assert {
          @include output {
            @include pl-1;
            @include reset;
          }

          @include expect {
            padding-left: 0.25rem;
          }
        }
      }

      @include it('p-1\.5') {
        @include assert {
          @include output {
            @include p-1\.5;
            @include reset;
          }

          @include expect {
            padding: 0.375rem;
          }
        }
      }

      @include it('px-1\.5') {
        @include assert {
          @include output {
            @include px-1\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.375rem;
            padding-right: 0.375rem;
          }
        }
      }

      @include it('py-1\.5') {
        @include assert {
          @include output {
            @include py-1\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.375rem;
            padding-bottom: 0.375rem;
          }
        }
      }

      @include it('ps-1\.5') {
        @include assert {
          @include output {
            @include ps-1\.5;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.375rem;
          }
        }
      }

      @include it('pe-1\.5') {
        @include assert {
          @include output {
            @include pe-1\.5;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.375rem;
          }
        }
      }

      @include it('pt-1\.5') {
        @include assert {
          @include output {
            @include pt-1\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.375rem;
          }
        }
      }

      @include it('pr-1\.5') {
        @include assert {
          @include output {
            @include pr-1\.5;
            @include reset;
          }

          @include expect {
            padding-right: 0.375rem;
          }
        }
      }

      @include it('pb-1\.5') {
        @include assert {
          @include output {
            @include pb-1\.5;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.375rem;
          }
        }
      }

      @include it('pl-1\.5') {
        @include assert {
          @include output {
            @include pl-1\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.375rem;
          }
        }
      }

      @include it('p-2') {
        @include assert {
          @include output {
            @include p-2;
            @include reset;
          }

          @include expect {
            padding: 0.5rem;
          }
        }
      }

      @include it('px-2') {
        @include assert {
          @include output {
            @include px-2;
            @include reset;
          }

          @include expect {
            padding-left: 0.5rem;
            padding-right: 0.5rem;
          }
        }
      }

      @include it('py-2') {
        @include assert {
          @include output {
            @include py-2;
            @include reset;
          }

          @include expect {
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
          }
        }
      }

      @include it('ps-2') {
        @include assert {
          @include output {
            @include ps-2;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.5rem;
          }
        }
      }

      @include it('pe-2') {
        @include assert {
          @include output {
            @include pe-2;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.5rem;
          }
        }
      }

      @include it('pt-2') {
        @include assert {
          @include output {
            @include pt-2;
            @include reset;
          }

          @include expect {
            padding-top: 0.5rem;
          }
        }
      }

      @include it('pr-2') {
        @include assert {
          @include output {
            @include pr-2;
            @include reset;
          }

          @include expect {
            padding-right: 0.5rem;
          }
        }
      }

      @include it('pb-2') {
        @include assert {
          @include output {
            @include pb-2;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.5rem;
          }
        }
      }

      @include it('pl-2') {
        @include assert {
          @include output {
            @include pl-2;
            @include reset;
          }

          @include expect {
            padding-left: 0.5rem;
          }
        }
      }

      @include it('p-2\.5') {
        @include assert {
          @include output {
            @include p-2\.5;
            @include reset;
          }

          @include expect {
            padding: 0.625rem;
          }
        }
      }

      @include it('px-2\.5') {
        @include assert {
          @include output {
            @include px-2\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.625rem;
            padding-right: 0.625rem;
          }
        }
      }

      @include it('py-2\.5') {
        @include assert {
          @include output {
            @include py-2\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.625rem;
            padding-bottom: 0.625rem;
          }
        }
      }

      @include it('ps-2\.5') {
        @include assert {
          @include output {
            @include ps-2\.5;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.625rem;
          }
        }
      }

      @include it('pe-2\.5') {
        @include assert {
          @include output {
            @include pe-2\.5;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.625rem;
          }
        }
      }

      @include it('pt-2\.5') {
        @include assert {
          @include output {
            @include pt-2\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.625rem;
          }
        }
      }

      @include it('pr-2\.5') {
        @include assert {
          @include output {
            @include pr-2\.5;
            @include reset;
          }

          @include expect {
            padding-right: 0.625rem;
          }
        }
      }

      @include it('pb-2\.5') {
        @include assert {
          @include output {
            @include pb-2\.5;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.625rem;
          }
        }
      }

      @include it('pl-2\.5') {
        @include assert {
          @include output {
            @include pl-2\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.625rem;
          }
        }
      }

      @include it('p-3') {
        @include assert {
          @include output {
            @include p-3;
            @include reset;
          }

          @include expect {
            padding: 0.75rem;
          }
        }
      }

      @include it('px-3') {
        @include assert {
          @include output {
            @include px-3;
            @include reset;
          }

          @include expect {
            padding-left: 0.75rem;
            padding-right: 0.75rem;
          }
        }
      }

      @include it('py-3') {
        @include assert {
          @include output {
            @include py-3;
            @include reset;
          }

          @include expect {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
          }
        }
      }

      @include it('ps-3') {
        @include assert {
          @include output {
            @include ps-3;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.75rem;
          }
        }
      }

      @include it('pe-3') {
        @include assert {
          @include output {
            @include pe-3;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.75rem;
          }
        }
      }

      @include it('pt-3') {
        @include assert {
          @include output {
            @include pt-3;
            @include reset;
          }

          @include expect {
            padding-top: 0.75rem;
          }
        }
      }

      @include it('pr-3') {
        @include assert {
          @include output {
            @include pr-3;
            @include reset;
          }

          @include expect {
            padding-right: 0.75rem;
          }
        }
      }

      @include it('pb-3') {
        @include assert {
          @include output {
            @include pb-3;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.75rem;
          }
        }
      }

      @include it('pl-3') {
        @include assert {
          @include output {
            @include pl-3;
            @include reset;
          }

          @include expect {
            padding-left: 0.75rem;
          }
        }
      }

      @include it('p-3\.5') {
        @include assert {
          @include output {
            @include p-3\.5;
            @include reset;
          }

          @include expect {
            padding: 0.875rem;
          }
        }
      }

      @include it('px-3\.5') {
        @include assert {
          @include output {
            @include px-3\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.875rem;
            padding-right: 0.875rem;
          }
        }
      }

      @include it('py-3\.5') {
        @include assert {
          @include output {
            @include py-3\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.875rem;
            padding-bottom: 0.875rem;
          }
        }
      }

      @include it('ps-3\.5') {
        @include assert {
          @include output {
            @include ps-3\.5;
            @include reset;
          }

          @include expect {
            padding-inline-start: 0.875rem;
          }
        }
      }

      @include it('pe-3\.5') {
        @include assert {
          @include output {
            @include pe-3\.5;
            @include reset;
          }

          @include expect {
            padding-inline-end: 0.875rem;
          }
        }
      }

      @include it('pt-3\.5') {
        @include assert {
          @include output {
            @include pt-3\.5;
            @include reset;
          }

          @include expect {
            padding-top: 0.875rem;
          }
        }
      }

      @include it('pr-3\.5') {
        @include assert {
          @include output {
            @include pr-3\.5;
            @include reset;
          }

          @include expect {
            padding-right: 0.875rem;
          }
        }
      }

      @include it('pb-3\.5') {
        @include assert {
          @include output {
            @include pb-3\.5;
            @include reset;
          }

          @include expect {
            padding-bottom: 0.875rem;
          }
        }
      }

      @include it('pl-3\.5') {
        @include assert {
          @include output {
            @include pl-3\.5;
            @include reset;
          }

          @include expect {
            padding-left: 0.875rem;
          }
        }
      }

      @include it('p-4') {
        @include assert {
          @include output {
            @include p-4;
            @include reset;
          }

          @include expect {
            padding: 1rem;
          }
        }
      }

      @include it('px-4') {
        @include assert {
          @include output {
            @include px-4;
            @include reset;
          }

          @include expect {
            padding-left: 1rem;
            padding-right: 1rem;
          }
        }
      }

      @include it('py-4') {
        @include assert {
          @include output {
            @include py-4;
            @include reset;
          }

          @include expect {
            padding-top: 1rem;
            padding-bottom: 1rem;
          }
        }
      }

      @include it('ps-4') {
        @include assert {
          @include output {
            @include ps-4;
            @include reset;
          }

          @include expect {
            padding-inline-start: 1rem;
          }
        }
      }

      @include it('pe-4') {
        @include assert {
          @include output {
            @include pe-4;
            @include reset;
          }

          @include expect {
            padding-inline-end: 1rem;
          }
        }
      }

      @include it('pt-4') {
        @include assert {
          @include output {
            @include pt-4;
            @include reset;
          }

          @include expect {
            padding-top: 1rem;
          }
        }
      }

      @include it('pr-4') {
        @include assert {
          @include output {
            @include pr-4;
            @include reset;
          }

          @include expect {
            padding-right: 1rem;
          }
        }
      }

      @include it('pb-4') {
        @include assert {
          @include output {
            @include pb-4;
            @include reset;
          }

          @include expect {
            padding-bottom: 1rem;
          }
        }
      }

      @include it('pl-4') {
        @include assert {
          @include output {
            @include pl-4;
            @include reset;
          }

          @include expect {
            padding-left: 1rem;
          }
        }
      }

      @include it('p-5') {
        @include assert {
          @include output {
            @include p-5;
            @include reset;
          }

          @include expect {
            padding: 1.25rem;
          }
        }
      }

      @include it('px-5') {
        @include assert {
          @include output {
            @include px-5;
            @include reset;
          }

          @include expect {
            padding-left: 1.25rem;
            padding-right: 1.25rem;
          }
        }
      }

      @include it('py-5') {
        @include assert {
          @include output {
            @include py-5;
            @include reset;
          }

          @include expect {
            padding-top: 1.25rem;
            padding-bottom: 1.25rem;
          }
        }
      }

      @include it('ps-5') {
        @include assert {
          @include output {
            @include ps-5;
            @include reset;
          }

          @include expect {
            padding-inline-start: 1.25rem;
          }
        }
      }

      @include it('pe-5') {
        @include assert {
          @include output {
            @include pe-5;
            @include reset;
          }

          @include expect {
            padding-inline-end: 1.25rem;
          }
        }
      }

      @include it('pt-5') {
        @include assert {
          @include output {
            @include pt-5;
            @include reset;
          }

          @include expect {
            padding-top: 1.25rem;
          }
        }
      }

      @include it('pr-5') {
        @include assert {
          @include output {
            @include pr-5;
            @include reset;
          }

          @include expect {
            padding-right: 1.25rem;
          }
        }
      }

      @include it('pb-5') {
        @include assert {
          @include output {
            @include pb-5;
            @include reset;
          }

          @include expect {
            padding-bottom: 1.25rem;
          }
        }
      }

      @include it('pl-5') {
        @include assert {
          @include output {
            @include pl-5;
            @include reset;
          }

          @include expect {
            padding-left: 1.25rem;
          }
        }
      }

      @include it('p-6') {
        @include assert {
          @include output {
            @include p-6;
            @include reset;
          }

          @include expect {
            padding: 1.5rem;
          }
        }
      }

      @include it('px-6') {
        @include assert {
          @include output {
            @include px-6;
            @include reset;
          }

          @include expect {
            padding-left: 1.5rem;
            padding-right: 1.5rem;
          }
        }
      }

      @include it('py-6') {
        @include assert {
          @include output {
            @include py-6;
            @include reset;
          }

          @include expect {
            padding-top: 1.5rem;
            padding-bottom: 1.5rem;
          }
        }
      }

      @include it('ps-6') {
        @include assert {
          @include output {
            @include ps-6;
            @include reset;
          }

          @include expect {
            padding-inline-start: 1.5rem;
          }
        }
      }

      @include it('pe-6') {
        @include assert {
          @include output {
            @include pe-6;
            @include reset;
          }

          @include expect {
            padding-inline-end: 1.5rem;
          }
        }
      }

      @include it('pt-6') {
        @include assert {
          @include output {
            @include pt-6;
            @include reset;
          }

          @include expect {
            padding-top: 1.5rem;
          }
        }
      }

      @include it('pr-6') {
        @include assert {
          @include output {
            @include pr-6;
            @include reset;
          }

          @include expect {
            padding-right: 1.5rem;
          }
        }
      }

      @include it('pb-6') {
        @include assert {
          @include output {
            @include pb-6;
            @include reset;
          }

          @include expect {
            padding-bottom: 1.5rem;
          }
        }
      }

      @include it('pl-6') {
        @include assert {
          @include output {
            @include pl-6;
            @include reset;
          }

          @include expect {
            padding-left: 1.5rem;
          }
        }
      }

      @include it('p-7') {
        @include assert {
          @include output {
            @include p-7;
            @include reset;
          }

          @include expect {
            padding: 1.75rem;
          }
        }
      }

      @include it('px-7') {
        @include assert {
          @include output {
            @include px-7;
            @include reset;
          }

          @include expect {
            padding-left: 1.75rem;
            padding-right: 1.75rem;
          }
        }
      }

      @include it('py-7') {
        @include assert {
          @include output {
            @include py-7;
            @include reset;
          }

          @include expect {
            padding-top: 1.75rem;
            padding-bottom: 1.75rem;
          }
        }
      }

      @include it('ps-7') {
        @include assert {
          @include output {
            @include ps-7;
            @include reset;
          }

          @include expect {
            padding-inline-start: 1.75rem;
          }
        }
      }

      @include it('pe-7') {
        @include assert {
          @include output {
            @include pe-7;
            @include reset;
          }

          @include expect {
            padding-inline-end: 1.75rem;
          }
        }
      }

      @include it('pt-7') {
        @include assert {
          @include output {
            @include pt-7;
            @include reset;
          }

          @include expect {
            padding-top: 1.75rem;
          }
        }
      }

      @include it('pr-7') {
        @include assert {
          @include output {
            @include pr-7;
            @include reset;
          }

          @include expect {
            padding-right: 1.75rem;
          }
        }
      }

      @include it('pb-7') {
        @include assert {
          @include output {
            @include pb-7;
            @include reset;
          }

          @include expect {
            padding-bottom: 1.75rem;
          }
        }
      }

      @include it('pl-7') {
        @include assert {
          @include output {
            @include pl-7;
            @include reset;
          }

          @include expect {
            padding-left: 1.75rem;
          }
        }
      }

      @include it('p-8') {
        @include assert {
          @include output {
            @include p-8;
            @include reset;
          }

          @include expect {
            padding: 2rem;
          }
        }
      }

      @include it('px-8') {
        @include assert {
          @include output {
            @include px-8;
            @include reset;
          }

          @include expect {
            padding-left: 2rem;
            padding-right: 2rem;
          }
        }
      }

      @include it('py-8') {
        @include assert {
          @include output {
            @include py-8;
            @include reset;
          }

          @include expect {
            padding-top: 2rem;
            padding-bottom: 2rem;
          }
        }
      }

      @include it('ps-8') {
        @include assert {
          @include output {
            @include ps-8;
            @include reset;
          }

          @include expect {
            padding-inline-start: 2rem;
          }
        }
      }

      @include it('pe-8') {
        @include assert {
          @include output {
            @include pe-8;
            @include reset;
          }

          @include expect {
            padding-inline-end: 2rem;
          }
        }
      }

      @include it('pt-8') {
        @include assert {
          @include output {
            @include pt-8;
            @include reset;
          }

          @include expect {
            padding-top: 2rem;
          }
        }
      }

      @include it('pr-8') {
        @include assert {
          @include output {
            @include pr-8;
            @include reset;
          }

          @include expect {
            padding-right: 2rem;
          }
        }
      }

      @include it('pb-8') {
        @include assert {
          @include output {
            @include pb-8;
            @include reset;
          }

          @include expect {
            padding-bottom: 2rem;
          }
        }
      }

      @include it('pl-8') {
        @include assert {
          @include output {
            @include pl-8;
            @include reset;
          }

          @include expect {
            padding-left: 2rem;
          }
        }
      }

      @include it('p-9') {
        @include assert {
          @include output {
            @include p-9;
            @include reset;
          }

          @include expect {
            padding: 2.25rem;
          }
        }
      }

      @include it('px-9') {
        @include assert {
          @include output {
            @include px-9;
            @include reset;
          }

          @include expect {
            padding-left: 2.25rem;
            padding-right: 2.25rem;
          }
        }
      }

      @include it('py-9') {
        @include assert {
          @include output {
            @include py-9;
            @include reset;
          }

          @include expect {
            padding-top: 2.25rem;
            padding-bottom: 2.25rem;
          }
        }
      }

      @include it('ps-9') {
        @include assert {
          @include output {
            @include ps-9;
            @include reset;
          }

          @include expect {
            padding-inline-start: 2.25rem;
          }
        }
      }

      @include it('pe-9') {
        @include assert {
          @include output {
            @include pe-9;
            @include reset;
          }

          @include expect {
            padding-inline-end: 2.25rem;
          }
        }
      }

      @include it('pt-9') {
        @include assert {
          @include output {
            @include pt-9;
            @include reset;
          }

          @include expect {
            padding-top: 2.25rem;
          }
        }
      }

      @include it('pr-9') {
        @include assert {
          @include output {
            @include pr-9;
            @include reset;
          }

          @include expect {
            padding-right: 2.25rem;
          }
        }
      }

      @include it('pb-9') {
        @include assert {
          @include output {
            @include pb-9;
            @include reset;
          }

          @include expect {
            padding-bottom: 2.25rem;
          }
        }
      }

      @include it('pl-9') {
        @include assert {
          @include output {
            @include pl-9;
            @include reset;
          }

          @include expect {
            padding-left: 2.25rem;
          }
        }
      }

      @include it('p-10') {
        @include assert {
          @include output {
            @include p-10;
            @include reset;
          }

          @include expect {
            padding: 2.5rem;
          }
        }
      }

      @include it('px-10') {
        @include assert {
          @include output {
            @include px-10;
            @include reset;
          }

          @include expect {
            padding-left: 2.5rem;
            padding-right: 2.5rem;
          }
        }
      }

      @include it('py-10') {
        @include assert {
          @include output {
            @include py-10;
            @include reset;
          }

          @include expect {
            padding-top: 2.5rem;
            padding-bottom: 2.5rem;
          }
        }
      }

      @include it('ps-10') {
        @include assert {
          @include output {
            @include ps-10;
            @include reset;
          }

          @include expect {
            padding-inline-start: 2.5rem;
          }
        }
      }

      @include it('pe-10') {
        @include assert {
          @include output {
            @include pe-10;
            @include reset;
          }

          @include expect {
            padding-inline-end: 2.5rem;
          }
        }
      }

      @include it('pt-10') {
        @include assert {
          @include output {
            @include pt-10;
            @include reset;
          }

          @include expect {
            padding-top: 2.5rem;
          }
        }
      }

      @include it('pr-10') {
        @include assert {
          @include output {
            @include pr-10;
            @include reset;
          }

          @include expect {
            padding-right: 2.5rem;
          }
        }
      }

      @include it('pb-10') {
        @include assert {
          @include output {
            @include pb-10;
            @include reset;
          }

          @include expect {
            padding-bottom: 2.5rem;
          }
        }
      }

      @include it('pl-10') {
        @include assert {
          @include output {
            @include pl-10;
            @include reset;
          }

          @include expect {
            padding-left: 2.5rem;
          }
        }
      }

      @include it('p-11') {
        @include assert {
          @include output {
            @include p-11;
            @include reset;
          }

          @include expect {
            padding: 2.75rem;
          }
        }
      }

      @include it('px-11') {
        @include assert {
          @include output {
            @include px-11;
            @include reset;
          }

          @include expect {
            padding-left: 2.75rem;
            padding-right: 2.75rem;
          }
        }
      }

      @include it('py-11') {
        @include assert {
          @include output {
            @include py-11;
            @include reset;
          }

          @include expect {
            padding-top: 2.75rem;
            padding-bottom: 2.75rem;
          }
        }
      }

      @include it('ps-11') {
        @include assert {
          @include output {
            @include ps-11;
            @include reset;
          }

          @include expect {
            padding-inline-start: 2.75rem;
          }
        }
      }

      @include it('pe-11') {
        @include assert {
          @include output {
            @include pe-11;
            @include reset;
          }

          @include expect {
            padding-inline-end: 2.75rem;
          }
        }
      }

      @include it('pt-11') {
        @include assert {
          @include output {
            @include pt-11;
            @include reset;
          }

          @include expect {
            padding-top: 2.75rem;
          }
        }
      }

      @include it('pr-11') {
        @include assert {
          @include output {
            @include pr-11;
            @include reset;
          }

          @include expect {
            padding-right: 2.75rem;
          }
        }
      }

      @include it('pb-11') {
        @include assert {
          @include output {
            @include pb-11;
            @include reset;
          }

          @include expect {
            padding-bottom: 2.75rem;
          }
        }
      }

      @include it('pl-11') {
        @include assert {
          @include output {
            @include pl-11;
            @include reset;
          }

          @include expect {
            padding-left: 2.75rem;
          }
        }
      }

      @include it('p-12') {
        @include assert {
          @include output {
            @include p-12;
            @include reset;
          }

          @include expect {
            padding: 3rem;
          }
        }
      }

      @include it('px-12') {
        @include assert {
          @include output {
            @include px-12;
            @include reset;
          }

          @include expect {
            padding-left: 3rem;
            padding-right: 3rem;
          }
        }
      }

      @include it('py-12') {
        @include assert {
          @include output {
            @include py-12;
            @include reset;
          }

          @include expect {
            padding-top: 3rem;
            padding-bottom: 3rem;
          }
        }
      }

      @include it('ps-12') {
        @include assert {
          @include output {
            @include ps-12;
            @include reset;
          }

          @include expect {
            padding-inline-start: 3rem;
          }
        }
      }

      @include it('pe-12') {
        @include assert {
          @include output {
            @include pe-12;
            @include reset;
          }

          @include expect {
            padding-inline-end: 3rem;
          }
        }
      }

      @include it('pt-12') {
        @include assert {
          @include output {
            @include pt-12;
            @include reset;
          }

          @include expect {
            padding-top: 3rem;
          }
        }
      }

      @include it('pr-12') {
        @include assert {
          @include output {
            @include pr-12;
            @include reset;
          }

          @include expect {
            padding-right: 3rem;
          }
        }
      }

      @include it('pb-12') {
        @include assert {
          @include output {
            @include pb-12;
            @include reset;
          }

          @include expect {
            padding-bottom: 3rem;
          }
        }
      }

      @include it('pl-12') {
        @include assert {
          @include output {
            @include pl-12;
            @include reset;
          }

          @include expect {
            padding-left: 3rem;
          }
        }
      }

      @include it('p-14') {
        @include assert {
          @include output {
            @include p-14;
            @include reset;
          }

          @include expect {
            padding: 3.5rem;
          }
        }
      }

      @include it('px-14') {
        @include assert {
          @include output {
            @include px-14;
            @include reset;
          }

          @include expect {
            padding-left: 3.5rem;
            padding-right: 3.5rem;
          }
        }
      }

      @include it('py-14') {
        @include assert {
          @include output {
            @include py-14;
            @include reset;
          }

          @include expect {
            padding-top: 3.5rem;
            padding-bottom: 3.5rem;
          }
        }
      }

      @include it('ps-14') {
        @include assert {
          @include output {
            @include ps-14;
            @include reset;
          }

          @include expect {
            padding-inline-start: 3.5rem;
          }
        }
      }

      @include it('pe-14') {
        @include assert {
          @include output {
            @include pe-14;
            @include reset;
          }

          @include expect {
            padding-inline-end: 3.5rem;
          }
        }
      }

      @include it('pt-14') {
        @include assert {
          @include output {
            @include pt-14;
            @include reset;
          }

          @include expect {
            padding-top: 3.5rem;
          }
        }
      }

      @include it('pr-14') {
        @include assert {
          @include output {
            @include pr-14;
            @include reset;
          }

          @include expect {
            padding-right: 3.5rem;
          }
        }
      }

      @include it('pb-14') {
        @include assert {
          @include output {
            @include pb-14;
            @include reset;
          }

          @include expect {
            padding-bottom: 3.5rem;
          }
        }
      }

      @include it('pl-14') {
        @include assert {
          @include output {
            @include pl-14;
            @include reset;
          }

          @include expect {
            padding-left: 3.5rem;
          }
        }
      }

      @include it('p-16') {
        @include assert {
          @include output {
            @include p-16;
            @include reset;
          }

          @include expect {
            padding: 4rem;
          }
        }
      }

      @include it('px-16') {
        @include assert {
          @include output {
            @include px-16;
            @include reset;
          }

          @include expect {
            padding-left: 4rem;
            padding-right: 4rem;
          }
        }
      }

      @include it('py-16') {
        @include assert {
          @include output {
            @include py-16;
            @include reset;
          }

          @include expect {
            padding-top: 4rem;
            padding-bottom: 4rem;
          }
        }
      }

      @include it('ps-16') {
        @include assert {
          @include output {
            @include ps-16;
            @include reset;
          }

          @include expect {
            padding-inline-start: 4rem;
          }
        }
      }

      @include it('pe-16') {
        @include assert {
          @include output {
            @include pe-16;
            @include reset;
          }

          @include expect {
            padding-inline-end: 4rem;
          }
        }
      }

      @include it('pt-16') {
        @include assert {
          @include output {
            @include pt-16;
            @include reset;
          }

          @include expect {
            padding-top: 4rem;
          }
        }
      }

      @include it('pr-16') {
        @include assert {
          @include output {
            @include pr-16;
            @include reset;
          }

          @include expect {
            padding-right: 4rem;
          }
        }
      }

      @include it('pb-16') {
        @include assert {
          @include output {
            @include pb-16;
            @include reset;
          }

          @include expect {
            padding-bottom: 4rem;
          }
        }
      }

      @include it('pl-16') {
        @include assert {
          @include output {
            @include pl-16;
            @include reset;
          }

          @include expect {
            padding-left: 4rem;
          }
        }
      }

      @include it('p-20') {
        @include assert {
          @include output {
            @include p-20;
            @include reset;
          }

          @include expect {
            padding: 5rem;
          }
        }
      }

      @include it('px-20') {
        @include assert {
          @include output {
            @include px-20;
            @include reset;
          }

          @include expect {
            padding-left: 5rem;
            padding-right: 5rem;
          }
        }
      }

      @include it('py-20') {
        @include assert {
          @include output {
            @include py-20;
            @include reset;
          }

          @include expect {
            padding-top: 5rem;
            padding-bottom: 5rem;
          }
        }
      }

      @include it('ps-20') {
        @include assert {
          @include output {
            @include ps-20;
            @include reset;
          }

          @include expect {
            padding-inline-start: 5rem;
          }
        }
      }

      @include it('pe-20') {
        @include assert {
          @include output {
            @include pe-20;
            @include reset;
          }

          @include expect {
            padding-inline-end: 5rem;
          }
        }
      }

      @include it('pt-20') {
        @include assert {
          @include output {
            @include pt-20;
            @include reset;
          }

          @include expect {
            padding-top: 5rem;
          }
        }
      }

      @include it('pr-20') {
        @include assert {
          @include output {
            @include pr-20;
            @include reset;
          }

          @include expect {
            padding-right: 5rem;
          }
        }
      }

      @include it('pb-20') {
        @include assert {
          @include output {
            @include pb-20;
            @include reset;
          }

          @include expect {
            padding-bottom: 5rem;
          }
        }
      }

      @include it('pl-20') {
        @include assert {
          @include output {
            @include pl-20;
            @include reset;
          }

          @include expect {
            padding-left: 5rem;
          }
        }
      }

      @include it('p-24') {
        @include assert {
          @include output {
            @include p-24;
            @include reset;
          }

          @include expect {
            padding: 6rem;
          }
        }
      }

      @include it('px-24') {
        @include assert {
          @include output {
            @include px-24;
            @include reset;
          }

          @include expect {
            padding-left: 6rem;
            padding-right: 6rem;
          }
        }
      }

      @include it('py-24') {
        @include assert {
          @include output {
            @include py-24;
            @include reset;
          }

          @include expect {
            padding-top: 6rem;
            padding-bottom: 6rem;
          }
        }
      }

      @include it('ps-24') {
        @include assert {
          @include output {
            @include ps-24;
            @include reset;
          }

          @include expect {
            padding-inline-start: 6rem;
          }
        }
      }

      @include it('pe-24') {
        @include assert {
          @include output {
            @include pe-24;
            @include reset;
          }

          @include expect {
            padding-inline-end: 6rem;
          }
        }
      }

      @include it('pt-24') {
        @include assert {
          @include output {
            @include pt-24;
            @include reset;
          }

          @include expect {
            padding-top: 6rem;
          }
        }
      }

      @include it('pr-24') {
        @include assert {
          @include output {
            @include pr-24;
            @include reset;
          }

          @include expect {
            padding-right: 6rem;
          }
        }
      }

      @include it('pb-24') {
        @include assert {
          @include output {
            @include pb-24;
            @include reset;
          }

          @include expect {
            padding-bottom: 6rem;
          }
        }
      }

      @include it('pl-24') {
        @include assert {
          @include output {
            @include pl-24;
            @include reset;
          }

          @include expect {
            padding-left: 6rem;
          }
        }
      }

      @include it('p-28') {
        @include assert {
          @include output {
            @include p-28;
            @include reset;
          }

          @include expect {
            padding: 7rem;
          }
        }
      }

      @include it('px-28') {
        @include assert {
          @include output {
            @include px-28;
            @include reset;
          }

          @include expect {
            padding-left: 7rem;
            padding-right: 7rem;
          }
        }
      }

      @include it('py-28') {
        @include assert {
          @include output {
            @include py-28;
            @include reset;
          }

          @include expect {
            padding-top: 7rem;
            padding-bottom: 7rem;
          }
        }
      }

      @include it('ps-28') {
        @include assert {
          @include output {
            @include ps-28;
            @include reset;
          }

          @include expect {
            padding-inline-start: 7rem;
          }
        }
      }

      @include it('pe-28') {
        @include assert {
          @include output {
            @include pe-28;
            @include reset;
          }

          @include expect {
            padding-inline-end: 7rem;
          }
        }
      }

      @include it('pt-28') {
        @include assert {
          @include output {
            @include pt-28;
            @include reset;
          }

          @include expect {
            padding-top: 7rem;
          }
        }
      }

      @include it('pr-28') {
        @include assert {
          @include output {
            @include pr-28;
            @include reset;
          }

          @include expect {
            padding-right: 7rem;
          }
        }
      }

      @include it('pb-28') {
        @include assert {
          @include output {
            @include pb-28;
            @include reset;
          }

          @include expect {
            padding-bottom: 7rem;
          }
        }
      }

      @include it('pl-28') {
        @include assert {
          @include output {
            @include pl-28;
            @include reset;
          }

          @include expect {
            padding-left: 7rem;
          }
        }
      }

      @include it('p-32') {
        @include assert {
          @include output {
            @include p-32;
            @include reset;
          }

          @include expect {
            padding: 8rem;
          }
        }
      }

      @include it('px-32') {
        @include assert {
          @include output {
            @include px-32;
            @include reset;
          }

          @include expect {
            padding-left: 8rem;
            padding-right: 8rem;
          }
        }
      }

      @include it('py-32') {
        @include assert {
          @include output {
            @include py-32;
            @include reset;
          }

          @include expect {
            padding-top: 8rem;
            padding-bottom: 8rem;
          }
        }
      }

      @include it('ps-32') {
        @include assert {
          @include output {
            @include ps-32;
            @include reset;
          }

          @include expect {
            padding-inline-start: 8rem;
          }
        }
      }

      @include it('pe-32') {
        @include assert {
          @include output {
            @include pe-32;
            @include reset;
          }

          @include expect {
            padding-inline-end: 8rem;
          }
        }
      }

      @include it('pt-32') {
        @include assert {
          @include output {
            @include pt-32;
            @include reset;
          }

          @include expect {
            padding-top: 8rem;
          }
        }
      }

      @include it('pr-32') {
        @include assert {
          @include output {
            @include pr-32;
            @include reset;
          }

          @include expect {
            padding-right: 8rem;
          }
        }
      }

      @include it('pb-32') {
        @include assert {
          @include output {
            @include pb-32;
            @include reset;
          }

          @include expect {
            padding-bottom: 8rem;
          }
        }
      }

      @include it('pl-32') {
        @include assert {
          @include output {
            @include pl-32;
            @include reset;
          }

          @include expect {
            padding-left: 8rem;
          }
        }
      }

      @include it('p-36') {
        @include assert {
          @include output {
            @include p-36;
            @include reset;
          }

          @include expect {
            padding: 9rem;
          }
        }
      }

      @include it('px-36') {
        @include assert {
          @include output {
            @include px-36;
            @include reset;
          }

          @include expect {
            padding-left: 9rem;
            padding-right: 9rem;
          }
        }
      }

      @include it('py-36') {
        @include assert {
          @include output {
            @include py-36;
            @include reset;
          }

          @include expect {
            padding-top: 9rem;
            padding-bottom: 9rem;
          }
        }
      }

      @include it('ps-36') {
        @include assert {
          @include output {
            @include ps-36;
            @include reset;
          }

          @include expect {
            padding-inline-start: 9rem;
          }
        }
      }

      @include it('pe-36') {
        @include assert {
          @include output {
            @include pe-36;
            @include reset;
          }

          @include expect {
            padding-inline-end: 9rem;
          }
        }
      }

      @include it('pt-36') {
        @include assert {
          @include output {
            @include pt-36;
            @include reset;
          }

          @include expect {
            padding-top: 9rem;
          }
        }
      }

      @include it('pr-36') {
        @include assert {
          @include output {
            @include pr-36;
            @include reset;
          }

          @include expect {
            padding-right: 9rem;
          }
        }
      }

      @include it('pb-36') {
        @include assert {
          @include output {
            @include pb-36;
            @include reset;
          }

          @include expect {
            padding-bottom: 9rem;
          }
        }
      }

      @include it('pl-36') {
        @include assert {
          @include output {
            @include pl-36;
            @include reset;
          }

          @include expect {
            padding-left: 9rem;
          }
        }
      }

      @include it('p-40') {
        @include assert {
          @include output {
            @include p-40;
            @include reset;
          }

          @include expect {
            padding: 10rem;
          }
        }
      }

      @include it('px-40') {
        @include assert {
          @include output {
            @include px-40;
            @include reset;
          }

          @include expect {
            padding-left: 10rem;
            padding-right: 10rem;
          }
        }
      }

      @include it('py-40') {
        @include assert {
          @include output {
            @include py-40;
            @include reset;
          }

          @include expect {
            padding-top: 10rem;
            padding-bottom: 10rem;
          }
        }
      }

      @include it('ps-40') {
        @include assert {
          @include output {
            @include ps-40;
            @include reset;
          }

          @include expect {
            padding-inline-start: 10rem;
          }
        }
      }

      @include it('pe-40') {
        @include assert {
          @include output {
            @include pe-40;
            @include reset;
          }

          @include expect {
            padding-inline-end: 10rem;
          }
        }
      }

      @include it('pt-40') {
        @include assert {
          @include output {
            @include pt-40;
            @include reset;
          }

          @include expect {
            padding-top: 10rem;
          }
        }
      }

      @include it('pr-40') {
        @include assert {
          @include output {
            @include pr-40;
            @include reset;
          }

          @include expect {
            padding-right: 10rem;
          }
        }
      }

      @include it('pb-40') {
        @include assert {
          @include output {
            @include pb-40;
            @include reset;
          }

          @include expect {
            padding-bottom: 10rem;
          }
        }
      }

      @include it('pl-40') {
        @include assert {
          @include output {
            @include pl-40;
            @include reset;
          }

          @include expect {
            padding-left: 10rem;
          }
        }
      }

      @include it('p-44') {
        @include assert {
          @include output {
            @include p-44;
            @include reset;
          }

          @include expect {
            padding: 11rem;
          }
        }
      }

      @include it('px-44') {
        @include assert {
          @include output {
            @include px-44;
            @include reset;
          }

          @include expect {
            padding-left: 11rem;
            padding-right: 11rem;
          }
        }
      }

      @include it('py-44') {
        @include assert {
          @include output {
            @include py-44;
            @include reset;
          }

          @include expect {
            padding-top: 11rem;
            padding-bottom: 11rem;
          }
        }
      }

      @include it('ps-44') {
        @include assert {
          @include output {
            @include ps-44;
            @include reset;
          }

          @include expect {
            padding-inline-start: 11rem;
          }
        }
      }

      @include it('pe-44') {
        @include assert {
          @include output {
            @include pe-44;
            @include reset;
          }

          @include expect {
            padding-inline-end: 11rem;
          }
        }
      }

      @include it('pt-44') {
        @include assert {
          @include output {
            @include pt-44;
            @include reset;
          }

          @include expect {
            padding-top: 11rem;
          }
        }
      }

      @include it('pr-44') {
        @include assert {
          @include output {
            @include pr-44;
            @include reset;
          }

          @include expect {
            padding-right: 11rem;
          }
        }
      }

      @include it('pb-44') {
        @include assert {
          @include output {
            @include pb-44;
            @include reset;
          }

          @include expect {
            padding-bottom: 11rem;
          }
        }
      }

      @include it('pl-44') {
        @include assert {
          @include output {
            @include pl-44;
            @include reset;
          }

          @include expect {
            padding-left: 11rem;
          }
        }
      }

      @include it('p-48') {
        @include assert {
          @include output {
            @include p-48;
            @include reset;
          }

          @include expect {
            padding: 12rem;
          }
        }
      }

      @include it('px-48') {
        @include assert {
          @include output {
            @include px-48;
            @include reset;
          }

          @include expect {
            padding-left: 12rem;
            padding-right: 12rem;
          }
        }
      }

      @include it('py-48') {
        @include assert {
          @include output {
            @include py-48;
            @include reset;
          }

          @include expect {
            padding-top: 12rem;
            padding-bottom: 12rem;
          }
        }
      }

      @include it('ps-48') {
        @include assert {
          @include output {
            @include ps-48;
            @include reset;
          }

          @include expect {
            padding-inline-start: 12rem;
          }
        }
      }

      @include it('pe-48') {
        @include assert {
          @include output {
            @include pe-48;
            @include reset;
          }

          @include expect {
            padding-inline-end: 12rem;
          }
        }
      }

      @include it('pt-48') {
        @include assert {
          @include output {
            @include pt-48;
            @include reset;
          }

          @include expect {
            padding-top: 12rem;
          }
        }
      }

      @include it('pr-48') {
        @include assert {
          @include output {
            @include pr-48;
            @include reset;
          }

          @include expect {
            padding-right: 12rem;
          }
        }
      }

      @include it('pb-48') {
        @include assert {
          @include output {
            @include pb-48;
            @include reset;
          }

          @include expect {
            padding-bottom: 12rem;
          }
        }
      }

      @include it('pl-48') {
        @include assert {
          @include output {
            @include pl-48;
            @include reset;
          }

          @include expect {
            padding-left: 12rem;
          }
        }
      }

      @include it('p-52') {
        @include assert {
          @include output {
            @include p-52;
            @include reset;
          }

          @include expect {
            padding: 13rem;
          }
        }
      }

      @include it('px-52') {
        @include assert {
          @include output {
            @include px-52;
            @include reset;
          }

          @include expect {
            padding-left: 13rem;
            padding-right: 13rem;
          }
        }
      }

      @include it('py-52') {
        @include assert {
          @include output {
            @include py-52;
            @include reset;
          }

          @include expect {
            padding-top: 13rem;
            padding-bottom: 13rem;
          }
        }
      }

      @include it('ps-52') {
        @include assert {
          @include output {
            @include ps-52;
            @include reset;
          }

          @include expect {
            padding-inline-start: 13rem;
          }
        }
      }

      @include it('pe-52') {
        @include assert {
          @include output {
            @include pe-52;
            @include reset;
          }

          @include expect {
            padding-inline-end: 13rem;
          }
        }
      }

      @include it('pt-52') {
        @include assert {
          @include output {
            @include pt-52;
            @include reset;
          }

          @include expect {
            padding-top: 13rem;
          }
        }
      }

      @include it('pr-52') {
        @include assert {
          @include output {
            @include pr-52;
            @include reset;
          }

          @include expect {
            padding-right: 13rem;
          }
        }
      }

      @include it('pb-52') {
        @include assert {
          @include output {
            @include pb-52;
            @include reset;
          }

          @include expect {
            padding-bottom: 13rem;
          }
        }
      }

      @include it('pl-52') {
        @include assert {
          @include output {
            @include pl-52;
            @include reset;
          }

          @include expect {
            padding-left: 13rem;
          }
        }
      }

      @include it('p-56') {
        @include assert {
          @include output {
            @include p-56;
            @include reset;
          }

          @include expect {
            padding: 14rem;
          }
        }
      }

      @include it('px-56') {
        @include assert {
          @include output {
            @include px-56;
            @include reset;
          }

          @include expect {
            padding-left: 14rem;
            padding-right: 14rem;
          }
        }
      }

      @include it('py-56') {
        @include assert {
          @include output {
            @include py-56;
            @include reset;
          }

          @include expect {
            padding-top: 14rem;
            padding-bottom: 14rem;
          }
        }
      }

      @include it('ps-56') {
        @include assert {
          @include output {
            @include ps-56;
            @include reset;
          }

          @include expect {
            padding-inline-start: 14rem;
          }
        }
      }

      @include it('pe-56') {
        @include assert {
          @include output {
            @include pe-56;
            @include reset;
          }

          @include expect {
            padding-inline-end: 14rem;
          }
        }
      }

      @include it('pt-56') {
        @include assert {
          @include output {
            @include pt-56;
            @include reset;
          }

          @include expect {
            padding-top: 14rem;
          }
        }
      }

      @include it('pr-56') {
        @include assert {
          @include output {
            @include pr-56;
            @include reset;
          }

          @include expect {
            padding-right: 14rem;
          }
        }
      }

      @include it('pb-56') {
        @include assert {
          @include output {
            @include pb-56;
            @include reset;
          }

          @include expect {
            padding-bottom: 14rem;
          }
        }
      }

      @include it('pl-56') {
        @include assert {
          @include output {
            @include pl-56;
            @include reset;
          }

          @include expect {
            padding-left: 14rem;
          }
        }
      }

      @include it('p-60') {
        @include assert {
          @include output {
            @include p-60;
            @include reset;
          }

          @include expect {
            padding: 15rem;
          }
        }
      }

      @include it('px-60') {
        @include assert {
          @include output {
            @include px-60;
            @include reset;
          }

          @include expect {
            padding-left: 15rem;
            padding-right: 15rem;
          }
        }
      }

      @include it('py-60') {
        @include assert {
          @include output {
            @include py-60;
            @include reset;
          }

          @include expect {
            padding-top: 15rem;
            padding-bottom: 15rem;
          }
        }
      }

      @include it('ps-60') {
        @include assert {
          @include output {
            @include ps-60;
            @include reset;
          }

          @include expect {
            padding-inline-start: 15rem;
          }
        }
      }

      @include it('pe-60') {
        @include assert {
          @include output {
            @include pe-60;
            @include reset;
          }

          @include expect {
            padding-inline-end: 15rem;
          }
        }
      }

      @include it('pt-60') {
        @include assert {
          @include output {
            @include pt-60;
            @include reset;
          }

          @include expect {
            padding-top: 15rem;
          }
        }
      }

      @include it('pr-60') {
        @include assert {
          @include output {
            @include pr-60;
            @include reset;
          }

          @include expect {
            padding-right: 15rem;
          }
        }
      }

      @include it('pb-60') {
        @include assert {
          @include output {
            @include pb-60;
            @include reset;
          }

          @include expect {
            padding-bottom: 15rem;
          }
        }
      }

      @include it('pl-60') {
        @include assert {
          @include output {
            @include pl-60;
            @include reset;
          }

          @include expect {
            padding-left: 15rem;
          }
        }
      }

      @include it('p-64') {
        @include assert {
          @include output {
            @include p-64;
            @include reset;
          }

          @include expect {
            padding: 16rem;
          }
        }
      }

      @include it('px-64') {
        @include assert {
          @include output {
            @include px-64;
            @include reset;
          }

          @include expect {
            padding-left: 16rem;
            padding-right: 16rem;
          }
        }
      }

      @include it('py-64') {
        @include assert {
          @include output {
            @include py-64;
            @include reset;
          }

          @include expect {
            padding-top: 16rem;
            padding-bottom: 16rem;
          }
        }
      }

      @include it('ps-64') {
        @include assert {
          @include output {
            @include ps-64;
            @include reset;
          }

          @include expect {
            padding-inline-start: 16rem;
          }
        }
      }

      @include it('pe-64') {
        @include assert {
          @include output {
            @include pe-64;
            @include reset;
          }

          @include expect {
            padding-inline-end: 16rem;
          }
        }
      }

      @include it('pt-64') {
        @include assert {
          @include output {
            @include pt-64;
            @include reset;
          }

          @include expect {
            padding-top: 16rem;
          }
        }
      }

      @include it('pr-64') {
        @include assert {
          @include output {
            @include pr-64;
            @include reset;
          }

          @include expect {
            padding-right: 16rem;
          }
        }
      }

      @include it('pb-64') {
        @include assert {
          @include output {
            @include pb-64;
            @include reset;
          }

          @include expect {
            padding-bottom: 16rem;
          }
        }
      }

      @include it('pl-64') {
        @include assert {
          @include output {
            @include pl-64;
            @include reset;
          }

          @include expect {
            padding-left: 16rem;
          }
        }
      }

      @include it('p-72') {
        @include assert {
          @include output {
            @include p-72;
            @include reset;
          }

          @include expect {
            padding: 18rem;
          }
        }
      }

      @include it('px-72') {
        @include assert {
          @include output {
            @include px-72;
            @include reset;
          }

          @include expect {
            padding-left: 18rem;
            padding-right: 18rem;
          }
        }
      }

      @include it('py-72') {
        @include assert {
          @include output {
            @include py-72;
            @include reset;
          }

          @include expect {
            padding-top: 18rem;
            padding-bottom: 18rem;
          }
        }
      }

      @include it('ps-72') {
        @include assert {
          @include output {
            @include ps-72;
            @include reset;
          }

          @include expect {
            padding-inline-start: 18rem;
          }
        }
      }

      @include it('pe-72') {
        @include assert {
          @include output {
            @include pe-72;
            @include reset;
          }

          @include expect {
            padding-inline-end: 18rem;
          }
        }
      }

      @include it('pt-72') {
        @include assert {
          @include output {
            @include pt-72;
            @include reset;
          }

          @include expect {
            padding-top: 18rem;
          }
        }
      }

      @include it('pr-72') {
        @include assert {
          @include output {
            @include pr-72;
            @include reset;
          }

          @include expect {
            padding-right: 18rem;
          }
        }
      }

      @include it('pb-72') {
        @include assert {
          @include output {
            @include pb-72;
            @include reset;
          }

          @include expect {
            padding-bottom: 18rem;
          }
        }
      }

      @include it('pl-72') {
        @include assert {
          @include output {
            @include pl-72;
            @include reset;
          }

          @include expect {
            padding-left: 18rem;
          }
        }
      }

      @include it('p-80') {
        @include assert {
          @include output {
            @include p-80;
            @include reset;
          }

          @include expect {
            padding: 20rem;
          }
        }
      }

      @include it('px-80') {
        @include assert {
          @include output {
            @include px-80;
            @include reset;
          }

          @include expect {
            padding-left: 20rem;
            padding-right: 20rem;
          }
        }
      }

      @include it('py-80') {
        @include assert {
          @include output {
            @include py-80;
            @include reset;
          }

          @include expect {
            padding-top: 20rem;
            padding-bottom: 20rem;
          }
        }
      }

      @include it('ps-80') {
        @include assert {
          @include output {
            @include ps-80;
            @include reset;
          }

          @include expect {
            padding-inline-start: 20rem;
          }
        }
      }

      @include it('pe-80') {
        @include assert {
          @include output {
            @include pe-80;
            @include reset;
          }

          @include expect {
            padding-inline-end: 20rem;
          }
        }
      }

      @include it('pt-80') {
        @include assert {
          @include output {
            @include pt-80;
            @include reset;
          }

          @include expect {
            padding-top: 20rem;
          }
        }
      }

      @include it('pr-80') {
        @include assert {
          @include output {
            @include pr-80;
            @include reset;
          }

          @include expect {
            padding-right: 20rem;
          }
        }
      }

      @include it('pb-80') {
        @include assert {
          @include output {
            @include pb-80;
            @include reset;
          }

          @include expect {
            padding-bottom: 20rem;
          }
        }
      }

      @include it('pl-80') {
        @include assert {
          @include output {
            @include pl-80;
            @include reset;
          }

          @include expect {
            padding-left: 20rem;
          }
        }
      }

      @include it('p-96') {
        @include assert {
          @include output {
            @include p-96;
            @include reset;
          }

          @include expect {
            padding: 24rem;
          }
        }
      }

      @include it('px-96') {
        @include assert {
          @include output {
            @include px-96;
            @include reset;
          }

          @include expect {
            padding-left: 24rem;
            padding-right: 24rem;
          }
        }
      }

      @include it('py-96') {
        @include assert {
          @include output {
            @include py-96;
            @include reset;
          }

          @include expect {
            padding-top: 24rem;
            padding-bottom: 24rem;
          }
        }
      }

      @include it('ps-96') {
        @include assert {
          @include output {
            @include ps-96;
            @include reset;
          }

          @include expect {
            padding-inline-start: 24rem;
          }
        }
      }

      @include it('pe-96') {
        @include assert {
          @include output {
            @include pe-96;
            @include reset;
          }

          @include expect {
            padding-inline-end: 24rem;
          }
        }
      }

      @include it('pt-96') {
        @include assert {
          @include output {
            @include pt-96;
            @include reset;
          }

          @include expect {
            padding-top: 24rem;
          }
        }
      }

      @include it('pr-96') {
        @include assert {
          @include output {
            @include pr-96;
            @include reset;
          }

          @include expect {
            padding-right: 24rem;
          }
        }
      }

      @include it('pb-96') {
        @include assert {
          @include output {
            @include pb-96;
            @include reset;
          }

          @include expect {
            padding-bottom: 24rem;
          }
        }
      }

      @include it('pl-96') {
        @include assert {
          @include output {
            @include pl-96;
            @include reset;
          }

          @include expect {
            padding-left: 24rem;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:p-0') {
        @include assert {
          @include output {
            @include sm\:p-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0px;
            }
          }
        }
      }

      @include it('sm\:px-0') {
        @include assert {
          @include output {
            @include sm\:px-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0px;
              padding-right: 0px;
            }
          }
        }
      }

      @include it('sm\:py-0') {
        @include assert {
          @include output {
            @include sm\:py-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0px;
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:ps-0') {
        @include assert {
          @include output {
            @include sm\:ps-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0px;
            }
          }
        }
      }

      @include it('sm\:pe-0') {
        @include assert {
          @include output {
            @include sm\:pe-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0px;
            }
          }
        }
      }

      @include it('sm\:pt-0') {
        @include assert {
          @include output {
            @include sm\:pt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0px;
            }
          }
        }
      }

      @include it('sm\:pr-0') {
        @include assert {
          @include output {
            @include sm\:pr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0px;
            }
          }
        }
      }

      @include it('sm\:pb-0') {
        @include assert {
          @include output {
            @include sm\:pb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:pl-0') {
        @include assert {
          @include output {
            @include sm\:pl-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0px;
            }
          }
        }
      }

      @include it('sm\:p-px') {
        @include assert {
          @include output {
            @include sm\:p-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 1px;
            }
          }
        }
      }

      @include it('sm\:px-px') {
        @include assert {
          @include output {
            @include sm\:px-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1px;
              padding-right: 1px;
            }
          }
        }
      }

      @include it('sm\:py-px') {
        @include assert {
          @include output {
            @include sm\:py-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1px;
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('sm\:ps-px') {
        @include assert {
          @include output {
            @include sm\:ps-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 1px;
            }
          }
        }
      }

      @include it('sm\:pe-px') {
        @include assert {
          @include output {
            @include sm\:pe-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 1px;
            }
          }
        }
      }

      @include it('sm\:pt-px') {
        @include assert {
          @include output {
            @include sm\:pt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1px;
            }
          }
        }
      }

      @include it('sm\:pr-px') {
        @include assert {
          @include output {
            @include sm\:pr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 1px;
            }
          }
        }
      }

      @include it('sm\:pb-px') {
        @include assert {
          @include output {
            @include sm\:pb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('sm\:pl-px') {
        @include assert {
          @include output {
            @include sm\:pl-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1px;
            }
          }
        }
      }

      @include it('sm\:p-0\.5') {
        @include assert {
          @include output {
            @include sm\:p-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:px-0\.5') {
        @include assert {
          @include output {
            @include sm\:px-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.125rem;
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:py-0\.5') {
        @include assert {
          @include output {
            @include sm\:py-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.125rem;
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:ps-0\.5') {
        @include assert {
          @include output {
            @include sm\:ps-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:pe-0\.5') {
        @include assert {
          @include output {
            @include sm\:pe-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:pt-0\.5') {
        @include assert {
          @include output {
            @include sm\:pt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:pr-0\.5') {
        @include assert {
          @include output {
            @include sm\:pr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:pb-0\.5') {
        @include assert {
          @include output {
            @include sm\:pb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:pl-0\.5') {
        @include assert {
          @include output {
            @include sm\:pl-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:p-1') {
        @include assert {
          @include output {
            @include sm\:p-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:px-1') {
        @include assert {
          @include output {
            @include sm\:px-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.25rem;
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:py-1') {
        @include assert {
          @include output {
            @include sm\:py-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.25rem;
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:ps-1') {
        @include assert {
          @include output {
            @include sm\:ps-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:pe-1') {
        @include assert {
          @include output {
            @include sm\:pe-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:pt-1') {
        @include assert {
          @include output {
            @include sm\:pt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:pr-1') {
        @include assert {
          @include output {
            @include sm\:pr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:pb-1') {
        @include assert {
          @include output {
            @include sm\:pb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:pl-1') {
        @include assert {
          @include output {
            @include sm\:pl-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:p-1\.5') {
        @include assert {
          @include output {
            @include sm\:p-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:px-1\.5') {
        @include assert {
          @include output {
            @include sm\:px-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.375rem;
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:py-1\.5') {
        @include assert {
          @include output {
            @include sm\:py-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.375rem;
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:ps-1\.5') {
        @include assert {
          @include output {
            @include sm\:ps-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:pe-1\.5') {
        @include assert {
          @include output {
            @include sm\:pe-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:pt-1\.5') {
        @include assert {
          @include output {
            @include sm\:pt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:pr-1\.5') {
        @include assert {
          @include output {
            @include sm\:pr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:pb-1\.5') {
        @include assert {
          @include output {
            @include sm\:pb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:pl-1\.5') {
        @include assert {
          @include output {
            @include sm\:pl-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:p-2') {
        @include assert {
          @include output {
            @include sm\:p-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:px-2') {
        @include assert {
          @include output {
            @include sm\:px-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.5rem;
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:py-2') {
        @include assert {
          @include output {
            @include sm\:py-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:ps-2') {
        @include assert {
          @include output {
            @include sm\:ps-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:pe-2') {
        @include assert {
          @include output {
            @include sm\:pe-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:pt-2') {
        @include assert {
          @include output {
            @include sm\:pt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:pr-2') {
        @include assert {
          @include output {
            @include sm\:pr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:pb-2') {
        @include assert {
          @include output {
            @include sm\:pb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:pl-2') {
        @include assert {
          @include output {
            @include sm\:pl-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:p-2\.5') {
        @include assert {
          @include output {
            @include sm\:p-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:px-2\.5') {
        @include assert {
          @include output {
            @include sm\:px-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.625rem;
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:py-2\.5') {
        @include assert {
          @include output {
            @include sm\:py-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.625rem;
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:ps-2\.5') {
        @include assert {
          @include output {
            @include sm\:ps-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:pe-2\.5') {
        @include assert {
          @include output {
            @include sm\:pe-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:pt-2\.5') {
        @include assert {
          @include output {
            @include sm\:pt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:pr-2\.5') {
        @include assert {
          @include output {
            @include sm\:pr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:pb-2\.5') {
        @include assert {
          @include output {
            @include sm\:pb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:pl-2\.5') {
        @include assert {
          @include output {
            @include sm\:pl-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:p-3') {
        @include assert {
          @include output {
            @include sm\:p-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:px-3') {
        @include assert {
          @include output {
            @include sm\:px-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.75rem;
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:py-3') {
        @include assert {
          @include output {
            @include sm\:py-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.75rem;
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:ps-3') {
        @include assert {
          @include output {
            @include sm\:ps-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:pe-3') {
        @include assert {
          @include output {
            @include sm\:pe-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:pt-3') {
        @include assert {
          @include output {
            @include sm\:pt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:pr-3') {
        @include assert {
          @include output {
            @include sm\:pr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:pb-3') {
        @include assert {
          @include output {
            @include sm\:pb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:pl-3') {
        @include assert {
          @include output {
            @include sm\:pl-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:p-3\.5') {
        @include assert {
          @include output {
            @include sm\:p-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:px-3\.5') {
        @include assert {
          @include output {
            @include sm\:px-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.875rem;
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:py-3\.5') {
        @include assert {
          @include output {
            @include sm\:py-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.875rem;
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:ps-3\.5') {
        @include assert {
          @include output {
            @include sm\:ps-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:pe-3\.5') {
        @include assert {
          @include output {
            @include sm\:pe-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:pt-3\.5') {
        @include assert {
          @include output {
            @include sm\:pt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:pr-3\.5') {
        @include assert {
          @include output {
            @include sm\:pr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:pb-3\.5') {
        @include assert {
          @include output {
            @include sm\:pb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:pl-3\.5') {
        @include assert {
          @include output {
            @include sm\:pl-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:p-4') {
        @include assert {
          @include output {
            @include sm\:p-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 1rem;
            }
          }
        }
      }

      @include it('sm\:px-4') {
        @include assert {
          @include output {
            @include sm\:px-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1rem;
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('sm\:py-4') {
        @include assert {
          @include output {
            @include sm\:py-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1rem;
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('sm\:ps-4') {
        @include assert {
          @include output {
            @include sm\:ps-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 1rem;
            }
          }
        }
      }

      @include it('sm\:pe-4') {
        @include assert {
          @include output {
            @include sm\:pe-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 1rem;
            }
          }
        }
      }

      @include it('sm\:pt-4') {
        @include assert {
          @include output {
            @include sm\:pt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1rem;
            }
          }
        }
      }

      @include it('sm\:pr-4') {
        @include assert {
          @include output {
            @include sm\:pr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('sm\:pb-4') {
        @include assert {
          @include output {
            @include sm\:pb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('sm\:pl-4') {
        @include assert {
          @include output {
            @include sm\:pl-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1rem;
            }
          }
        }
      }

      @include it('sm\:p-5') {
        @include assert {
          @include output {
            @include sm\:p-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:px-5') {
        @include assert {
          @include output {
            @include sm\:px-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.25rem;
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:py-5') {
        @include assert {
          @include output {
            @include sm\:py-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.25rem;
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:ps-5') {
        @include assert {
          @include output {
            @include sm\:ps-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:pe-5') {
        @include assert {
          @include output {
            @include sm\:pe-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:pt-5') {
        @include assert {
          @include output {
            @include sm\:pt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:pr-5') {
        @include assert {
          @include output {
            @include sm\:pr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:pb-5') {
        @include assert {
          @include output {
            @include sm\:pb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:pl-5') {
        @include assert {
          @include output {
            @include sm\:pl-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:p-6') {
        @include assert {
          @include output {
            @include sm\:p-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:px-6') {
        @include assert {
          @include output {
            @include sm\:px-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.5rem;
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:py-6') {
        @include assert {
          @include output {
            @include sm\:py-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.5rem;
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:ps-6') {
        @include assert {
          @include output {
            @include sm\:ps-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:pe-6') {
        @include assert {
          @include output {
            @include sm\:pe-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:pt-6') {
        @include assert {
          @include output {
            @include sm\:pt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:pr-6') {
        @include assert {
          @include output {
            @include sm\:pr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:pb-6') {
        @include assert {
          @include output {
            @include sm\:pb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:pl-6') {
        @include assert {
          @include output {
            @include sm\:pl-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:p-7') {
        @include assert {
          @include output {
            @include sm\:p-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:px-7') {
        @include assert {
          @include output {
            @include sm\:px-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.75rem;
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:py-7') {
        @include assert {
          @include output {
            @include sm\:py-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.75rem;
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:ps-7') {
        @include assert {
          @include output {
            @include sm\:ps-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:pe-7') {
        @include assert {
          @include output {
            @include sm\:pe-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:pt-7') {
        @include assert {
          @include output {
            @include sm\:pt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:pr-7') {
        @include assert {
          @include output {
            @include sm\:pr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:pb-7') {
        @include assert {
          @include output {
            @include sm\:pb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:pl-7') {
        @include assert {
          @include output {
            @include sm\:pl-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:p-8') {
        @include assert {
          @include output {
            @include sm\:p-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 2rem;
            }
          }
        }
      }

      @include it('sm\:px-8') {
        @include assert {
          @include output {
            @include sm\:px-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2rem;
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('sm\:py-8') {
        @include assert {
          @include output {
            @include sm\:py-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2rem;
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('sm\:ps-8') {
        @include assert {
          @include output {
            @include sm\:ps-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 2rem;
            }
          }
        }
      }

      @include it('sm\:pe-8') {
        @include assert {
          @include output {
            @include sm\:pe-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 2rem;
            }
          }
        }
      }

      @include it('sm\:pt-8') {
        @include assert {
          @include output {
            @include sm\:pt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2rem;
            }
          }
        }
      }

      @include it('sm\:pr-8') {
        @include assert {
          @include output {
            @include sm\:pr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('sm\:pb-8') {
        @include assert {
          @include output {
            @include sm\:pb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('sm\:pl-8') {
        @include assert {
          @include output {
            @include sm\:pl-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2rem;
            }
          }
        }
      }

      @include it('sm\:p-9') {
        @include assert {
          @include output {
            @include sm\:p-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:px-9') {
        @include assert {
          @include output {
            @include sm\:px-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.25rem;
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:py-9') {
        @include assert {
          @include output {
            @include sm\:py-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.25rem;
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:ps-9') {
        @include assert {
          @include output {
            @include sm\:ps-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:pe-9') {
        @include assert {
          @include output {
            @include sm\:pe-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:pt-9') {
        @include assert {
          @include output {
            @include sm\:pt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:pr-9') {
        @include assert {
          @include output {
            @include sm\:pr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:pb-9') {
        @include assert {
          @include output {
            @include sm\:pb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:pl-9') {
        @include assert {
          @include output {
            @include sm\:pl-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:p-10') {
        @include assert {
          @include output {
            @include sm\:p-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:px-10') {
        @include assert {
          @include output {
            @include sm\:px-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.5rem;
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:py-10') {
        @include assert {
          @include output {
            @include sm\:py-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.5rem;
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:ps-10') {
        @include assert {
          @include output {
            @include sm\:ps-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:pe-10') {
        @include assert {
          @include output {
            @include sm\:pe-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:pt-10') {
        @include assert {
          @include output {
            @include sm\:pt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:pr-10') {
        @include assert {
          @include output {
            @include sm\:pr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:pb-10') {
        @include assert {
          @include output {
            @include sm\:pb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:pl-10') {
        @include assert {
          @include output {
            @include sm\:pl-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:p-11') {
        @include assert {
          @include output {
            @include sm\:p-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:px-11') {
        @include assert {
          @include output {
            @include sm\:px-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.75rem;
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:py-11') {
        @include assert {
          @include output {
            @include sm\:py-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.75rem;
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:ps-11') {
        @include assert {
          @include output {
            @include sm\:ps-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:pe-11') {
        @include assert {
          @include output {
            @include sm\:pe-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:pt-11') {
        @include assert {
          @include output {
            @include sm\:pt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:pr-11') {
        @include assert {
          @include output {
            @include sm\:pr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:pb-11') {
        @include assert {
          @include output {
            @include sm\:pb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:pl-11') {
        @include assert {
          @include output {
            @include sm\:pl-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:p-12') {
        @include assert {
          @include output {
            @include sm\:p-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 3rem;
            }
          }
        }
      }

      @include it('sm\:px-12') {
        @include assert {
          @include output {
            @include sm\:px-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 3rem;
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('sm\:py-12') {
        @include assert {
          @include output {
            @include sm\:py-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 3rem;
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('sm\:ps-12') {
        @include assert {
          @include output {
            @include sm\:ps-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 3rem;
            }
          }
        }
      }

      @include it('sm\:pe-12') {
        @include assert {
          @include output {
            @include sm\:pe-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 3rem;
            }
          }
        }
      }

      @include it('sm\:pt-12') {
        @include assert {
          @include output {
            @include sm\:pt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 3rem;
            }
          }
        }
      }

      @include it('sm\:pr-12') {
        @include assert {
          @include output {
            @include sm\:pr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('sm\:pb-12') {
        @include assert {
          @include output {
            @include sm\:pb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('sm\:pl-12') {
        @include assert {
          @include output {
            @include sm\:pl-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 3rem;
            }
          }
        }
      }

      @include it('sm\:p-14') {
        @include assert {
          @include output {
            @include sm\:p-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:px-14') {
        @include assert {
          @include output {
            @include sm\:px-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 3.5rem;
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:py-14') {
        @include assert {
          @include output {
            @include sm\:py-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 3.5rem;
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:ps-14') {
        @include assert {
          @include output {
            @include sm\:ps-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:pe-14') {
        @include assert {
          @include output {
            @include sm\:pe-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:pt-14') {
        @include assert {
          @include output {
            @include sm\:pt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:pr-14') {
        @include assert {
          @include output {
            @include sm\:pr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:pb-14') {
        @include assert {
          @include output {
            @include sm\:pb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:pl-14') {
        @include assert {
          @include output {
            @include sm\:pl-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:p-16') {
        @include assert {
          @include output {
            @include sm\:p-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 4rem;
            }
          }
        }
      }

      @include it('sm\:px-16') {
        @include assert {
          @include output {
            @include sm\:px-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 4rem;
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('sm\:py-16') {
        @include assert {
          @include output {
            @include sm\:py-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 4rem;
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('sm\:ps-16') {
        @include assert {
          @include output {
            @include sm\:ps-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 4rem;
            }
          }
        }
      }

      @include it('sm\:pe-16') {
        @include assert {
          @include output {
            @include sm\:pe-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 4rem;
            }
          }
        }
      }

      @include it('sm\:pt-16') {
        @include assert {
          @include output {
            @include sm\:pt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 4rem;
            }
          }
        }
      }

      @include it('sm\:pr-16') {
        @include assert {
          @include output {
            @include sm\:pr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('sm\:pb-16') {
        @include assert {
          @include output {
            @include sm\:pb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('sm\:pl-16') {
        @include assert {
          @include output {
            @include sm\:pl-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 4rem;
            }
          }
        }
      }

      @include it('sm\:p-20') {
        @include assert {
          @include output {
            @include sm\:p-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 5rem;
            }
          }
        }
      }

      @include it('sm\:px-20') {
        @include assert {
          @include output {
            @include sm\:px-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('sm\:py-20') {
        @include assert {
          @include output {
            @include sm\:py-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 5rem;
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('sm\:ps-20') {
        @include assert {
          @include output {
            @include sm\:ps-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 5rem;
            }
          }
        }
      }

      @include it('sm\:pe-20') {
        @include assert {
          @include output {
            @include sm\:pe-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 5rem;
            }
          }
        }
      }

      @include it('sm\:pt-20') {
        @include assert {
          @include output {
            @include sm\:pt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 5rem;
            }
          }
        }
      }

      @include it('sm\:pr-20') {
        @include assert {
          @include output {
            @include sm\:pr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('sm\:pb-20') {
        @include assert {
          @include output {
            @include sm\:pb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('sm\:pl-20') {
        @include assert {
          @include output {
            @include sm\:pl-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 5rem;
            }
          }
        }
      }

      @include it('sm\:p-24') {
        @include assert {
          @include output {
            @include sm\:p-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 6rem;
            }
          }
        }
      }

      @include it('sm\:px-24') {
        @include assert {
          @include output {
            @include sm\:px-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 6rem;
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('sm\:py-24') {
        @include assert {
          @include output {
            @include sm\:py-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 6rem;
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('sm\:ps-24') {
        @include assert {
          @include output {
            @include sm\:ps-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 6rem;
            }
          }
        }
      }

      @include it('sm\:pe-24') {
        @include assert {
          @include output {
            @include sm\:pe-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 6rem;
            }
          }
        }
      }

      @include it('sm\:pt-24') {
        @include assert {
          @include output {
            @include sm\:pt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 6rem;
            }
          }
        }
      }

      @include it('sm\:pr-24') {
        @include assert {
          @include output {
            @include sm\:pr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('sm\:pb-24') {
        @include assert {
          @include output {
            @include sm\:pb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('sm\:pl-24') {
        @include assert {
          @include output {
            @include sm\:pl-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 6rem;
            }
          }
        }
      }

      @include it('sm\:p-28') {
        @include assert {
          @include output {
            @include sm\:p-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 7rem;
            }
          }
        }
      }

      @include it('sm\:px-28') {
        @include assert {
          @include output {
            @include sm\:px-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 7rem;
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('sm\:py-28') {
        @include assert {
          @include output {
            @include sm\:py-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 7rem;
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('sm\:ps-28') {
        @include assert {
          @include output {
            @include sm\:ps-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 7rem;
            }
          }
        }
      }

      @include it('sm\:pe-28') {
        @include assert {
          @include output {
            @include sm\:pe-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 7rem;
            }
          }
        }
      }

      @include it('sm\:pt-28') {
        @include assert {
          @include output {
            @include sm\:pt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 7rem;
            }
          }
        }
      }

      @include it('sm\:pr-28') {
        @include assert {
          @include output {
            @include sm\:pr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('sm\:pb-28') {
        @include assert {
          @include output {
            @include sm\:pb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('sm\:pl-28') {
        @include assert {
          @include output {
            @include sm\:pl-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 7rem;
            }
          }
        }
      }

      @include it('sm\:p-32') {
        @include assert {
          @include output {
            @include sm\:p-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 8rem;
            }
          }
        }
      }

      @include it('sm\:px-32') {
        @include assert {
          @include output {
            @include sm\:px-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 8rem;
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('sm\:py-32') {
        @include assert {
          @include output {
            @include sm\:py-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 8rem;
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('sm\:ps-32') {
        @include assert {
          @include output {
            @include sm\:ps-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 8rem;
            }
          }
        }
      }

      @include it('sm\:pe-32') {
        @include assert {
          @include output {
            @include sm\:pe-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 8rem;
            }
          }
        }
      }

      @include it('sm\:pt-32') {
        @include assert {
          @include output {
            @include sm\:pt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 8rem;
            }
          }
        }
      }

      @include it('sm\:pr-32') {
        @include assert {
          @include output {
            @include sm\:pr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('sm\:pb-32') {
        @include assert {
          @include output {
            @include sm\:pb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('sm\:pl-32') {
        @include assert {
          @include output {
            @include sm\:pl-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 8rem;
            }
          }
        }
      }

      @include it('sm\:p-36') {
        @include assert {
          @include output {
            @include sm\:p-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 9rem;
            }
          }
        }
      }

      @include it('sm\:px-36') {
        @include assert {
          @include output {
            @include sm\:px-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 9rem;
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('sm\:py-36') {
        @include assert {
          @include output {
            @include sm\:py-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 9rem;
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('sm\:ps-36') {
        @include assert {
          @include output {
            @include sm\:ps-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 9rem;
            }
          }
        }
      }

      @include it('sm\:pe-36') {
        @include assert {
          @include output {
            @include sm\:pe-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 9rem;
            }
          }
        }
      }

      @include it('sm\:pt-36') {
        @include assert {
          @include output {
            @include sm\:pt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 9rem;
            }
          }
        }
      }

      @include it('sm\:pr-36') {
        @include assert {
          @include output {
            @include sm\:pr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('sm\:pb-36') {
        @include assert {
          @include output {
            @include sm\:pb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('sm\:pl-36') {
        @include assert {
          @include output {
            @include sm\:pl-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 9rem;
            }
          }
        }
      }

      @include it('sm\:p-40') {
        @include assert {
          @include output {
            @include sm\:p-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 10rem;
            }
          }
        }
      }

      @include it('sm\:px-40') {
        @include assert {
          @include output {
            @include sm\:px-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 10rem;
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('sm\:py-40') {
        @include assert {
          @include output {
            @include sm\:py-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 10rem;
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('sm\:ps-40') {
        @include assert {
          @include output {
            @include sm\:ps-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 10rem;
            }
          }
        }
      }

      @include it('sm\:pe-40') {
        @include assert {
          @include output {
            @include sm\:pe-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 10rem;
            }
          }
        }
      }

      @include it('sm\:pt-40') {
        @include assert {
          @include output {
            @include sm\:pt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 10rem;
            }
          }
        }
      }

      @include it('sm\:pr-40') {
        @include assert {
          @include output {
            @include sm\:pr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('sm\:pb-40') {
        @include assert {
          @include output {
            @include sm\:pb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('sm\:pl-40') {
        @include assert {
          @include output {
            @include sm\:pl-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 10rem;
            }
          }
        }
      }

      @include it('sm\:p-44') {
        @include assert {
          @include output {
            @include sm\:p-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 11rem;
            }
          }
        }
      }

      @include it('sm\:px-44') {
        @include assert {
          @include output {
            @include sm\:px-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 11rem;
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('sm\:py-44') {
        @include assert {
          @include output {
            @include sm\:py-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 11rem;
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('sm\:ps-44') {
        @include assert {
          @include output {
            @include sm\:ps-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 11rem;
            }
          }
        }
      }

      @include it('sm\:pe-44') {
        @include assert {
          @include output {
            @include sm\:pe-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 11rem;
            }
          }
        }
      }

      @include it('sm\:pt-44') {
        @include assert {
          @include output {
            @include sm\:pt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 11rem;
            }
          }
        }
      }

      @include it('sm\:pr-44') {
        @include assert {
          @include output {
            @include sm\:pr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('sm\:pb-44') {
        @include assert {
          @include output {
            @include sm\:pb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('sm\:pl-44') {
        @include assert {
          @include output {
            @include sm\:pl-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 11rem;
            }
          }
        }
      }

      @include it('sm\:p-48') {
        @include assert {
          @include output {
            @include sm\:p-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 12rem;
            }
          }
        }
      }

      @include it('sm\:px-48') {
        @include assert {
          @include output {
            @include sm\:px-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 12rem;
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('sm\:py-48') {
        @include assert {
          @include output {
            @include sm\:py-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 12rem;
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('sm\:ps-48') {
        @include assert {
          @include output {
            @include sm\:ps-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 12rem;
            }
          }
        }
      }

      @include it('sm\:pe-48') {
        @include assert {
          @include output {
            @include sm\:pe-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 12rem;
            }
          }
        }
      }

      @include it('sm\:pt-48') {
        @include assert {
          @include output {
            @include sm\:pt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 12rem;
            }
          }
        }
      }

      @include it('sm\:pr-48') {
        @include assert {
          @include output {
            @include sm\:pr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('sm\:pb-48') {
        @include assert {
          @include output {
            @include sm\:pb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('sm\:pl-48') {
        @include assert {
          @include output {
            @include sm\:pl-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 12rem;
            }
          }
        }
      }

      @include it('sm\:p-52') {
        @include assert {
          @include output {
            @include sm\:p-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 13rem;
            }
          }
        }
      }

      @include it('sm\:px-52') {
        @include assert {
          @include output {
            @include sm\:px-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 13rem;
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('sm\:py-52') {
        @include assert {
          @include output {
            @include sm\:py-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 13rem;
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('sm\:ps-52') {
        @include assert {
          @include output {
            @include sm\:ps-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 13rem;
            }
          }
        }
      }

      @include it('sm\:pe-52') {
        @include assert {
          @include output {
            @include sm\:pe-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 13rem;
            }
          }
        }
      }

      @include it('sm\:pt-52') {
        @include assert {
          @include output {
            @include sm\:pt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 13rem;
            }
          }
        }
      }

      @include it('sm\:pr-52') {
        @include assert {
          @include output {
            @include sm\:pr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('sm\:pb-52') {
        @include assert {
          @include output {
            @include sm\:pb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('sm\:pl-52') {
        @include assert {
          @include output {
            @include sm\:pl-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 13rem;
            }
          }
        }
      }

      @include it('sm\:p-56') {
        @include assert {
          @include output {
            @include sm\:p-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 14rem;
            }
          }
        }
      }

      @include it('sm\:px-56') {
        @include assert {
          @include output {
            @include sm\:px-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 14rem;
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('sm\:py-56') {
        @include assert {
          @include output {
            @include sm\:py-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 14rem;
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('sm\:ps-56') {
        @include assert {
          @include output {
            @include sm\:ps-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 14rem;
            }
          }
        }
      }

      @include it('sm\:pe-56') {
        @include assert {
          @include output {
            @include sm\:pe-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 14rem;
            }
          }
        }
      }

      @include it('sm\:pt-56') {
        @include assert {
          @include output {
            @include sm\:pt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 14rem;
            }
          }
        }
      }

      @include it('sm\:pr-56') {
        @include assert {
          @include output {
            @include sm\:pr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('sm\:pb-56') {
        @include assert {
          @include output {
            @include sm\:pb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('sm\:pl-56') {
        @include assert {
          @include output {
            @include sm\:pl-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 14rem;
            }
          }
        }
      }

      @include it('sm\:p-60') {
        @include assert {
          @include output {
            @include sm\:p-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 15rem;
            }
          }
        }
      }

      @include it('sm\:px-60') {
        @include assert {
          @include output {
            @include sm\:px-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 15rem;
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('sm\:py-60') {
        @include assert {
          @include output {
            @include sm\:py-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 15rem;
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('sm\:ps-60') {
        @include assert {
          @include output {
            @include sm\:ps-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 15rem;
            }
          }
        }
      }

      @include it('sm\:pe-60') {
        @include assert {
          @include output {
            @include sm\:pe-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 15rem;
            }
          }
        }
      }

      @include it('sm\:pt-60') {
        @include assert {
          @include output {
            @include sm\:pt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 15rem;
            }
          }
        }
      }

      @include it('sm\:pr-60') {
        @include assert {
          @include output {
            @include sm\:pr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('sm\:pb-60') {
        @include assert {
          @include output {
            @include sm\:pb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('sm\:pl-60') {
        @include assert {
          @include output {
            @include sm\:pl-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 15rem;
            }
          }
        }
      }

      @include it('sm\:p-64') {
        @include assert {
          @include output {
            @include sm\:p-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 16rem;
            }
          }
        }
      }

      @include it('sm\:px-64') {
        @include assert {
          @include output {
            @include sm\:px-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 16rem;
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('sm\:py-64') {
        @include assert {
          @include output {
            @include sm\:py-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 16rem;
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('sm\:ps-64') {
        @include assert {
          @include output {
            @include sm\:ps-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 16rem;
            }
          }
        }
      }

      @include it('sm\:pe-64') {
        @include assert {
          @include output {
            @include sm\:pe-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 16rem;
            }
          }
        }
      }

      @include it('sm\:pt-64') {
        @include assert {
          @include output {
            @include sm\:pt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 16rem;
            }
          }
        }
      }

      @include it('sm\:pr-64') {
        @include assert {
          @include output {
            @include sm\:pr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('sm\:pb-64') {
        @include assert {
          @include output {
            @include sm\:pb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('sm\:pl-64') {
        @include assert {
          @include output {
            @include sm\:pl-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 16rem;
            }
          }
        }
      }

      @include it('sm\:p-72') {
        @include assert {
          @include output {
            @include sm\:p-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 18rem;
            }
          }
        }
      }

      @include it('sm\:px-72') {
        @include assert {
          @include output {
            @include sm\:px-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 18rem;
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('sm\:py-72') {
        @include assert {
          @include output {
            @include sm\:py-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 18rem;
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('sm\:ps-72') {
        @include assert {
          @include output {
            @include sm\:ps-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 18rem;
            }
          }
        }
      }

      @include it('sm\:pe-72') {
        @include assert {
          @include output {
            @include sm\:pe-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 18rem;
            }
          }
        }
      }

      @include it('sm\:pt-72') {
        @include assert {
          @include output {
            @include sm\:pt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 18rem;
            }
          }
        }
      }

      @include it('sm\:pr-72') {
        @include assert {
          @include output {
            @include sm\:pr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('sm\:pb-72') {
        @include assert {
          @include output {
            @include sm\:pb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('sm\:pl-72') {
        @include assert {
          @include output {
            @include sm\:pl-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 18rem;
            }
          }
        }
      }

      @include it('sm\:p-80') {
        @include assert {
          @include output {
            @include sm\:p-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 20rem;
            }
          }
        }
      }

      @include it('sm\:px-80') {
        @include assert {
          @include output {
            @include sm\:px-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 20rem;
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('sm\:py-80') {
        @include assert {
          @include output {
            @include sm\:py-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 20rem;
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('sm\:ps-80') {
        @include assert {
          @include output {
            @include sm\:ps-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 20rem;
            }
          }
        }
      }

      @include it('sm\:pe-80') {
        @include assert {
          @include output {
            @include sm\:pe-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 20rem;
            }
          }
        }
      }

      @include it('sm\:pt-80') {
        @include assert {
          @include output {
            @include sm\:pt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 20rem;
            }
          }
        }
      }

      @include it('sm\:pr-80') {
        @include assert {
          @include output {
            @include sm\:pr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('sm\:pb-80') {
        @include assert {
          @include output {
            @include sm\:pb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('sm\:pl-80') {
        @include assert {
          @include output {
            @include sm\:pl-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 20rem;
            }
          }
        }
      }

      @include it('sm\:p-96') {
        @include assert {
          @include output {
            @include sm\:p-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 24rem;
            }
          }
        }
      }

      @include it('sm\:px-96') {
        @include assert {
          @include output {
            @include sm\:px-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 24rem;
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('sm\:py-96') {
        @include assert {
          @include output {
            @include sm\:py-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 24rem;
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('sm\:ps-96') {
        @include assert {
          @include output {
            @include sm\:ps-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 24rem;
            }
          }
        }
      }

      @include it('sm\:pe-96') {
        @include assert {
          @include output {
            @include sm\:pe-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 24rem;
            }
          }
        }
      }

      @include it('sm\:pt-96') {
        @include assert {
          @include output {
            @include sm\:pt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 24rem;
            }
          }
        }
      }

      @include it('sm\:pr-96') {
        @include assert {
          @include output {
            @include sm\:pr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('sm\:pb-96') {
        @include assert {
          @include output {
            @include sm\:pb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('sm\:pl-96') {
        @include assert {
          @include output {
            @include sm\:pl-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 24rem;
            }
          }
        }
      }

      @include it('md\:p-0') {
        @include assert {
          @include output {
            @include md\:p-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0px;
            }
          }
        }
      }

      @include it('md\:px-0') {
        @include assert {
          @include output {
            @include md\:px-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0px;
              padding-right: 0px;
            }
          }
        }
      }

      @include it('md\:py-0') {
        @include assert {
          @include output {
            @include md\:py-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0px;
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('md\:ps-0') {
        @include assert {
          @include output {
            @include md\:ps-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0px;
            }
          }
        }
      }

      @include it('md\:pe-0') {
        @include assert {
          @include output {
            @include md\:pe-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0px;
            }
          }
        }
      }

      @include it('md\:pt-0') {
        @include assert {
          @include output {
            @include md\:pt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0px;
            }
          }
        }
      }

      @include it('md\:pr-0') {
        @include assert {
          @include output {
            @include md\:pr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0px;
            }
          }
        }
      }

      @include it('md\:pb-0') {
        @include assert {
          @include output {
            @include md\:pb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('md\:pl-0') {
        @include assert {
          @include output {
            @include md\:pl-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0px;
            }
          }
        }
      }

      @include it('md\:p-px') {
        @include assert {
          @include output {
            @include md\:p-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 1px;
            }
          }
        }
      }

      @include it('md\:px-px') {
        @include assert {
          @include output {
            @include md\:px-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1px;
              padding-right: 1px;
            }
          }
        }
      }

      @include it('md\:py-px') {
        @include assert {
          @include output {
            @include md\:py-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1px;
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('md\:ps-px') {
        @include assert {
          @include output {
            @include md\:ps-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 1px;
            }
          }
        }
      }

      @include it('md\:pe-px') {
        @include assert {
          @include output {
            @include md\:pe-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 1px;
            }
          }
        }
      }

      @include it('md\:pt-px') {
        @include assert {
          @include output {
            @include md\:pt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1px;
            }
          }
        }
      }

      @include it('md\:pr-px') {
        @include assert {
          @include output {
            @include md\:pr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 1px;
            }
          }
        }
      }

      @include it('md\:pb-px') {
        @include assert {
          @include output {
            @include md\:pb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('md\:pl-px') {
        @include assert {
          @include output {
            @include md\:pl-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1px;
            }
          }
        }
      }

      @include it('md\:p-0\.5') {
        @include assert {
          @include output {
            @include md\:p-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.125rem;
            }
          }
        }
      }

      @include it('md\:px-0\.5') {
        @include assert {
          @include output {
            @include md\:px-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.125rem;
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('md\:py-0\.5') {
        @include assert {
          @include output {
            @include md\:py-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.125rem;
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('md\:ps-0\.5') {
        @include assert {
          @include output {
            @include md\:ps-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('md\:pe-0\.5') {
        @include assert {
          @include output {
            @include md\:pe-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('md\:pt-0\.5') {
        @include assert {
          @include output {
            @include md\:pt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.125rem;
            }
          }
        }
      }

      @include it('md\:pr-0\.5') {
        @include assert {
          @include output {
            @include md\:pr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('md\:pb-0\.5') {
        @include assert {
          @include output {
            @include md\:pb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('md\:pl-0\.5') {
        @include assert {
          @include output {
            @include md\:pl-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.125rem;
            }
          }
        }
      }

      @include it('md\:p-1') {
        @include assert {
          @include output {
            @include md\:p-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.25rem;
            }
          }
        }
      }

      @include it('md\:px-1') {
        @include assert {
          @include output {
            @include md\:px-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.25rem;
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('md\:py-1') {
        @include assert {
          @include output {
            @include md\:py-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.25rem;
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('md\:ps-1') {
        @include assert {
          @include output {
            @include md\:ps-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('md\:pe-1') {
        @include assert {
          @include output {
            @include md\:pe-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('md\:pt-1') {
        @include assert {
          @include output {
            @include md\:pt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.25rem;
            }
          }
        }
      }

      @include it('md\:pr-1') {
        @include assert {
          @include output {
            @include md\:pr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('md\:pb-1') {
        @include assert {
          @include output {
            @include md\:pb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('md\:pl-1') {
        @include assert {
          @include output {
            @include md\:pl-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.25rem;
            }
          }
        }
      }

      @include it('md\:p-1\.5') {
        @include assert {
          @include output {
            @include md\:p-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.375rem;
            }
          }
        }
      }

      @include it('md\:px-1\.5') {
        @include assert {
          @include output {
            @include md\:px-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.375rem;
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('md\:py-1\.5') {
        @include assert {
          @include output {
            @include md\:py-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.375rem;
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('md\:ps-1\.5') {
        @include assert {
          @include output {
            @include md\:ps-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('md\:pe-1\.5') {
        @include assert {
          @include output {
            @include md\:pe-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('md\:pt-1\.5') {
        @include assert {
          @include output {
            @include md\:pt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.375rem;
            }
          }
        }
      }

      @include it('md\:pr-1\.5') {
        @include assert {
          @include output {
            @include md\:pr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('md\:pb-1\.5') {
        @include assert {
          @include output {
            @include md\:pb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('md\:pl-1\.5') {
        @include assert {
          @include output {
            @include md\:pl-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.375rem;
            }
          }
        }
      }

      @include it('md\:p-2') {
        @include assert {
          @include output {
            @include md\:p-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.5rem;
            }
          }
        }
      }

      @include it('md\:px-2') {
        @include assert {
          @include output {
            @include md\:px-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.5rem;
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('md\:py-2') {
        @include assert {
          @include output {
            @include md\:py-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('md\:ps-2') {
        @include assert {
          @include output {
            @include md\:ps-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('md\:pe-2') {
        @include assert {
          @include output {
            @include md\:pe-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('md\:pt-2') {
        @include assert {
          @include output {
            @include md\:pt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.5rem;
            }
          }
        }
      }

      @include it('md\:pr-2') {
        @include assert {
          @include output {
            @include md\:pr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('md\:pb-2') {
        @include assert {
          @include output {
            @include md\:pb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('md\:pl-2') {
        @include assert {
          @include output {
            @include md\:pl-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.5rem;
            }
          }
        }
      }

      @include it('md\:p-2\.5') {
        @include assert {
          @include output {
            @include md\:p-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.625rem;
            }
          }
        }
      }

      @include it('md\:px-2\.5') {
        @include assert {
          @include output {
            @include md\:px-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.625rem;
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('md\:py-2\.5') {
        @include assert {
          @include output {
            @include md\:py-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.625rem;
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('md\:ps-2\.5') {
        @include assert {
          @include output {
            @include md\:ps-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('md\:pe-2\.5') {
        @include assert {
          @include output {
            @include md\:pe-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('md\:pt-2\.5') {
        @include assert {
          @include output {
            @include md\:pt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.625rem;
            }
          }
        }
      }

      @include it('md\:pr-2\.5') {
        @include assert {
          @include output {
            @include md\:pr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('md\:pb-2\.5') {
        @include assert {
          @include output {
            @include md\:pb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('md\:pl-2\.5') {
        @include assert {
          @include output {
            @include md\:pl-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.625rem;
            }
          }
        }
      }

      @include it('md\:p-3') {
        @include assert {
          @include output {
            @include md\:p-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.75rem;
            }
          }
        }
      }

      @include it('md\:px-3') {
        @include assert {
          @include output {
            @include md\:px-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.75rem;
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('md\:py-3') {
        @include assert {
          @include output {
            @include md\:py-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.75rem;
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('md\:ps-3') {
        @include assert {
          @include output {
            @include md\:ps-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('md\:pe-3') {
        @include assert {
          @include output {
            @include md\:pe-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('md\:pt-3') {
        @include assert {
          @include output {
            @include md\:pt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.75rem;
            }
          }
        }
      }

      @include it('md\:pr-3') {
        @include assert {
          @include output {
            @include md\:pr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('md\:pb-3') {
        @include assert {
          @include output {
            @include md\:pb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('md\:pl-3') {
        @include assert {
          @include output {
            @include md\:pl-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.75rem;
            }
          }
        }
      }

      @include it('md\:p-3\.5') {
        @include assert {
          @include output {
            @include md\:p-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 0.875rem;
            }
          }
        }
      }

      @include it('md\:px-3\.5') {
        @include assert {
          @include output {
            @include md\:px-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.875rem;
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('md\:py-3\.5') {
        @include assert {
          @include output {
            @include md\:py-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.875rem;
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('md\:ps-3\.5') {
        @include assert {
          @include output {
            @include md\:ps-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('md\:pe-3\.5') {
        @include assert {
          @include output {
            @include md\:pe-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('md\:pt-3\.5') {
        @include assert {
          @include output {
            @include md\:pt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 0.875rem;
            }
          }
        }
      }

      @include it('md\:pr-3\.5') {
        @include assert {
          @include output {
            @include md\:pr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('md\:pb-3\.5') {
        @include assert {
          @include output {
            @include md\:pb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('md\:pl-3\.5') {
        @include assert {
          @include output {
            @include md\:pl-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 0.875rem;
            }
          }
        }
      }

      @include it('md\:p-4') {
        @include assert {
          @include output {
            @include md\:p-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 1rem;
            }
          }
        }
      }

      @include it('md\:px-4') {
        @include assert {
          @include output {
            @include md\:px-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1rem;
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('md\:py-4') {
        @include assert {
          @include output {
            @include md\:py-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1rem;
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('md\:ps-4') {
        @include assert {
          @include output {
            @include md\:ps-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 1rem;
            }
          }
        }
      }

      @include it('md\:pe-4') {
        @include assert {
          @include output {
            @include md\:pe-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 1rem;
            }
          }
        }
      }

      @include it('md\:pt-4') {
        @include assert {
          @include output {
            @include md\:pt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1rem;
            }
          }
        }
      }

      @include it('md\:pr-4') {
        @include assert {
          @include output {
            @include md\:pr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('md\:pb-4') {
        @include assert {
          @include output {
            @include md\:pb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('md\:pl-4') {
        @include assert {
          @include output {
            @include md\:pl-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1rem;
            }
          }
        }
      }

      @include it('md\:p-5') {
        @include assert {
          @include output {
            @include md\:p-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 1.25rem;
            }
          }
        }
      }

      @include it('md\:px-5') {
        @include assert {
          @include output {
            @include md\:px-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.25rem;
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('md\:py-5') {
        @include assert {
          @include output {
            @include md\:py-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.25rem;
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('md\:ps-5') {
        @include assert {
          @include output {
            @include md\:ps-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('md\:pe-5') {
        @include assert {
          @include output {
            @include md\:pe-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('md\:pt-5') {
        @include assert {
          @include output {
            @include md\:pt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.25rem;
            }
          }
        }
      }

      @include it('md\:pr-5') {
        @include assert {
          @include output {
            @include md\:pr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('md\:pb-5') {
        @include assert {
          @include output {
            @include md\:pb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('md\:pl-5') {
        @include assert {
          @include output {
            @include md\:pl-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.25rem;
            }
          }
        }
      }

      @include it('md\:p-6') {
        @include assert {
          @include output {
            @include md\:p-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 1.5rem;
            }
          }
        }
      }

      @include it('md\:px-6') {
        @include assert {
          @include output {
            @include md\:px-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.5rem;
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('md\:py-6') {
        @include assert {
          @include output {
            @include md\:py-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.5rem;
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('md\:ps-6') {
        @include assert {
          @include output {
            @include md\:ps-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('md\:pe-6') {
        @include assert {
          @include output {
            @include md\:pe-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('md\:pt-6') {
        @include assert {
          @include output {
            @include md\:pt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.5rem;
            }
          }
        }
      }

      @include it('md\:pr-6') {
        @include assert {
          @include output {
            @include md\:pr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('md\:pb-6') {
        @include assert {
          @include output {
            @include md\:pb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('md\:pl-6') {
        @include assert {
          @include output {
            @include md\:pl-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.5rem;
            }
          }
        }
      }

      @include it('md\:p-7') {
        @include assert {
          @include output {
            @include md\:p-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 1.75rem;
            }
          }
        }
      }

      @include it('md\:px-7') {
        @include assert {
          @include output {
            @include md\:px-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.75rem;
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('md\:py-7') {
        @include assert {
          @include output {
            @include md\:py-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.75rem;
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('md\:ps-7') {
        @include assert {
          @include output {
            @include md\:ps-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('md\:pe-7') {
        @include assert {
          @include output {
            @include md\:pe-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('md\:pt-7') {
        @include assert {
          @include output {
            @include md\:pt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 1.75rem;
            }
          }
        }
      }

      @include it('md\:pr-7') {
        @include assert {
          @include output {
            @include md\:pr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('md\:pb-7') {
        @include assert {
          @include output {
            @include md\:pb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('md\:pl-7') {
        @include assert {
          @include output {
            @include md\:pl-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 1.75rem;
            }
          }
        }
      }

      @include it('md\:p-8') {
        @include assert {
          @include output {
            @include md\:p-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 2rem;
            }
          }
        }
      }

      @include it('md\:px-8') {
        @include assert {
          @include output {
            @include md\:px-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2rem;
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('md\:py-8') {
        @include assert {
          @include output {
            @include md\:py-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2rem;
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('md\:ps-8') {
        @include assert {
          @include output {
            @include md\:ps-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 2rem;
            }
          }
        }
      }

      @include it('md\:pe-8') {
        @include assert {
          @include output {
            @include md\:pe-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 2rem;
            }
          }
        }
      }

      @include it('md\:pt-8') {
        @include assert {
          @include output {
            @include md\:pt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2rem;
            }
          }
        }
      }

      @include it('md\:pr-8') {
        @include assert {
          @include output {
            @include md\:pr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('md\:pb-8') {
        @include assert {
          @include output {
            @include md\:pb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('md\:pl-8') {
        @include assert {
          @include output {
            @include md\:pl-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2rem;
            }
          }
        }
      }

      @include it('md\:p-9') {
        @include assert {
          @include output {
            @include md\:p-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 2.25rem;
            }
          }
        }
      }

      @include it('md\:px-9') {
        @include assert {
          @include output {
            @include md\:px-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.25rem;
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('md\:py-9') {
        @include assert {
          @include output {
            @include md\:py-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.25rem;
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('md\:ps-9') {
        @include assert {
          @include output {
            @include md\:ps-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('md\:pe-9') {
        @include assert {
          @include output {
            @include md\:pe-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('md\:pt-9') {
        @include assert {
          @include output {
            @include md\:pt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.25rem;
            }
          }
        }
      }

      @include it('md\:pr-9') {
        @include assert {
          @include output {
            @include md\:pr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('md\:pb-9') {
        @include assert {
          @include output {
            @include md\:pb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('md\:pl-9') {
        @include assert {
          @include output {
            @include md\:pl-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.25rem;
            }
          }
        }
      }

      @include it('md\:p-10') {
        @include assert {
          @include output {
            @include md\:p-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 2.5rem;
            }
          }
        }
      }

      @include it('md\:px-10') {
        @include assert {
          @include output {
            @include md\:px-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.5rem;
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('md\:py-10') {
        @include assert {
          @include output {
            @include md\:py-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.5rem;
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('md\:ps-10') {
        @include assert {
          @include output {
            @include md\:ps-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('md\:pe-10') {
        @include assert {
          @include output {
            @include md\:pe-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('md\:pt-10') {
        @include assert {
          @include output {
            @include md\:pt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.5rem;
            }
          }
        }
      }

      @include it('md\:pr-10') {
        @include assert {
          @include output {
            @include md\:pr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('md\:pb-10') {
        @include assert {
          @include output {
            @include md\:pb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('md\:pl-10') {
        @include assert {
          @include output {
            @include md\:pl-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.5rem;
            }
          }
        }
      }

      @include it('md\:p-11') {
        @include assert {
          @include output {
            @include md\:p-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 2.75rem;
            }
          }
        }
      }

      @include it('md\:px-11') {
        @include assert {
          @include output {
            @include md\:px-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.75rem;
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('md\:py-11') {
        @include assert {
          @include output {
            @include md\:py-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.75rem;
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('md\:ps-11') {
        @include assert {
          @include output {
            @include md\:ps-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('md\:pe-11') {
        @include assert {
          @include output {
            @include md\:pe-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('md\:pt-11') {
        @include assert {
          @include output {
            @include md\:pt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 2.75rem;
            }
          }
        }
      }

      @include it('md\:pr-11') {
        @include assert {
          @include output {
            @include md\:pr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('md\:pb-11') {
        @include assert {
          @include output {
            @include md\:pb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('md\:pl-11') {
        @include assert {
          @include output {
            @include md\:pl-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 2.75rem;
            }
          }
        }
      }

      @include it('md\:p-12') {
        @include assert {
          @include output {
            @include md\:p-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 3rem;
            }
          }
        }
      }

      @include it('md\:px-12') {
        @include assert {
          @include output {
            @include md\:px-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 3rem;
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('md\:py-12') {
        @include assert {
          @include output {
            @include md\:py-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 3rem;
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('md\:ps-12') {
        @include assert {
          @include output {
            @include md\:ps-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 3rem;
            }
          }
        }
      }

      @include it('md\:pe-12') {
        @include assert {
          @include output {
            @include md\:pe-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 3rem;
            }
          }
        }
      }

      @include it('md\:pt-12') {
        @include assert {
          @include output {
            @include md\:pt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 3rem;
            }
          }
        }
      }

      @include it('md\:pr-12') {
        @include assert {
          @include output {
            @include md\:pr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('md\:pb-12') {
        @include assert {
          @include output {
            @include md\:pb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('md\:pl-12') {
        @include assert {
          @include output {
            @include md\:pl-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 3rem;
            }
          }
        }
      }

      @include it('md\:p-14') {
        @include assert {
          @include output {
            @include md\:p-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 3.5rem;
            }
          }
        }
      }

      @include it('md\:px-14') {
        @include assert {
          @include output {
            @include md\:px-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 3.5rem;
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('md\:py-14') {
        @include assert {
          @include output {
            @include md\:py-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 3.5rem;
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('md\:ps-14') {
        @include assert {
          @include output {
            @include md\:ps-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('md\:pe-14') {
        @include assert {
          @include output {
            @include md\:pe-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('md\:pt-14') {
        @include assert {
          @include output {
            @include md\:pt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 3.5rem;
            }
          }
        }
      }

      @include it('md\:pr-14') {
        @include assert {
          @include output {
            @include md\:pr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('md\:pb-14') {
        @include assert {
          @include output {
            @include md\:pb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('md\:pl-14') {
        @include assert {
          @include output {
            @include md\:pl-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 3.5rem;
            }
          }
        }
      }

      @include it('md\:p-16') {
        @include assert {
          @include output {
            @include md\:p-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 4rem;
            }
          }
        }
      }

      @include it('md\:px-16') {
        @include assert {
          @include output {
            @include md\:px-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 4rem;
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('md\:py-16') {
        @include assert {
          @include output {
            @include md\:py-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 4rem;
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('md\:ps-16') {
        @include assert {
          @include output {
            @include md\:ps-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 4rem;
            }
          }
        }
      }

      @include it('md\:pe-16') {
        @include assert {
          @include output {
            @include md\:pe-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 4rem;
            }
          }
        }
      }

      @include it('md\:pt-16') {
        @include assert {
          @include output {
            @include md\:pt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 4rem;
            }
          }
        }
      }

      @include it('md\:pr-16') {
        @include assert {
          @include output {
            @include md\:pr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('md\:pb-16') {
        @include assert {
          @include output {
            @include md\:pb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('md\:pl-16') {
        @include assert {
          @include output {
            @include md\:pl-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 4rem;
            }
          }
        }
      }

      @include it('md\:p-20') {
        @include assert {
          @include output {
            @include md\:p-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 5rem;
            }
          }
        }
      }

      @include it('md\:px-20') {
        @include assert {
          @include output {
            @include md\:px-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('md\:py-20') {
        @include assert {
          @include output {
            @include md\:py-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 5rem;
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('md\:ps-20') {
        @include assert {
          @include output {
            @include md\:ps-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 5rem;
            }
          }
        }
      }

      @include it('md\:pe-20') {
        @include assert {
          @include output {
            @include md\:pe-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 5rem;
            }
          }
        }
      }

      @include it('md\:pt-20') {
        @include assert {
          @include output {
            @include md\:pt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 5rem;
            }
          }
        }
      }

      @include it('md\:pr-20') {
        @include assert {
          @include output {
            @include md\:pr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('md\:pb-20') {
        @include assert {
          @include output {
            @include md\:pb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('md\:pl-20') {
        @include assert {
          @include output {
            @include md\:pl-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 5rem;
            }
          }
        }
      }

      @include it('md\:p-24') {
        @include assert {
          @include output {
            @include md\:p-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 6rem;
            }
          }
        }
      }

      @include it('md\:px-24') {
        @include assert {
          @include output {
            @include md\:px-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 6rem;
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('md\:py-24') {
        @include assert {
          @include output {
            @include md\:py-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 6rem;
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('md\:ps-24') {
        @include assert {
          @include output {
            @include md\:ps-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 6rem;
            }
          }
        }
      }

      @include it('md\:pe-24') {
        @include assert {
          @include output {
            @include md\:pe-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 6rem;
            }
          }
        }
      }

      @include it('md\:pt-24') {
        @include assert {
          @include output {
            @include md\:pt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 6rem;
            }
          }
        }
      }

      @include it('md\:pr-24') {
        @include assert {
          @include output {
            @include md\:pr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('md\:pb-24') {
        @include assert {
          @include output {
            @include md\:pb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('md\:pl-24') {
        @include assert {
          @include output {
            @include md\:pl-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 6rem;
            }
          }
        }
      }

      @include it('md\:p-28') {
        @include assert {
          @include output {
            @include md\:p-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 7rem;
            }
          }
        }
      }

      @include it('md\:px-28') {
        @include assert {
          @include output {
            @include md\:px-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 7rem;
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('md\:py-28') {
        @include assert {
          @include output {
            @include md\:py-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 7rem;
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('md\:ps-28') {
        @include assert {
          @include output {
            @include md\:ps-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 7rem;
            }
          }
        }
      }

      @include it('md\:pe-28') {
        @include assert {
          @include output {
            @include md\:pe-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 7rem;
            }
          }
        }
      }

      @include it('md\:pt-28') {
        @include assert {
          @include output {
            @include md\:pt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 7rem;
            }
          }
        }
      }

      @include it('md\:pr-28') {
        @include assert {
          @include output {
            @include md\:pr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('md\:pb-28') {
        @include assert {
          @include output {
            @include md\:pb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('md\:pl-28') {
        @include assert {
          @include output {
            @include md\:pl-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 7rem;
            }
          }
        }
      }

      @include it('md\:p-32') {
        @include assert {
          @include output {
            @include md\:p-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 8rem;
            }
          }
        }
      }

      @include it('md\:px-32') {
        @include assert {
          @include output {
            @include md\:px-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 8rem;
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('md\:py-32') {
        @include assert {
          @include output {
            @include md\:py-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 8rem;
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('md\:ps-32') {
        @include assert {
          @include output {
            @include md\:ps-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 8rem;
            }
          }
        }
      }

      @include it('md\:pe-32') {
        @include assert {
          @include output {
            @include md\:pe-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 8rem;
            }
          }
        }
      }

      @include it('md\:pt-32') {
        @include assert {
          @include output {
            @include md\:pt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 8rem;
            }
          }
        }
      }

      @include it('md\:pr-32') {
        @include assert {
          @include output {
            @include md\:pr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('md\:pb-32') {
        @include assert {
          @include output {
            @include md\:pb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('md\:pl-32') {
        @include assert {
          @include output {
            @include md\:pl-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 8rem;
            }
          }
        }
      }

      @include it('md\:p-36') {
        @include assert {
          @include output {
            @include md\:p-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 9rem;
            }
          }
        }
      }

      @include it('md\:px-36') {
        @include assert {
          @include output {
            @include md\:px-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 9rem;
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('md\:py-36') {
        @include assert {
          @include output {
            @include md\:py-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 9rem;
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('md\:ps-36') {
        @include assert {
          @include output {
            @include md\:ps-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 9rem;
            }
          }
        }
      }

      @include it('md\:pe-36') {
        @include assert {
          @include output {
            @include md\:pe-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 9rem;
            }
          }
        }
      }

      @include it('md\:pt-36') {
        @include assert {
          @include output {
            @include md\:pt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 9rem;
            }
          }
        }
      }

      @include it('md\:pr-36') {
        @include assert {
          @include output {
            @include md\:pr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('md\:pb-36') {
        @include assert {
          @include output {
            @include md\:pb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('md\:pl-36') {
        @include assert {
          @include output {
            @include md\:pl-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 9rem;
            }
          }
        }
      }

      @include it('md\:p-40') {
        @include assert {
          @include output {
            @include md\:p-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 10rem;
            }
          }
        }
      }

      @include it('md\:px-40') {
        @include assert {
          @include output {
            @include md\:px-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 10rem;
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('md\:py-40') {
        @include assert {
          @include output {
            @include md\:py-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 10rem;
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('md\:ps-40') {
        @include assert {
          @include output {
            @include md\:ps-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 10rem;
            }
          }
        }
      }

      @include it('md\:pe-40') {
        @include assert {
          @include output {
            @include md\:pe-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 10rem;
            }
          }
        }
      }

      @include it('md\:pt-40') {
        @include assert {
          @include output {
            @include md\:pt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 10rem;
            }
          }
        }
      }

      @include it('md\:pr-40') {
        @include assert {
          @include output {
            @include md\:pr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('md\:pb-40') {
        @include assert {
          @include output {
            @include md\:pb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('md\:pl-40') {
        @include assert {
          @include output {
            @include md\:pl-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 10rem;
            }
          }
        }
      }

      @include it('md\:p-44') {
        @include assert {
          @include output {
            @include md\:p-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 11rem;
            }
          }
        }
      }

      @include it('md\:px-44') {
        @include assert {
          @include output {
            @include md\:px-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 11rem;
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('md\:py-44') {
        @include assert {
          @include output {
            @include md\:py-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 11rem;
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('md\:ps-44') {
        @include assert {
          @include output {
            @include md\:ps-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 11rem;
            }
          }
        }
      }

      @include it('md\:pe-44') {
        @include assert {
          @include output {
            @include md\:pe-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 11rem;
            }
          }
        }
      }

      @include it('md\:pt-44') {
        @include assert {
          @include output {
            @include md\:pt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 11rem;
            }
          }
        }
      }

      @include it('md\:pr-44') {
        @include assert {
          @include output {
            @include md\:pr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('md\:pb-44') {
        @include assert {
          @include output {
            @include md\:pb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('md\:pl-44') {
        @include assert {
          @include output {
            @include md\:pl-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 11rem;
            }
          }
        }
      }

      @include it('md\:p-48') {
        @include assert {
          @include output {
            @include md\:p-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 12rem;
            }
          }
        }
      }

      @include it('md\:px-48') {
        @include assert {
          @include output {
            @include md\:px-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 12rem;
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('md\:py-48') {
        @include assert {
          @include output {
            @include md\:py-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 12rem;
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('md\:ps-48') {
        @include assert {
          @include output {
            @include md\:ps-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 12rem;
            }
          }
        }
      }

      @include it('md\:pe-48') {
        @include assert {
          @include output {
            @include md\:pe-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 12rem;
            }
          }
        }
      }

      @include it('md\:pt-48') {
        @include assert {
          @include output {
            @include md\:pt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 12rem;
            }
          }
        }
      }

      @include it('md\:pr-48') {
        @include assert {
          @include output {
            @include md\:pr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('md\:pb-48') {
        @include assert {
          @include output {
            @include md\:pb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('md\:pl-48') {
        @include assert {
          @include output {
            @include md\:pl-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 12rem;
            }
          }
        }
      }

      @include it('md\:p-52') {
        @include assert {
          @include output {
            @include md\:p-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 13rem;
            }
          }
        }
      }

      @include it('md\:px-52') {
        @include assert {
          @include output {
            @include md\:px-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 13rem;
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('md\:py-52') {
        @include assert {
          @include output {
            @include md\:py-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 13rem;
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('md\:ps-52') {
        @include assert {
          @include output {
            @include md\:ps-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 13rem;
            }
          }
        }
      }

      @include it('md\:pe-52') {
        @include assert {
          @include output {
            @include md\:pe-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 13rem;
            }
          }
        }
      }

      @include it('md\:pt-52') {
        @include assert {
          @include output {
            @include md\:pt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 13rem;
            }
          }
        }
      }

      @include it('md\:pr-52') {
        @include assert {
          @include output {
            @include md\:pr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('md\:pb-52') {
        @include assert {
          @include output {
            @include md\:pb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('md\:pl-52') {
        @include assert {
          @include output {
            @include md\:pl-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 13rem;
            }
          }
        }
      }

      @include it('md\:p-56') {
        @include assert {
          @include output {
            @include md\:p-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 14rem;
            }
          }
        }
      }

      @include it('md\:px-56') {
        @include assert {
          @include output {
            @include md\:px-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 14rem;
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('md\:py-56') {
        @include assert {
          @include output {
            @include md\:py-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 14rem;
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('md\:ps-56') {
        @include assert {
          @include output {
            @include md\:ps-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 14rem;
            }
          }
        }
      }

      @include it('md\:pe-56') {
        @include assert {
          @include output {
            @include md\:pe-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 14rem;
            }
          }
        }
      }

      @include it('md\:pt-56') {
        @include assert {
          @include output {
            @include md\:pt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 14rem;
            }
          }
        }
      }

      @include it('md\:pr-56') {
        @include assert {
          @include output {
            @include md\:pr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('md\:pb-56') {
        @include assert {
          @include output {
            @include md\:pb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('md\:pl-56') {
        @include assert {
          @include output {
            @include md\:pl-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 14rem;
            }
          }
        }
      }

      @include it('md\:p-60') {
        @include assert {
          @include output {
            @include md\:p-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 15rem;
            }
          }
        }
      }

      @include it('md\:px-60') {
        @include assert {
          @include output {
            @include md\:px-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 15rem;
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('md\:py-60') {
        @include assert {
          @include output {
            @include md\:py-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 15rem;
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('md\:ps-60') {
        @include assert {
          @include output {
            @include md\:ps-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 15rem;
            }
          }
        }
      }

      @include it('md\:pe-60') {
        @include assert {
          @include output {
            @include md\:pe-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 15rem;
            }
          }
        }
      }

      @include it('md\:pt-60') {
        @include assert {
          @include output {
            @include md\:pt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 15rem;
            }
          }
        }
      }

      @include it('md\:pr-60') {
        @include assert {
          @include output {
            @include md\:pr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('md\:pb-60') {
        @include assert {
          @include output {
            @include md\:pb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('md\:pl-60') {
        @include assert {
          @include output {
            @include md\:pl-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 15rem;
            }
          }
        }
      }

      @include it('md\:p-64') {
        @include assert {
          @include output {
            @include md\:p-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 16rem;
            }
          }
        }
      }

      @include it('md\:px-64') {
        @include assert {
          @include output {
            @include md\:px-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 16rem;
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('md\:py-64') {
        @include assert {
          @include output {
            @include md\:py-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 16rem;
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('md\:ps-64') {
        @include assert {
          @include output {
            @include md\:ps-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 16rem;
            }
          }
        }
      }

      @include it('md\:pe-64') {
        @include assert {
          @include output {
            @include md\:pe-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 16rem;
            }
          }
        }
      }

      @include it('md\:pt-64') {
        @include assert {
          @include output {
            @include md\:pt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 16rem;
            }
          }
        }
      }

      @include it('md\:pr-64') {
        @include assert {
          @include output {
            @include md\:pr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('md\:pb-64') {
        @include assert {
          @include output {
            @include md\:pb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('md\:pl-64') {
        @include assert {
          @include output {
            @include md\:pl-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 16rem;
            }
          }
        }
      }

      @include it('md\:p-72') {
        @include assert {
          @include output {
            @include md\:p-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 18rem;
            }
          }
        }
      }

      @include it('md\:px-72') {
        @include assert {
          @include output {
            @include md\:px-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 18rem;
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('md\:py-72') {
        @include assert {
          @include output {
            @include md\:py-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 18rem;
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('md\:ps-72') {
        @include assert {
          @include output {
            @include md\:ps-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 18rem;
            }
          }
        }
      }

      @include it('md\:pe-72') {
        @include assert {
          @include output {
            @include md\:pe-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 18rem;
            }
          }
        }
      }

      @include it('md\:pt-72') {
        @include assert {
          @include output {
            @include md\:pt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 18rem;
            }
          }
        }
      }

      @include it('md\:pr-72') {
        @include assert {
          @include output {
            @include md\:pr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('md\:pb-72') {
        @include assert {
          @include output {
            @include md\:pb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('md\:pl-72') {
        @include assert {
          @include output {
            @include md\:pl-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 18rem;
            }
          }
        }
      }

      @include it('md\:p-80') {
        @include assert {
          @include output {
            @include md\:p-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 20rem;
            }
          }
        }
      }

      @include it('md\:px-80') {
        @include assert {
          @include output {
            @include md\:px-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 20rem;
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('md\:py-80') {
        @include assert {
          @include output {
            @include md\:py-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 20rem;
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('md\:ps-80') {
        @include assert {
          @include output {
            @include md\:ps-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 20rem;
            }
          }
        }
      }

      @include it('md\:pe-80') {
        @include assert {
          @include output {
            @include md\:pe-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 20rem;
            }
          }
        }
      }

      @include it('md\:pt-80') {
        @include assert {
          @include output {
            @include md\:pt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 20rem;
            }
          }
        }
      }

      @include it('md\:pr-80') {
        @include assert {
          @include output {
            @include md\:pr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('md\:pb-80') {
        @include assert {
          @include output {
            @include md\:pb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('md\:pl-80') {
        @include assert {
          @include output {
            @include md\:pl-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 20rem;
            }
          }
        }
      }

      @include it('md\:p-96') {
        @include assert {
          @include output {
            @include md\:p-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 24rem;
            }
          }
        }
      }

      @include it('md\:px-96') {
        @include assert {
          @include output {
            @include md\:px-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 24rem;
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('md\:py-96') {
        @include assert {
          @include output {
            @include md\:py-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 24rem;
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('md\:ps-96') {
        @include assert {
          @include output {
            @include md\:ps-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 24rem;
            }
          }
        }
      }

      @include it('md\:pe-96') {
        @include assert {
          @include output {
            @include md\:pe-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 24rem;
            }
          }
        }
      }

      @include it('md\:pt-96') {
        @include assert {
          @include output {
            @include md\:pt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 24rem;
            }
          }
        }
      }

      @include it('md\:pr-96') {
        @include assert {
          @include output {
            @include md\:pr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('md\:pb-96') {
        @include assert {
          @include output {
            @include md\:pb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('md\:pl-96') {
        @include assert {
          @include output {
            @include md\:pl-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 24rem;
            }
          }
        }
      }

      @include it('lg\:p-0') {
        @include assert {
          @include output {
            @include lg\:p-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0px;
            }
          }
        }
      }

      @include it('lg\:px-0') {
        @include assert {
          @include output {
            @include lg\:px-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0px;
              padding-right: 0px;
            }
          }
        }
      }

      @include it('lg\:py-0') {
        @include assert {
          @include output {
            @include lg\:py-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0px;
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:ps-0') {
        @include assert {
          @include output {
            @include lg\:ps-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0px;
            }
          }
        }
      }

      @include it('lg\:pe-0') {
        @include assert {
          @include output {
            @include lg\:pe-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0px;
            }
          }
        }
      }

      @include it('lg\:pt-0') {
        @include assert {
          @include output {
            @include lg\:pt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0px;
            }
          }
        }
      }

      @include it('lg\:pr-0') {
        @include assert {
          @include output {
            @include lg\:pr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0px;
            }
          }
        }
      }

      @include it('lg\:pb-0') {
        @include assert {
          @include output {
            @include lg\:pb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:pl-0') {
        @include assert {
          @include output {
            @include lg\:pl-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0px;
            }
          }
        }
      }

      @include it('lg\:p-px') {
        @include assert {
          @include output {
            @include lg\:p-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 1px;
            }
          }
        }
      }

      @include it('lg\:px-px') {
        @include assert {
          @include output {
            @include lg\:px-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1px;
              padding-right: 1px;
            }
          }
        }
      }

      @include it('lg\:py-px') {
        @include assert {
          @include output {
            @include lg\:py-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1px;
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('lg\:ps-px') {
        @include assert {
          @include output {
            @include lg\:ps-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 1px;
            }
          }
        }
      }

      @include it('lg\:pe-px') {
        @include assert {
          @include output {
            @include lg\:pe-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 1px;
            }
          }
        }
      }

      @include it('lg\:pt-px') {
        @include assert {
          @include output {
            @include lg\:pt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1px;
            }
          }
        }
      }

      @include it('lg\:pr-px') {
        @include assert {
          @include output {
            @include lg\:pr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 1px;
            }
          }
        }
      }

      @include it('lg\:pb-px') {
        @include assert {
          @include output {
            @include lg\:pb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('lg\:pl-px') {
        @include assert {
          @include output {
            @include lg\:pl-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1px;
            }
          }
        }
      }

      @include it('lg\:p-0\.5') {
        @include assert {
          @include output {
            @include lg\:p-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:px-0\.5') {
        @include assert {
          @include output {
            @include lg\:px-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.125rem;
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:py-0\.5') {
        @include assert {
          @include output {
            @include lg\:py-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.125rem;
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:ps-0\.5') {
        @include assert {
          @include output {
            @include lg\:ps-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:pe-0\.5') {
        @include assert {
          @include output {
            @include lg\:pe-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:pt-0\.5') {
        @include assert {
          @include output {
            @include lg\:pt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:pr-0\.5') {
        @include assert {
          @include output {
            @include lg\:pr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:pb-0\.5') {
        @include assert {
          @include output {
            @include lg\:pb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:pl-0\.5') {
        @include assert {
          @include output {
            @include lg\:pl-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:p-1') {
        @include assert {
          @include output {
            @include lg\:p-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:px-1') {
        @include assert {
          @include output {
            @include lg\:px-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.25rem;
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:py-1') {
        @include assert {
          @include output {
            @include lg\:py-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.25rem;
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:ps-1') {
        @include assert {
          @include output {
            @include lg\:ps-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:pe-1') {
        @include assert {
          @include output {
            @include lg\:pe-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:pt-1') {
        @include assert {
          @include output {
            @include lg\:pt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:pr-1') {
        @include assert {
          @include output {
            @include lg\:pr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:pb-1') {
        @include assert {
          @include output {
            @include lg\:pb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:pl-1') {
        @include assert {
          @include output {
            @include lg\:pl-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:p-1\.5') {
        @include assert {
          @include output {
            @include lg\:p-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:px-1\.5') {
        @include assert {
          @include output {
            @include lg\:px-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.375rem;
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:py-1\.5') {
        @include assert {
          @include output {
            @include lg\:py-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.375rem;
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:ps-1\.5') {
        @include assert {
          @include output {
            @include lg\:ps-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:pe-1\.5') {
        @include assert {
          @include output {
            @include lg\:pe-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:pt-1\.5') {
        @include assert {
          @include output {
            @include lg\:pt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:pr-1\.5') {
        @include assert {
          @include output {
            @include lg\:pr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:pb-1\.5') {
        @include assert {
          @include output {
            @include lg\:pb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:pl-1\.5') {
        @include assert {
          @include output {
            @include lg\:pl-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:p-2') {
        @include assert {
          @include output {
            @include lg\:p-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:px-2') {
        @include assert {
          @include output {
            @include lg\:px-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.5rem;
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:py-2') {
        @include assert {
          @include output {
            @include lg\:py-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:ps-2') {
        @include assert {
          @include output {
            @include lg\:ps-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:pe-2') {
        @include assert {
          @include output {
            @include lg\:pe-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:pt-2') {
        @include assert {
          @include output {
            @include lg\:pt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:pr-2') {
        @include assert {
          @include output {
            @include lg\:pr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:pb-2') {
        @include assert {
          @include output {
            @include lg\:pb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:pl-2') {
        @include assert {
          @include output {
            @include lg\:pl-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:p-2\.5') {
        @include assert {
          @include output {
            @include lg\:p-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:px-2\.5') {
        @include assert {
          @include output {
            @include lg\:px-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.625rem;
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:py-2\.5') {
        @include assert {
          @include output {
            @include lg\:py-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.625rem;
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:ps-2\.5') {
        @include assert {
          @include output {
            @include lg\:ps-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:pe-2\.5') {
        @include assert {
          @include output {
            @include lg\:pe-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:pt-2\.5') {
        @include assert {
          @include output {
            @include lg\:pt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:pr-2\.5') {
        @include assert {
          @include output {
            @include lg\:pr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:pb-2\.5') {
        @include assert {
          @include output {
            @include lg\:pb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:pl-2\.5') {
        @include assert {
          @include output {
            @include lg\:pl-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:p-3') {
        @include assert {
          @include output {
            @include lg\:p-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:px-3') {
        @include assert {
          @include output {
            @include lg\:px-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.75rem;
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:py-3') {
        @include assert {
          @include output {
            @include lg\:py-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.75rem;
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:ps-3') {
        @include assert {
          @include output {
            @include lg\:ps-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:pe-3') {
        @include assert {
          @include output {
            @include lg\:pe-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:pt-3') {
        @include assert {
          @include output {
            @include lg\:pt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:pr-3') {
        @include assert {
          @include output {
            @include lg\:pr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:pb-3') {
        @include assert {
          @include output {
            @include lg\:pb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:pl-3') {
        @include assert {
          @include output {
            @include lg\:pl-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:p-3\.5') {
        @include assert {
          @include output {
            @include lg\:p-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:px-3\.5') {
        @include assert {
          @include output {
            @include lg\:px-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.875rem;
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:py-3\.5') {
        @include assert {
          @include output {
            @include lg\:py-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.875rem;
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:ps-3\.5') {
        @include assert {
          @include output {
            @include lg\:ps-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:pe-3\.5') {
        @include assert {
          @include output {
            @include lg\:pe-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:pt-3\.5') {
        @include assert {
          @include output {
            @include lg\:pt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:pr-3\.5') {
        @include assert {
          @include output {
            @include lg\:pr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:pb-3\.5') {
        @include assert {
          @include output {
            @include lg\:pb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:pl-3\.5') {
        @include assert {
          @include output {
            @include lg\:pl-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:p-4') {
        @include assert {
          @include output {
            @include lg\:p-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 1rem;
            }
          }
        }
      }

      @include it('lg\:px-4') {
        @include assert {
          @include output {
            @include lg\:px-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1rem;
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('lg\:py-4') {
        @include assert {
          @include output {
            @include lg\:py-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1rem;
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('lg\:ps-4') {
        @include assert {
          @include output {
            @include lg\:ps-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 1rem;
            }
          }
        }
      }

      @include it('lg\:pe-4') {
        @include assert {
          @include output {
            @include lg\:pe-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 1rem;
            }
          }
        }
      }

      @include it('lg\:pt-4') {
        @include assert {
          @include output {
            @include lg\:pt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1rem;
            }
          }
        }
      }

      @include it('lg\:pr-4') {
        @include assert {
          @include output {
            @include lg\:pr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('lg\:pb-4') {
        @include assert {
          @include output {
            @include lg\:pb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('lg\:pl-4') {
        @include assert {
          @include output {
            @include lg\:pl-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1rem;
            }
          }
        }
      }

      @include it('lg\:p-5') {
        @include assert {
          @include output {
            @include lg\:p-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:px-5') {
        @include assert {
          @include output {
            @include lg\:px-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.25rem;
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:py-5') {
        @include assert {
          @include output {
            @include lg\:py-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.25rem;
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:ps-5') {
        @include assert {
          @include output {
            @include lg\:ps-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:pe-5') {
        @include assert {
          @include output {
            @include lg\:pe-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:pt-5') {
        @include assert {
          @include output {
            @include lg\:pt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:pr-5') {
        @include assert {
          @include output {
            @include lg\:pr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:pb-5') {
        @include assert {
          @include output {
            @include lg\:pb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:pl-5') {
        @include assert {
          @include output {
            @include lg\:pl-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:p-6') {
        @include assert {
          @include output {
            @include lg\:p-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:px-6') {
        @include assert {
          @include output {
            @include lg\:px-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.5rem;
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:py-6') {
        @include assert {
          @include output {
            @include lg\:py-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.5rem;
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:ps-6') {
        @include assert {
          @include output {
            @include lg\:ps-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:pe-6') {
        @include assert {
          @include output {
            @include lg\:pe-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:pt-6') {
        @include assert {
          @include output {
            @include lg\:pt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:pr-6') {
        @include assert {
          @include output {
            @include lg\:pr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:pb-6') {
        @include assert {
          @include output {
            @include lg\:pb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:pl-6') {
        @include assert {
          @include output {
            @include lg\:pl-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:p-7') {
        @include assert {
          @include output {
            @include lg\:p-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:px-7') {
        @include assert {
          @include output {
            @include lg\:px-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.75rem;
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:py-7') {
        @include assert {
          @include output {
            @include lg\:py-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.75rem;
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:ps-7') {
        @include assert {
          @include output {
            @include lg\:ps-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:pe-7') {
        @include assert {
          @include output {
            @include lg\:pe-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:pt-7') {
        @include assert {
          @include output {
            @include lg\:pt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:pr-7') {
        @include assert {
          @include output {
            @include lg\:pr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:pb-7') {
        @include assert {
          @include output {
            @include lg\:pb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:pl-7') {
        @include assert {
          @include output {
            @include lg\:pl-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:p-8') {
        @include assert {
          @include output {
            @include lg\:p-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 2rem;
            }
          }
        }
      }

      @include it('lg\:px-8') {
        @include assert {
          @include output {
            @include lg\:px-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2rem;
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('lg\:py-8') {
        @include assert {
          @include output {
            @include lg\:py-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2rem;
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('lg\:ps-8') {
        @include assert {
          @include output {
            @include lg\:ps-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 2rem;
            }
          }
        }
      }

      @include it('lg\:pe-8') {
        @include assert {
          @include output {
            @include lg\:pe-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 2rem;
            }
          }
        }
      }

      @include it('lg\:pt-8') {
        @include assert {
          @include output {
            @include lg\:pt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2rem;
            }
          }
        }
      }

      @include it('lg\:pr-8') {
        @include assert {
          @include output {
            @include lg\:pr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('lg\:pb-8') {
        @include assert {
          @include output {
            @include lg\:pb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('lg\:pl-8') {
        @include assert {
          @include output {
            @include lg\:pl-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2rem;
            }
          }
        }
      }

      @include it('lg\:p-9') {
        @include assert {
          @include output {
            @include lg\:p-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:px-9') {
        @include assert {
          @include output {
            @include lg\:px-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.25rem;
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:py-9') {
        @include assert {
          @include output {
            @include lg\:py-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.25rem;
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:ps-9') {
        @include assert {
          @include output {
            @include lg\:ps-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:pe-9') {
        @include assert {
          @include output {
            @include lg\:pe-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:pt-9') {
        @include assert {
          @include output {
            @include lg\:pt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:pr-9') {
        @include assert {
          @include output {
            @include lg\:pr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:pb-9') {
        @include assert {
          @include output {
            @include lg\:pb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:pl-9') {
        @include assert {
          @include output {
            @include lg\:pl-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:p-10') {
        @include assert {
          @include output {
            @include lg\:p-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:px-10') {
        @include assert {
          @include output {
            @include lg\:px-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.5rem;
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:py-10') {
        @include assert {
          @include output {
            @include lg\:py-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.5rem;
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:ps-10') {
        @include assert {
          @include output {
            @include lg\:ps-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:pe-10') {
        @include assert {
          @include output {
            @include lg\:pe-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:pt-10') {
        @include assert {
          @include output {
            @include lg\:pt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:pr-10') {
        @include assert {
          @include output {
            @include lg\:pr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:pb-10') {
        @include assert {
          @include output {
            @include lg\:pb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:pl-10') {
        @include assert {
          @include output {
            @include lg\:pl-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:p-11') {
        @include assert {
          @include output {
            @include lg\:p-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:px-11') {
        @include assert {
          @include output {
            @include lg\:px-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.75rem;
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:py-11') {
        @include assert {
          @include output {
            @include lg\:py-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.75rem;
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:ps-11') {
        @include assert {
          @include output {
            @include lg\:ps-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:pe-11') {
        @include assert {
          @include output {
            @include lg\:pe-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:pt-11') {
        @include assert {
          @include output {
            @include lg\:pt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:pr-11') {
        @include assert {
          @include output {
            @include lg\:pr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:pb-11') {
        @include assert {
          @include output {
            @include lg\:pb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:pl-11') {
        @include assert {
          @include output {
            @include lg\:pl-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:p-12') {
        @include assert {
          @include output {
            @include lg\:p-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 3rem;
            }
          }
        }
      }

      @include it('lg\:px-12') {
        @include assert {
          @include output {
            @include lg\:px-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 3rem;
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('lg\:py-12') {
        @include assert {
          @include output {
            @include lg\:py-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 3rem;
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('lg\:ps-12') {
        @include assert {
          @include output {
            @include lg\:ps-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 3rem;
            }
          }
        }
      }

      @include it('lg\:pe-12') {
        @include assert {
          @include output {
            @include lg\:pe-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 3rem;
            }
          }
        }
      }

      @include it('lg\:pt-12') {
        @include assert {
          @include output {
            @include lg\:pt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 3rem;
            }
          }
        }
      }

      @include it('lg\:pr-12') {
        @include assert {
          @include output {
            @include lg\:pr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('lg\:pb-12') {
        @include assert {
          @include output {
            @include lg\:pb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('lg\:pl-12') {
        @include assert {
          @include output {
            @include lg\:pl-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 3rem;
            }
          }
        }
      }

      @include it('lg\:p-14') {
        @include assert {
          @include output {
            @include lg\:p-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:px-14') {
        @include assert {
          @include output {
            @include lg\:px-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 3.5rem;
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:py-14') {
        @include assert {
          @include output {
            @include lg\:py-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 3.5rem;
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:ps-14') {
        @include assert {
          @include output {
            @include lg\:ps-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:pe-14') {
        @include assert {
          @include output {
            @include lg\:pe-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:pt-14') {
        @include assert {
          @include output {
            @include lg\:pt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:pr-14') {
        @include assert {
          @include output {
            @include lg\:pr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:pb-14') {
        @include assert {
          @include output {
            @include lg\:pb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:pl-14') {
        @include assert {
          @include output {
            @include lg\:pl-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:p-16') {
        @include assert {
          @include output {
            @include lg\:p-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 4rem;
            }
          }
        }
      }

      @include it('lg\:px-16') {
        @include assert {
          @include output {
            @include lg\:px-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 4rem;
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('lg\:py-16') {
        @include assert {
          @include output {
            @include lg\:py-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 4rem;
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('lg\:ps-16') {
        @include assert {
          @include output {
            @include lg\:ps-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 4rem;
            }
          }
        }
      }

      @include it('lg\:pe-16') {
        @include assert {
          @include output {
            @include lg\:pe-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 4rem;
            }
          }
        }
      }

      @include it('lg\:pt-16') {
        @include assert {
          @include output {
            @include lg\:pt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 4rem;
            }
          }
        }
      }

      @include it('lg\:pr-16') {
        @include assert {
          @include output {
            @include lg\:pr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('lg\:pb-16') {
        @include assert {
          @include output {
            @include lg\:pb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('lg\:pl-16') {
        @include assert {
          @include output {
            @include lg\:pl-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 4rem;
            }
          }
        }
      }

      @include it('lg\:p-20') {
        @include assert {
          @include output {
            @include lg\:p-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 5rem;
            }
          }
        }
      }

      @include it('lg\:px-20') {
        @include assert {
          @include output {
            @include lg\:px-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('lg\:py-20') {
        @include assert {
          @include output {
            @include lg\:py-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 5rem;
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('lg\:ps-20') {
        @include assert {
          @include output {
            @include lg\:ps-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 5rem;
            }
          }
        }
      }

      @include it('lg\:pe-20') {
        @include assert {
          @include output {
            @include lg\:pe-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 5rem;
            }
          }
        }
      }

      @include it('lg\:pt-20') {
        @include assert {
          @include output {
            @include lg\:pt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 5rem;
            }
          }
        }
      }

      @include it('lg\:pr-20') {
        @include assert {
          @include output {
            @include lg\:pr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('lg\:pb-20') {
        @include assert {
          @include output {
            @include lg\:pb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('lg\:pl-20') {
        @include assert {
          @include output {
            @include lg\:pl-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 5rem;
            }
          }
        }
      }

      @include it('lg\:p-24') {
        @include assert {
          @include output {
            @include lg\:p-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 6rem;
            }
          }
        }
      }

      @include it('lg\:px-24') {
        @include assert {
          @include output {
            @include lg\:px-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 6rem;
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('lg\:py-24') {
        @include assert {
          @include output {
            @include lg\:py-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 6rem;
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('lg\:ps-24') {
        @include assert {
          @include output {
            @include lg\:ps-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 6rem;
            }
          }
        }
      }

      @include it('lg\:pe-24') {
        @include assert {
          @include output {
            @include lg\:pe-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 6rem;
            }
          }
        }
      }

      @include it('lg\:pt-24') {
        @include assert {
          @include output {
            @include lg\:pt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 6rem;
            }
          }
        }
      }

      @include it('lg\:pr-24') {
        @include assert {
          @include output {
            @include lg\:pr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('lg\:pb-24') {
        @include assert {
          @include output {
            @include lg\:pb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('lg\:pl-24') {
        @include assert {
          @include output {
            @include lg\:pl-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 6rem;
            }
          }
        }
      }

      @include it('lg\:p-28') {
        @include assert {
          @include output {
            @include lg\:p-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 7rem;
            }
          }
        }
      }

      @include it('lg\:px-28') {
        @include assert {
          @include output {
            @include lg\:px-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 7rem;
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('lg\:py-28') {
        @include assert {
          @include output {
            @include lg\:py-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 7rem;
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('lg\:ps-28') {
        @include assert {
          @include output {
            @include lg\:ps-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 7rem;
            }
          }
        }
      }

      @include it('lg\:pe-28') {
        @include assert {
          @include output {
            @include lg\:pe-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 7rem;
            }
          }
        }
      }

      @include it('lg\:pt-28') {
        @include assert {
          @include output {
            @include lg\:pt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 7rem;
            }
          }
        }
      }

      @include it('lg\:pr-28') {
        @include assert {
          @include output {
            @include lg\:pr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('lg\:pb-28') {
        @include assert {
          @include output {
            @include lg\:pb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('lg\:pl-28') {
        @include assert {
          @include output {
            @include lg\:pl-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 7rem;
            }
          }
        }
      }

      @include it('lg\:p-32') {
        @include assert {
          @include output {
            @include lg\:p-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 8rem;
            }
          }
        }
      }

      @include it('lg\:px-32') {
        @include assert {
          @include output {
            @include lg\:px-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 8rem;
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('lg\:py-32') {
        @include assert {
          @include output {
            @include lg\:py-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 8rem;
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('lg\:ps-32') {
        @include assert {
          @include output {
            @include lg\:ps-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 8rem;
            }
          }
        }
      }

      @include it('lg\:pe-32') {
        @include assert {
          @include output {
            @include lg\:pe-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 8rem;
            }
          }
        }
      }

      @include it('lg\:pt-32') {
        @include assert {
          @include output {
            @include lg\:pt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 8rem;
            }
          }
        }
      }

      @include it('lg\:pr-32') {
        @include assert {
          @include output {
            @include lg\:pr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('lg\:pb-32') {
        @include assert {
          @include output {
            @include lg\:pb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('lg\:pl-32') {
        @include assert {
          @include output {
            @include lg\:pl-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 8rem;
            }
          }
        }
      }

      @include it('lg\:p-36') {
        @include assert {
          @include output {
            @include lg\:p-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 9rem;
            }
          }
        }
      }

      @include it('lg\:px-36') {
        @include assert {
          @include output {
            @include lg\:px-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 9rem;
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('lg\:py-36') {
        @include assert {
          @include output {
            @include lg\:py-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 9rem;
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('lg\:ps-36') {
        @include assert {
          @include output {
            @include lg\:ps-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 9rem;
            }
          }
        }
      }

      @include it('lg\:pe-36') {
        @include assert {
          @include output {
            @include lg\:pe-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 9rem;
            }
          }
        }
      }

      @include it('lg\:pt-36') {
        @include assert {
          @include output {
            @include lg\:pt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 9rem;
            }
          }
        }
      }

      @include it('lg\:pr-36') {
        @include assert {
          @include output {
            @include lg\:pr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('lg\:pb-36') {
        @include assert {
          @include output {
            @include lg\:pb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('lg\:pl-36') {
        @include assert {
          @include output {
            @include lg\:pl-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 9rem;
            }
          }
        }
      }

      @include it('lg\:p-40') {
        @include assert {
          @include output {
            @include lg\:p-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 10rem;
            }
          }
        }
      }

      @include it('lg\:px-40') {
        @include assert {
          @include output {
            @include lg\:px-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 10rem;
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('lg\:py-40') {
        @include assert {
          @include output {
            @include lg\:py-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 10rem;
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('lg\:ps-40') {
        @include assert {
          @include output {
            @include lg\:ps-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 10rem;
            }
          }
        }
      }

      @include it('lg\:pe-40') {
        @include assert {
          @include output {
            @include lg\:pe-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 10rem;
            }
          }
        }
      }

      @include it('lg\:pt-40') {
        @include assert {
          @include output {
            @include lg\:pt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 10rem;
            }
          }
        }
      }

      @include it('lg\:pr-40') {
        @include assert {
          @include output {
            @include lg\:pr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('lg\:pb-40') {
        @include assert {
          @include output {
            @include lg\:pb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('lg\:pl-40') {
        @include assert {
          @include output {
            @include lg\:pl-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 10rem;
            }
          }
        }
      }

      @include it('lg\:p-44') {
        @include assert {
          @include output {
            @include lg\:p-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 11rem;
            }
          }
        }
      }

      @include it('lg\:px-44') {
        @include assert {
          @include output {
            @include lg\:px-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 11rem;
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('lg\:py-44') {
        @include assert {
          @include output {
            @include lg\:py-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 11rem;
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('lg\:ps-44') {
        @include assert {
          @include output {
            @include lg\:ps-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 11rem;
            }
          }
        }
      }

      @include it('lg\:pe-44') {
        @include assert {
          @include output {
            @include lg\:pe-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 11rem;
            }
          }
        }
      }

      @include it('lg\:pt-44') {
        @include assert {
          @include output {
            @include lg\:pt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 11rem;
            }
          }
        }
      }

      @include it('lg\:pr-44') {
        @include assert {
          @include output {
            @include lg\:pr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('lg\:pb-44') {
        @include assert {
          @include output {
            @include lg\:pb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('lg\:pl-44') {
        @include assert {
          @include output {
            @include lg\:pl-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 11rem;
            }
          }
        }
      }

      @include it('lg\:p-48') {
        @include assert {
          @include output {
            @include lg\:p-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 12rem;
            }
          }
        }
      }

      @include it('lg\:px-48') {
        @include assert {
          @include output {
            @include lg\:px-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 12rem;
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('lg\:py-48') {
        @include assert {
          @include output {
            @include lg\:py-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 12rem;
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('lg\:ps-48') {
        @include assert {
          @include output {
            @include lg\:ps-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 12rem;
            }
          }
        }
      }

      @include it('lg\:pe-48') {
        @include assert {
          @include output {
            @include lg\:pe-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 12rem;
            }
          }
        }
      }

      @include it('lg\:pt-48') {
        @include assert {
          @include output {
            @include lg\:pt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 12rem;
            }
          }
        }
      }

      @include it('lg\:pr-48') {
        @include assert {
          @include output {
            @include lg\:pr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('lg\:pb-48') {
        @include assert {
          @include output {
            @include lg\:pb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('lg\:pl-48') {
        @include assert {
          @include output {
            @include lg\:pl-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 12rem;
            }
          }
        }
      }

      @include it('lg\:p-52') {
        @include assert {
          @include output {
            @include lg\:p-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 13rem;
            }
          }
        }
      }

      @include it('lg\:px-52') {
        @include assert {
          @include output {
            @include lg\:px-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 13rem;
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('lg\:py-52') {
        @include assert {
          @include output {
            @include lg\:py-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 13rem;
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('lg\:ps-52') {
        @include assert {
          @include output {
            @include lg\:ps-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 13rem;
            }
          }
        }
      }

      @include it('lg\:pe-52') {
        @include assert {
          @include output {
            @include lg\:pe-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 13rem;
            }
          }
        }
      }

      @include it('lg\:pt-52') {
        @include assert {
          @include output {
            @include lg\:pt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 13rem;
            }
          }
        }
      }

      @include it('lg\:pr-52') {
        @include assert {
          @include output {
            @include lg\:pr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('lg\:pb-52') {
        @include assert {
          @include output {
            @include lg\:pb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('lg\:pl-52') {
        @include assert {
          @include output {
            @include lg\:pl-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 13rem;
            }
          }
        }
      }

      @include it('lg\:p-56') {
        @include assert {
          @include output {
            @include lg\:p-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 14rem;
            }
          }
        }
      }

      @include it('lg\:px-56') {
        @include assert {
          @include output {
            @include lg\:px-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 14rem;
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('lg\:py-56') {
        @include assert {
          @include output {
            @include lg\:py-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 14rem;
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('lg\:ps-56') {
        @include assert {
          @include output {
            @include lg\:ps-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 14rem;
            }
          }
        }
      }

      @include it('lg\:pe-56') {
        @include assert {
          @include output {
            @include lg\:pe-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 14rem;
            }
          }
        }
      }

      @include it('lg\:pt-56') {
        @include assert {
          @include output {
            @include lg\:pt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 14rem;
            }
          }
        }
      }

      @include it('lg\:pr-56') {
        @include assert {
          @include output {
            @include lg\:pr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('lg\:pb-56') {
        @include assert {
          @include output {
            @include lg\:pb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('lg\:pl-56') {
        @include assert {
          @include output {
            @include lg\:pl-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 14rem;
            }
          }
        }
      }

      @include it('lg\:p-60') {
        @include assert {
          @include output {
            @include lg\:p-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 15rem;
            }
          }
        }
      }

      @include it('lg\:px-60') {
        @include assert {
          @include output {
            @include lg\:px-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 15rem;
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('lg\:py-60') {
        @include assert {
          @include output {
            @include lg\:py-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 15rem;
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('lg\:ps-60') {
        @include assert {
          @include output {
            @include lg\:ps-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 15rem;
            }
          }
        }
      }

      @include it('lg\:pe-60') {
        @include assert {
          @include output {
            @include lg\:pe-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 15rem;
            }
          }
        }
      }

      @include it('lg\:pt-60') {
        @include assert {
          @include output {
            @include lg\:pt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 15rem;
            }
          }
        }
      }

      @include it('lg\:pr-60') {
        @include assert {
          @include output {
            @include lg\:pr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('lg\:pb-60') {
        @include assert {
          @include output {
            @include lg\:pb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('lg\:pl-60') {
        @include assert {
          @include output {
            @include lg\:pl-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 15rem;
            }
          }
        }
      }

      @include it('lg\:p-64') {
        @include assert {
          @include output {
            @include lg\:p-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 16rem;
            }
          }
        }
      }

      @include it('lg\:px-64') {
        @include assert {
          @include output {
            @include lg\:px-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 16rem;
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('lg\:py-64') {
        @include assert {
          @include output {
            @include lg\:py-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 16rem;
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('lg\:ps-64') {
        @include assert {
          @include output {
            @include lg\:ps-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 16rem;
            }
          }
        }
      }

      @include it('lg\:pe-64') {
        @include assert {
          @include output {
            @include lg\:pe-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 16rem;
            }
          }
        }
      }

      @include it('lg\:pt-64') {
        @include assert {
          @include output {
            @include lg\:pt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 16rem;
            }
          }
        }
      }

      @include it('lg\:pr-64') {
        @include assert {
          @include output {
            @include lg\:pr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('lg\:pb-64') {
        @include assert {
          @include output {
            @include lg\:pb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('lg\:pl-64') {
        @include assert {
          @include output {
            @include lg\:pl-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 16rem;
            }
          }
        }
      }

      @include it('lg\:p-72') {
        @include assert {
          @include output {
            @include lg\:p-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 18rem;
            }
          }
        }
      }

      @include it('lg\:px-72') {
        @include assert {
          @include output {
            @include lg\:px-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 18rem;
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('lg\:py-72') {
        @include assert {
          @include output {
            @include lg\:py-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 18rem;
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('lg\:ps-72') {
        @include assert {
          @include output {
            @include lg\:ps-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 18rem;
            }
          }
        }
      }

      @include it('lg\:pe-72') {
        @include assert {
          @include output {
            @include lg\:pe-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 18rem;
            }
          }
        }
      }

      @include it('lg\:pt-72') {
        @include assert {
          @include output {
            @include lg\:pt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 18rem;
            }
          }
        }
      }

      @include it('lg\:pr-72') {
        @include assert {
          @include output {
            @include lg\:pr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('lg\:pb-72') {
        @include assert {
          @include output {
            @include lg\:pb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('lg\:pl-72') {
        @include assert {
          @include output {
            @include lg\:pl-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 18rem;
            }
          }
        }
      }

      @include it('lg\:p-80') {
        @include assert {
          @include output {
            @include lg\:p-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 20rem;
            }
          }
        }
      }

      @include it('lg\:px-80') {
        @include assert {
          @include output {
            @include lg\:px-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 20rem;
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('lg\:py-80') {
        @include assert {
          @include output {
            @include lg\:py-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 20rem;
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('lg\:ps-80') {
        @include assert {
          @include output {
            @include lg\:ps-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 20rem;
            }
          }
        }
      }

      @include it('lg\:pe-80') {
        @include assert {
          @include output {
            @include lg\:pe-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 20rem;
            }
          }
        }
      }

      @include it('lg\:pt-80') {
        @include assert {
          @include output {
            @include lg\:pt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 20rem;
            }
          }
        }
      }

      @include it('lg\:pr-80') {
        @include assert {
          @include output {
            @include lg\:pr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('lg\:pb-80') {
        @include assert {
          @include output {
            @include lg\:pb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('lg\:pl-80') {
        @include assert {
          @include output {
            @include lg\:pl-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 20rem;
            }
          }
        }
      }

      @include it('lg\:p-96') {
        @include assert {
          @include output {
            @include lg\:p-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 24rem;
            }
          }
        }
      }

      @include it('lg\:px-96') {
        @include assert {
          @include output {
            @include lg\:px-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 24rem;
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('lg\:py-96') {
        @include assert {
          @include output {
            @include lg\:py-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 24rem;
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('lg\:ps-96') {
        @include assert {
          @include output {
            @include lg\:ps-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 24rem;
            }
          }
        }
      }

      @include it('lg\:pe-96') {
        @include assert {
          @include output {
            @include lg\:pe-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 24rem;
            }
          }
        }
      }

      @include it('lg\:pt-96') {
        @include assert {
          @include output {
            @include lg\:pt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 24rem;
            }
          }
        }
      }

      @include it('lg\:pr-96') {
        @include assert {
          @include output {
            @include lg\:pr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('lg\:pb-96') {
        @include assert {
          @include output {
            @include lg\:pb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('lg\:pl-96') {
        @include assert {
          @include output {
            @include lg\:pl-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 24rem;
            }
          }
        }
      }

      @include it('xl\:p-0') {
        @include assert {
          @include output {
            @include xl\:p-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0px;
            }
          }
        }
      }

      @include it('xl\:px-0') {
        @include assert {
          @include output {
            @include xl\:px-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0px;
              padding-right: 0px;
            }
          }
        }
      }

      @include it('xl\:py-0') {
        @include assert {
          @include output {
            @include xl\:py-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0px;
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:ps-0') {
        @include assert {
          @include output {
            @include xl\:ps-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0px;
            }
          }
        }
      }

      @include it('xl\:pe-0') {
        @include assert {
          @include output {
            @include xl\:pe-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0px;
            }
          }
        }
      }

      @include it('xl\:pt-0') {
        @include assert {
          @include output {
            @include xl\:pt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0px;
            }
          }
        }
      }

      @include it('xl\:pr-0') {
        @include assert {
          @include output {
            @include xl\:pr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0px;
            }
          }
        }
      }

      @include it('xl\:pb-0') {
        @include assert {
          @include output {
            @include xl\:pb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:pl-0') {
        @include assert {
          @include output {
            @include xl\:pl-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0px;
            }
          }
        }
      }

      @include it('xl\:p-px') {
        @include assert {
          @include output {
            @include xl\:p-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 1px;
            }
          }
        }
      }

      @include it('xl\:px-px') {
        @include assert {
          @include output {
            @include xl\:px-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1px;
              padding-right: 1px;
            }
          }
        }
      }

      @include it('xl\:py-px') {
        @include assert {
          @include output {
            @include xl\:py-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1px;
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('xl\:ps-px') {
        @include assert {
          @include output {
            @include xl\:ps-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 1px;
            }
          }
        }
      }

      @include it('xl\:pe-px') {
        @include assert {
          @include output {
            @include xl\:pe-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 1px;
            }
          }
        }
      }

      @include it('xl\:pt-px') {
        @include assert {
          @include output {
            @include xl\:pt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1px;
            }
          }
        }
      }

      @include it('xl\:pr-px') {
        @include assert {
          @include output {
            @include xl\:pr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 1px;
            }
          }
        }
      }

      @include it('xl\:pb-px') {
        @include assert {
          @include output {
            @include xl\:pb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('xl\:pl-px') {
        @include assert {
          @include output {
            @include xl\:pl-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1px;
            }
          }
        }
      }

      @include it('xl\:p-0\.5') {
        @include assert {
          @include output {
            @include xl\:p-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:px-0\.5') {
        @include assert {
          @include output {
            @include xl\:px-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.125rem;
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:py-0\.5') {
        @include assert {
          @include output {
            @include xl\:py-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.125rem;
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:ps-0\.5') {
        @include assert {
          @include output {
            @include xl\:ps-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:pe-0\.5') {
        @include assert {
          @include output {
            @include xl\:pe-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:pt-0\.5') {
        @include assert {
          @include output {
            @include xl\:pt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:pr-0\.5') {
        @include assert {
          @include output {
            @include xl\:pr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:pb-0\.5') {
        @include assert {
          @include output {
            @include xl\:pb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:pl-0\.5') {
        @include assert {
          @include output {
            @include xl\:pl-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:p-1') {
        @include assert {
          @include output {
            @include xl\:p-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:px-1') {
        @include assert {
          @include output {
            @include xl\:px-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.25rem;
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:py-1') {
        @include assert {
          @include output {
            @include xl\:py-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.25rem;
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:ps-1') {
        @include assert {
          @include output {
            @include xl\:ps-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:pe-1') {
        @include assert {
          @include output {
            @include xl\:pe-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:pt-1') {
        @include assert {
          @include output {
            @include xl\:pt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:pr-1') {
        @include assert {
          @include output {
            @include xl\:pr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:pb-1') {
        @include assert {
          @include output {
            @include xl\:pb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:pl-1') {
        @include assert {
          @include output {
            @include xl\:pl-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:p-1\.5') {
        @include assert {
          @include output {
            @include xl\:p-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:px-1\.5') {
        @include assert {
          @include output {
            @include xl\:px-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.375rem;
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:py-1\.5') {
        @include assert {
          @include output {
            @include xl\:py-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.375rem;
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:ps-1\.5') {
        @include assert {
          @include output {
            @include xl\:ps-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:pe-1\.5') {
        @include assert {
          @include output {
            @include xl\:pe-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:pt-1\.5') {
        @include assert {
          @include output {
            @include xl\:pt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:pr-1\.5') {
        @include assert {
          @include output {
            @include xl\:pr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:pb-1\.5') {
        @include assert {
          @include output {
            @include xl\:pb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:pl-1\.5') {
        @include assert {
          @include output {
            @include xl\:pl-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:p-2') {
        @include assert {
          @include output {
            @include xl\:p-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:px-2') {
        @include assert {
          @include output {
            @include xl\:px-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.5rem;
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:py-2') {
        @include assert {
          @include output {
            @include xl\:py-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:ps-2') {
        @include assert {
          @include output {
            @include xl\:ps-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:pe-2') {
        @include assert {
          @include output {
            @include xl\:pe-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:pt-2') {
        @include assert {
          @include output {
            @include xl\:pt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:pr-2') {
        @include assert {
          @include output {
            @include xl\:pr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:pb-2') {
        @include assert {
          @include output {
            @include xl\:pb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:pl-2') {
        @include assert {
          @include output {
            @include xl\:pl-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:p-2\.5') {
        @include assert {
          @include output {
            @include xl\:p-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:px-2\.5') {
        @include assert {
          @include output {
            @include xl\:px-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.625rem;
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:py-2\.5') {
        @include assert {
          @include output {
            @include xl\:py-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.625rem;
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:ps-2\.5') {
        @include assert {
          @include output {
            @include xl\:ps-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:pe-2\.5') {
        @include assert {
          @include output {
            @include xl\:pe-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:pt-2\.5') {
        @include assert {
          @include output {
            @include xl\:pt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:pr-2\.5') {
        @include assert {
          @include output {
            @include xl\:pr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:pb-2\.5') {
        @include assert {
          @include output {
            @include xl\:pb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:pl-2\.5') {
        @include assert {
          @include output {
            @include xl\:pl-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:p-3') {
        @include assert {
          @include output {
            @include xl\:p-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:px-3') {
        @include assert {
          @include output {
            @include xl\:px-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.75rem;
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:py-3') {
        @include assert {
          @include output {
            @include xl\:py-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.75rem;
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:ps-3') {
        @include assert {
          @include output {
            @include xl\:ps-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:pe-3') {
        @include assert {
          @include output {
            @include xl\:pe-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:pt-3') {
        @include assert {
          @include output {
            @include xl\:pt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:pr-3') {
        @include assert {
          @include output {
            @include xl\:pr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:pb-3') {
        @include assert {
          @include output {
            @include xl\:pb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:pl-3') {
        @include assert {
          @include output {
            @include xl\:pl-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:p-3\.5') {
        @include assert {
          @include output {
            @include xl\:p-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:px-3\.5') {
        @include assert {
          @include output {
            @include xl\:px-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.875rem;
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:py-3\.5') {
        @include assert {
          @include output {
            @include xl\:py-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.875rem;
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:ps-3\.5') {
        @include assert {
          @include output {
            @include xl\:ps-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:pe-3\.5') {
        @include assert {
          @include output {
            @include xl\:pe-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:pt-3\.5') {
        @include assert {
          @include output {
            @include xl\:pt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:pr-3\.5') {
        @include assert {
          @include output {
            @include xl\:pr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:pb-3\.5') {
        @include assert {
          @include output {
            @include xl\:pb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:pl-3\.5') {
        @include assert {
          @include output {
            @include xl\:pl-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:p-4') {
        @include assert {
          @include output {
            @include xl\:p-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 1rem;
            }
          }
        }
      }

      @include it('xl\:px-4') {
        @include assert {
          @include output {
            @include xl\:px-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1rem;
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('xl\:py-4') {
        @include assert {
          @include output {
            @include xl\:py-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1rem;
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('xl\:ps-4') {
        @include assert {
          @include output {
            @include xl\:ps-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 1rem;
            }
          }
        }
      }

      @include it('xl\:pe-4') {
        @include assert {
          @include output {
            @include xl\:pe-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 1rem;
            }
          }
        }
      }

      @include it('xl\:pt-4') {
        @include assert {
          @include output {
            @include xl\:pt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1rem;
            }
          }
        }
      }

      @include it('xl\:pr-4') {
        @include assert {
          @include output {
            @include xl\:pr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('xl\:pb-4') {
        @include assert {
          @include output {
            @include xl\:pb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('xl\:pl-4') {
        @include assert {
          @include output {
            @include xl\:pl-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1rem;
            }
          }
        }
      }

      @include it('xl\:p-5') {
        @include assert {
          @include output {
            @include xl\:p-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:px-5') {
        @include assert {
          @include output {
            @include xl\:px-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.25rem;
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:py-5') {
        @include assert {
          @include output {
            @include xl\:py-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.25rem;
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:ps-5') {
        @include assert {
          @include output {
            @include xl\:ps-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:pe-5') {
        @include assert {
          @include output {
            @include xl\:pe-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:pt-5') {
        @include assert {
          @include output {
            @include xl\:pt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:pr-5') {
        @include assert {
          @include output {
            @include xl\:pr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:pb-5') {
        @include assert {
          @include output {
            @include xl\:pb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:pl-5') {
        @include assert {
          @include output {
            @include xl\:pl-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:p-6') {
        @include assert {
          @include output {
            @include xl\:p-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:px-6') {
        @include assert {
          @include output {
            @include xl\:px-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.5rem;
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:py-6') {
        @include assert {
          @include output {
            @include xl\:py-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.5rem;
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:ps-6') {
        @include assert {
          @include output {
            @include xl\:ps-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:pe-6') {
        @include assert {
          @include output {
            @include xl\:pe-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:pt-6') {
        @include assert {
          @include output {
            @include xl\:pt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:pr-6') {
        @include assert {
          @include output {
            @include xl\:pr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:pb-6') {
        @include assert {
          @include output {
            @include xl\:pb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:pl-6') {
        @include assert {
          @include output {
            @include xl\:pl-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:p-7') {
        @include assert {
          @include output {
            @include xl\:p-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:px-7') {
        @include assert {
          @include output {
            @include xl\:px-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.75rem;
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:py-7') {
        @include assert {
          @include output {
            @include xl\:py-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.75rem;
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:ps-7') {
        @include assert {
          @include output {
            @include xl\:ps-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:pe-7') {
        @include assert {
          @include output {
            @include xl\:pe-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:pt-7') {
        @include assert {
          @include output {
            @include xl\:pt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:pr-7') {
        @include assert {
          @include output {
            @include xl\:pr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:pb-7') {
        @include assert {
          @include output {
            @include xl\:pb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:pl-7') {
        @include assert {
          @include output {
            @include xl\:pl-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:p-8') {
        @include assert {
          @include output {
            @include xl\:p-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 2rem;
            }
          }
        }
      }

      @include it('xl\:px-8') {
        @include assert {
          @include output {
            @include xl\:px-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2rem;
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('xl\:py-8') {
        @include assert {
          @include output {
            @include xl\:py-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2rem;
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('xl\:ps-8') {
        @include assert {
          @include output {
            @include xl\:ps-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 2rem;
            }
          }
        }
      }

      @include it('xl\:pe-8') {
        @include assert {
          @include output {
            @include xl\:pe-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 2rem;
            }
          }
        }
      }

      @include it('xl\:pt-8') {
        @include assert {
          @include output {
            @include xl\:pt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2rem;
            }
          }
        }
      }

      @include it('xl\:pr-8') {
        @include assert {
          @include output {
            @include xl\:pr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('xl\:pb-8') {
        @include assert {
          @include output {
            @include xl\:pb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('xl\:pl-8') {
        @include assert {
          @include output {
            @include xl\:pl-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2rem;
            }
          }
        }
      }

      @include it('xl\:p-9') {
        @include assert {
          @include output {
            @include xl\:p-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:px-9') {
        @include assert {
          @include output {
            @include xl\:px-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.25rem;
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:py-9') {
        @include assert {
          @include output {
            @include xl\:py-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.25rem;
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:ps-9') {
        @include assert {
          @include output {
            @include xl\:ps-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:pe-9') {
        @include assert {
          @include output {
            @include xl\:pe-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:pt-9') {
        @include assert {
          @include output {
            @include xl\:pt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:pr-9') {
        @include assert {
          @include output {
            @include xl\:pr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:pb-9') {
        @include assert {
          @include output {
            @include xl\:pb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:pl-9') {
        @include assert {
          @include output {
            @include xl\:pl-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:p-10') {
        @include assert {
          @include output {
            @include xl\:p-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:px-10') {
        @include assert {
          @include output {
            @include xl\:px-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.5rem;
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:py-10') {
        @include assert {
          @include output {
            @include xl\:py-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.5rem;
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:ps-10') {
        @include assert {
          @include output {
            @include xl\:ps-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:pe-10') {
        @include assert {
          @include output {
            @include xl\:pe-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:pt-10') {
        @include assert {
          @include output {
            @include xl\:pt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:pr-10') {
        @include assert {
          @include output {
            @include xl\:pr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:pb-10') {
        @include assert {
          @include output {
            @include xl\:pb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:pl-10') {
        @include assert {
          @include output {
            @include xl\:pl-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:p-11') {
        @include assert {
          @include output {
            @include xl\:p-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:px-11') {
        @include assert {
          @include output {
            @include xl\:px-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.75rem;
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:py-11') {
        @include assert {
          @include output {
            @include xl\:py-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.75rem;
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:ps-11') {
        @include assert {
          @include output {
            @include xl\:ps-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:pe-11') {
        @include assert {
          @include output {
            @include xl\:pe-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:pt-11') {
        @include assert {
          @include output {
            @include xl\:pt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:pr-11') {
        @include assert {
          @include output {
            @include xl\:pr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:pb-11') {
        @include assert {
          @include output {
            @include xl\:pb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:pl-11') {
        @include assert {
          @include output {
            @include xl\:pl-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:p-12') {
        @include assert {
          @include output {
            @include xl\:p-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 3rem;
            }
          }
        }
      }

      @include it('xl\:px-12') {
        @include assert {
          @include output {
            @include xl\:px-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 3rem;
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('xl\:py-12') {
        @include assert {
          @include output {
            @include xl\:py-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 3rem;
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('xl\:ps-12') {
        @include assert {
          @include output {
            @include xl\:ps-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 3rem;
            }
          }
        }
      }

      @include it('xl\:pe-12') {
        @include assert {
          @include output {
            @include xl\:pe-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 3rem;
            }
          }
        }
      }

      @include it('xl\:pt-12') {
        @include assert {
          @include output {
            @include xl\:pt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 3rem;
            }
          }
        }
      }

      @include it('xl\:pr-12') {
        @include assert {
          @include output {
            @include xl\:pr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('xl\:pb-12') {
        @include assert {
          @include output {
            @include xl\:pb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('xl\:pl-12') {
        @include assert {
          @include output {
            @include xl\:pl-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 3rem;
            }
          }
        }
      }

      @include it('xl\:p-14') {
        @include assert {
          @include output {
            @include xl\:p-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:px-14') {
        @include assert {
          @include output {
            @include xl\:px-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 3.5rem;
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:py-14') {
        @include assert {
          @include output {
            @include xl\:py-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 3.5rem;
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:ps-14') {
        @include assert {
          @include output {
            @include xl\:ps-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:pe-14') {
        @include assert {
          @include output {
            @include xl\:pe-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:pt-14') {
        @include assert {
          @include output {
            @include xl\:pt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:pr-14') {
        @include assert {
          @include output {
            @include xl\:pr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:pb-14') {
        @include assert {
          @include output {
            @include xl\:pb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:pl-14') {
        @include assert {
          @include output {
            @include xl\:pl-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:p-16') {
        @include assert {
          @include output {
            @include xl\:p-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 4rem;
            }
          }
        }
      }

      @include it('xl\:px-16') {
        @include assert {
          @include output {
            @include xl\:px-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 4rem;
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('xl\:py-16') {
        @include assert {
          @include output {
            @include xl\:py-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 4rem;
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('xl\:ps-16') {
        @include assert {
          @include output {
            @include xl\:ps-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 4rem;
            }
          }
        }
      }

      @include it('xl\:pe-16') {
        @include assert {
          @include output {
            @include xl\:pe-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 4rem;
            }
          }
        }
      }

      @include it('xl\:pt-16') {
        @include assert {
          @include output {
            @include xl\:pt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 4rem;
            }
          }
        }
      }

      @include it('xl\:pr-16') {
        @include assert {
          @include output {
            @include xl\:pr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('xl\:pb-16') {
        @include assert {
          @include output {
            @include xl\:pb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('xl\:pl-16') {
        @include assert {
          @include output {
            @include xl\:pl-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 4rem;
            }
          }
        }
      }

      @include it('xl\:p-20') {
        @include assert {
          @include output {
            @include xl\:p-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 5rem;
            }
          }
        }
      }

      @include it('xl\:px-20') {
        @include assert {
          @include output {
            @include xl\:px-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('xl\:py-20') {
        @include assert {
          @include output {
            @include xl\:py-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 5rem;
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('xl\:ps-20') {
        @include assert {
          @include output {
            @include xl\:ps-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 5rem;
            }
          }
        }
      }

      @include it('xl\:pe-20') {
        @include assert {
          @include output {
            @include xl\:pe-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 5rem;
            }
          }
        }
      }

      @include it('xl\:pt-20') {
        @include assert {
          @include output {
            @include xl\:pt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 5rem;
            }
          }
        }
      }

      @include it('xl\:pr-20') {
        @include assert {
          @include output {
            @include xl\:pr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('xl\:pb-20') {
        @include assert {
          @include output {
            @include xl\:pb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('xl\:pl-20') {
        @include assert {
          @include output {
            @include xl\:pl-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 5rem;
            }
          }
        }
      }

      @include it('xl\:p-24') {
        @include assert {
          @include output {
            @include xl\:p-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 6rem;
            }
          }
        }
      }

      @include it('xl\:px-24') {
        @include assert {
          @include output {
            @include xl\:px-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 6rem;
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('xl\:py-24') {
        @include assert {
          @include output {
            @include xl\:py-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 6rem;
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('xl\:ps-24') {
        @include assert {
          @include output {
            @include xl\:ps-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 6rem;
            }
          }
        }
      }

      @include it('xl\:pe-24') {
        @include assert {
          @include output {
            @include xl\:pe-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 6rem;
            }
          }
        }
      }

      @include it('xl\:pt-24') {
        @include assert {
          @include output {
            @include xl\:pt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 6rem;
            }
          }
        }
      }

      @include it('xl\:pr-24') {
        @include assert {
          @include output {
            @include xl\:pr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('xl\:pb-24') {
        @include assert {
          @include output {
            @include xl\:pb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('xl\:pl-24') {
        @include assert {
          @include output {
            @include xl\:pl-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 6rem;
            }
          }
        }
      }

      @include it('xl\:p-28') {
        @include assert {
          @include output {
            @include xl\:p-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 7rem;
            }
          }
        }
      }

      @include it('xl\:px-28') {
        @include assert {
          @include output {
            @include xl\:px-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 7rem;
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('xl\:py-28') {
        @include assert {
          @include output {
            @include xl\:py-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 7rem;
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('xl\:ps-28') {
        @include assert {
          @include output {
            @include xl\:ps-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 7rem;
            }
          }
        }
      }

      @include it('xl\:pe-28') {
        @include assert {
          @include output {
            @include xl\:pe-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 7rem;
            }
          }
        }
      }

      @include it('xl\:pt-28') {
        @include assert {
          @include output {
            @include xl\:pt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 7rem;
            }
          }
        }
      }

      @include it('xl\:pr-28') {
        @include assert {
          @include output {
            @include xl\:pr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('xl\:pb-28') {
        @include assert {
          @include output {
            @include xl\:pb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('xl\:pl-28') {
        @include assert {
          @include output {
            @include xl\:pl-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 7rem;
            }
          }
        }
      }

      @include it('xl\:p-32') {
        @include assert {
          @include output {
            @include xl\:p-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 8rem;
            }
          }
        }
      }

      @include it('xl\:px-32') {
        @include assert {
          @include output {
            @include xl\:px-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 8rem;
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('xl\:py-32') {
        @include assert {
          @include output {
            @include xl\:py-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 8rem;
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('xl\:ps-32') {
        @include assert {
          @include output {
            @include xl\:ps-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 8rem;
            }
          }
        }
      }

      @include it('xl\:pe-32') {
        @include assert {
          @include output {
            @include xl\:pe-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 8rem;
            }
          }
        }
      }

      @include it('xl\:pt-32') {
        @include assert {
          @include output {
            @include xl\:pt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 8rem;
            }
          }
        }
      }

      @include it('xl\:pr-32') {
        @include assert {
          @include output {
            @include xl\:pr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('xl\:pb-32') {
        @include assert {
          @include output {
            @include xl\:pb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('xl\:pl-32') {
        @include assert {
          @include output {
            @include xl\:pl-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 8rem;
            }
          }
        }
      }

      @include it('xl\:p-36') {
        @include assert {
          @include output {
            @include xl\:p-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 9rem;
            }
          }
        }
      }

      @include it('xl\:px-36') {
        @include assert {
          @include output {
            @include xl\:px-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 9rem;
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('xl\:py-36') {
        @include assert {
          @include output {
            @include xl\:py-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 9rem;
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('xl\:ps-36') {
        @include assert {
          @include output {
            @include xl\:ps-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 9rem;
            }
          }
        }
      }

      @include it('xl\:pe-36') {
        @include assert {
          @include output {
            @include xl\:pe-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 9rem;
            }
          }
        }
      }

      @include it('xl\:pt-36') {
        @include assert {
          @include output {
            @include xl\:pt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 9rem;
            }
          }
        }
      }

      @include it('xl\:pr-36') {
        @include assert {
          @include output {
            @include xl\:pr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('xl\:pb-36') {
        @include assert {
          @include output {
            @include xl\:pb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('xl\:pl-36') {
        @include assert {
          @include output {
            @include xl\:pl-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 9rem;
            }
          }
        }
      }

      @include it('xl\:p-40') {
        @include assert {
          @include output {
            @include xl\:p-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 10rem;
            }
          }
        }
      }

      @include it('xl\:px-40') {
        @include assert {
          @include output {
            @include xl\:px-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 10rem;
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('xl\:py-40') {
        @include assert {
          @include output {
            @include xl\:py-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 10rem;
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('xl\:ps-40') {
        @include assert {
          @include output {
            @include xl\:ps-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 10rem;
            }
          }
        }
      }

      @include it('xl\:pe-40') {
        @include assert {
          @include output {
            @include xl\:pe-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 10rem;
            }
          }
        }
      }

      @include it('xl\:pt-40') {
        @include assert {
          @include output {
            @include xl\:pt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 10rem;
            }
          }
        }
      }

      @include it('xl\:pr-40') {
        @include assert {
          @include output {
            @include xl\:pr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('xl\:pb-40') {
        @include assert {
          @include output {
            @include xl\:pb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('xl\:pl-40') {
        @include assert {
          @include output {
            @include xl\:pl-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 10rem;
            }
          }
        }
      }

      @include it('xl\:p-44') {
        @include assert {
          @include output {
            @include xl\:p-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 11rem;
            }
          }
        }
      }

      @include it('xl\:px-44') {
        @include assert {
          @include output {
            @include xl\:px-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 11rem;
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('xl\:py-44') {
        @include assert {
          @include output {
            @include xl\:py-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 11rem;
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('xl\:ps-44') {
        @include assert {
          @include output {
            @include xl\:ps-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 11rem;
            }
          }
        }
      }

      @include it('xl\:pe-44') {
        @include assert {
          @include output {
            @include xl\:pe-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 11rem;
            }
          }
        }
      }

      @include it('xl\:pt-44') {
        @include assert {
          @include output {
            @include xl\:pt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 11rem;
            }
          }
        }
      }

      @include it('xl\:pr-44') {
        @include assert {
          @include output {
            @include xl\:pr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('xl\:pb-44') {
        @include assert {
          @include output {
            @include xl\:pb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('xl\:pl-44') {
        @include assert {
          @include output {
            @include xl\:pl-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 11rem;
            }
          }
        }
      }

      @include it('xl\:p-48') {
        @include assert {
          @include output {
            @include xl\:p-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 12rem;
            }
          }
        }
      }

      @include it('xl\:px-48') {
        @include assert {
          @include output {
            @include xl\:px-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 12rem;
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('xl\:py-48') {
        @include assert {
          @include output {
            @include xl\:py-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 12rem;
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('xl\:ps-48') {
        @include assert {
          @include output {
            @include xl\:ps-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 12rem;
            }
          }
        }
      }

      @include it('xl\:pe-48') {
        @include assert {
          @include output {
            @include xl\:pe-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 12rem;
            }
          }
        }
      }

      @include it('xl\:pt-48') {
        @include assert {
          @include output {
            @include xl\:pt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 12rem;
            }
          }
        }
      }

      @include it('xl\:pr-48') {
        @include assert {
          @include output {
            @include xl\:pr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('xl\:pb-48') {
        @include assert {
          @include output {
            @include xl\:pb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('xl\:pl-48') {
        @include assert {
          @include output {
            @include xl\:pl-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 12rem;
            }
          }
        }
      }

      @include it('xl\:p-52') {
        @include assert {
          @include output {
            @include xl\:p-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 13rem;
            }
          }
        }
      }

      @include it('xl\:px-52') {
        @include assert {
          @include output {
            @include xl\:px-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 13rem;
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('xl\:py-52') {
        @include assert {
          @include output {
            @include xl\:py-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 13rem;
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('xl\:ps-52') {
        @include assert {
          @include output {
            @include xl\:ps-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 13rem;
            }
          }
        }
      }

      @include it('xl\:pe-52') {
        @include assert {
          @include output {
            @include xl\:pe-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 13rem;
            }
          }
        }
      }

      @include it('xl\:pt-52') {
        @include assert {
          @include output {
            @include xl\:pt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 13rem;
            }
          }
        }
      }

      @include it('xl\:pr-52') {
        @include assert {
          @include output {
            @include xl\:pr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('xl\:pb-52') {
        @include assert {
          @include output {
            @include xl\:pb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('xl\:pl-52') {
        @include assert {
          @include output {
            @include xl\:pl-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 13rem;
            }
          }
        }
      }

      @include it('xl\:p-56') {
        @include assert {
          @include output {
            @include xl\:p-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 14rem;
            }
          }
        }
      }

      @include it('xl\:px-56') {
        @include assert {
          @include output {
            @include xl\:px-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 14rem;
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('xl\:py-56') {
        @include assert {
          @include output {
            @include xl\:py-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 14rem;
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('xl\:ps-56') {
        @include assert {
          @include output {
            @include xl\:ps-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 14rem;
            }
          }
        }
      }

      @include it('xl\:pe-56') {
        @include assert {
          @include output {
            @include xl\:pe-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 14rem;
            }
          }
        }
      }

      @include it('xl\:pt-56') {
        @include assert {
          @include output {
            @include xl\:pt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 14rem;
            }
          }
        }
      }

      @include it('xl\:pr-56') {
        @include assert {
          @include output {
            @include xl\:pr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('xl\:pb-56') {
        @include assert {
          @include output {
            @include xl\:pb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('xl\:pl-56') {
        @include assert {
          @include output {
            @include xl\:pl-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 14rem;
            }
          }
        }
      }

      @include it('xl\:p-60') {
        @include assert {
          @include output {
            @include xl\:p-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 15rem;
            }
          }
        }
      }

      @include it('xl\:px-60') {
        @include assert {
          @include output {
            @include xl\:px-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 15rem;
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('xl\:py-60') {
        @include assert {
          @include output {
            @include xl\:py-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 15rem;
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('xl\:ps-60') {
        @include assert {
          @include output {
            @include xl\:ps-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 15rem;
            }
          }
        }
      }

      @include it('xl\:pe-60') {
        @include assert {
          @include output {
            @include xl\:pe-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 15rem;
            }
          }
        }
      }

      @include it('xl\:pt-60') {
        @include assert {
          @include output {
            @include xl\:pt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 15rem;
            }
          }
        }
      }

      @include it('xl\:pr-60') {
        @include assert {
          @include output {
            @include xl\:pr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('xl\:pb-60') {
        @include assert {
          @include output {
            @include xl\:pb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('xl\:pl-60') {
        @include assert {
          @include output {
            @include xl\:pl-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 15rem;
            }
          }
        }
      }

      @include it('xl\:p-64') {
        @include assert {
          @include output {
            @include xl\:p-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 16rem;
            }
          }
        }
      }

      @include it('xl\:px-64') {
        @include assert {
          @include output {
            @include xl\:px-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 16rem;
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('xl\:py-64') {
        @include assert {
          @include output {
            @include xl\:py-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 16rem;
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('xl\:ps-64') {
        @include assert {
          @include output {
            @include xl\:ps-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 16rem;
            }
          }
        }
      }

      @include it('xl\:pe-64') {
        @include assert {
          @include output {
            @include xl\:pe-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 16rem;
            }
          }
        }
      }

      @include it('xl\:pt-64') {
        @include assert {
          @include output {
            @include xl\:pt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 16rem;
            }
          }
        }
      }

      @include it('xl\:pr-64') {
        @include assert {
          @include output {
            @include xl\:pr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('xl\:pb-64') {
        @include assert {
          @include output {
            @include xl\:pb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('xl\:pl-64') {
        @include assert {
          @include output {
            @include xl\:pl-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 16rem;
            }
          }
        }
      }

      @include it('xl\:p-72') {
        @include assert {
          @include output {
            @include xl\:p-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 18rem;
            }
          }
        }
      }

      @include it('xl\:px-72') {
        @include assert {
          @include output {
            @include xl\:px-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 18rem;
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('xl\:py-72') {
        @include assert {
          @include output {
            @include xl\:py-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 18rem;
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('xl\:ps-72') {
        @include assert {
          @include output {
            @include xl\:ps-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 18rem;
            }
          }
        }
      }

      @include it('xl\:pe-72') {
        @include assert {
          @include output {
            @include xl\:pe-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 18rem;
            }
          }
        }
      }

      @include it('xl\:pt-72') {
        @include assert {
          @include output {
            @include xl\:pt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 18rem;
            }
          }
        }
      }

      @include it('xl\:pr-72') {
        @include assert {
          @include output {
            @include xl\:pr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('xl\:pb-72') {
        @include assert {
          @include output {
            @include xl\:pb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('xl\:pl-72') {
        @include assert {
          @include output {
            @include xl\:pl-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 18rem;
            }
          }
        }
      }

      @include it('xl\:p-80') {
        @include assert {
          @include output {
            @include xl\:p-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 20rem;
            }
          }
        }
      }

      @include it('xl\:px-80') {
        @include assert {
          @include output {
            @include xl\:px-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 20rem;
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('xl\:py-80') {
        @include assert {
          @include output {
            @include xl\:py-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 20rem;
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('xl\:ps-80') {
        @include assert {
          @include output {
            @include xl\:ps-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 20rem;
            }
          }
        }
      }

      @include it('xl\:pe-80') {
        @include assert {
          @include output {
            @include xl\:pe-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 20rem;
            }
          }
        }
      }

      @include it('xl\:pt-80') {
        @include assert {
          @include output {
            @include xl\:pt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 20rem;
            }
          }
        }
      }

      @include it('xl\:pr-80') {
        @include assert {
          @include output {
            @include xl\:pr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('xl\:pb-80') {
        @include assert {
          @include output {
            @include xl\:pb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('xl\:pl-80') {
        @include assert {
          @include output {
            @include xl\:pl-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 20rem;
            }
          }
        }
      }

      @include it('xl\:p-96') {
        @include assert {
          @include output {
            @include xl\:p-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 24rem;
            }
          }
        }
      }

      @include it('xl\:px-96') {
        @include assert {
          @include output {
            @include xl\:px-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 24rem;
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('xl\:py-96') {
        @include assert {
          @include output {
            @include xl\:py-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 24rem;
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('xl\:ps-96') {
        @include assert {
          @include output {
            @include xl\:ps-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 24rem;
            }
          }
        }
      }

      @include it('xl\:pe-96') {
        @include assert {
          @include output {
            @include xl\:pe-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 24rem;
            }
          }
        }
      }

      @include it('xl\:pt-96') {
        @include assert {
          @include output {
            @include xl\:pt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 24rem;
            }
          }
        }
      }

      @include it('xl\:pr-96') {
        @include assert {
          @include output {
            @include xl\:pr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('xl\:pb-96') {
        @include assert {
          @include output {
            @include xl\:pb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('xl\:pl-96') {
        @include assert {
          @include output {
            @include xl\:pl-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 24rem;
            }
          }
        }
      }

      @include it('2xl\:p-0') {
        @include assert {
          @include output {
            @include \2xl\:p-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0px;
            }
          }
        }
      }

      @include it('2xl\:px-0') {
        @include assert {
          @include output {
            @include \2xl\:px-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0px;
              padding-right: 0px;
            }
          }
        }
      }

      @include it('2xl\:py-0') {
        @include assert {
          @include output {
            @include \2xl\:py-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0px;
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:ps-0') {
        @include assert {
          @include output {
            @include \2xl\:ps-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0px;
            }
          }
        }
      }

      @include it('2xl\:pe-0') {
        @include assert {
          @include output {
            @include \2xl\:pe-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0px;
            }
          }
        }
      }

      @include it('2xl\:pt-0') {
        @include assert {
          @include output {
            @include \2xl\:pt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0px;
            }
          }
        }
      }

      @include it('2xl\:pr-0') {
        @include assert {
          @include output {
            @include \2xl\:pr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0px;
            }
          }
        }
      }

      @include it('2xl\:pb-0') {
        @include assert {
          @include output {
            @include \2xl\:pb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:pl-0') {
        @include assert {
          @include output {
            @include \2xl\:pl-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0px;
            }
          }
        }
      }

      @include it('2xl\:p-px') {
        @include assert {
          @include output {
            @include \2xl\:p-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 1px;
            }
          }
        }
      }

      @include it('2xl\:px-px') {
        @include assert {
          @include output {
            @include \2xl\:px-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1px;
              padding-right: 1px;
            }
          }
        }
      }

      @include it('2xl\:py-px') {
        @include assert {
          @include output {
            @include \2xl\:py-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1px;
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('2xl\:ps-px') {
        @include assert {
          @include output {
            @include \2xl\:ps-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 1px;
            }
          }
        }
      }

      @include it('2xl\:pe-px') {
        @include assert {
          @include output {
            @include \2xl\:pe-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 1px;
            }
          }
        }
      }

      @include it('2xl\:pt-px') {
        @include assert {
          @include output {
            @include \2xl\:pt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1px;
            }
          }
        }
      }

      @include it('2xl\:pr-px') {
        @include assert {
          @include output {
            @include \2xl\:pr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 1px;
            }
          }
        }
      }

      @include it('2xl\:pb-px') {
        @include assert {
          @include output {
            @include \2xl\:pb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 1px;
            }
          }
        }
      }

      @include it('2xl\:pl-px') {
        @include assert {
          @include output {
            @include \2xl\:pl-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1px;
            }
          }
        }
      }

      @include it('2xl\:p-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:p-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:px-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:px-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.125rem;
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:py-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:py-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.125rem;
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:ps-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:ps-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:pe-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:pe-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:pt-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:pt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:pr-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:pr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:pb-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:pb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:pl-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:pl-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:p-1') {
        @include assert {
          @include output {
            @include \2xl\:p-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:px-1') {
        @include assert {
          @include output {
            @include \2xl\:px-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.25rem;
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:py-1') {
        @include assert {
          @include output {
            @include \2xl\:py-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.25rem;
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:ps-1') {
        @include assert {
          @include output {
            @include \2xl\:ps-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:pe-1') {
        @include assert {
          @include output {
            @include \2xl\:pe-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:pt-1') {
        @include assert {
          @include output {
            @include \2xl\:pt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:pr-1') {
        @include assert {
          @include output {
            @include \2xl\:pr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:pb-1') {
        @include assert {
          @include output {
            @include \2xl\:pb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:pl-1') {
        @include assert {
          @include output {
            @include \2xl\:pl-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:p-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:p-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:px-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:px-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.375rem;
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:py-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:py-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.375rem;
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:ps-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:ps-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:pe-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:pe-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:pt-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:pt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:pr-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:pr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:pb-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:pb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:pl-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:pl-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:p-2') {
        @include assert {
          @include output {
            @include \2xl\:p-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:px-2') {
        @include assert {
          @include output {
            @include \2xl\:px-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.5rem;
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:py-2') {
        @include assert {
          @include output {
            @include \2xl\:py-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:ps-2') {
        @include assert {
          @include output {
            @include \2xl\:ps-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:pe-2') {
        @include assert {
          @include output {
            @include \2xl\:pe-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:pt-2') {
        @include assert {
          @include output {
            @include \2xl\:pt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:pr-2') {
        @include assert {
          @include output {
            @include \2xl\:pr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:pb-2') {
        @include assert {
          @include output {
            @include \2xl\:pb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:pl-2') {
        @include assert {
          @include output {
            @include \2xl\:pl-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:p-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:p-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:px-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:px-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.625rem;
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:py-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:py-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.625rem;
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:ps-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:ps-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:pe-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:pe-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:pt-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:pt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:pr-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:pr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:pb-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:pb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:pl-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:pl-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:p-3') {
        @include assert {
          @include output {
            @include \2xl\:p-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:px-3') {
        @include assert {
          @include output {
            @include \2xl\:px-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.75rem;
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:py-3') {
        @include assert {
          @include output {
            @include \2xl\:py-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.75rem;
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:ps-3') {
        @include assert {
          @include output {
            @include \2xl\:ps-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:pe-3') {
        @include assert {
          @include output {
            @include \2xl\:pe-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:pt-3') {
        @include assert {
          @include output {
            @include \2xl\:pt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:pr-3') {
        @include assert {
          @include output {
            @include \2xl\:pr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:pb-3') {
        @include assert {
          @include output {
            @include \2xl\:pb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:pl-3') {
        @include assert {
          @include output {
            @include \2xl\:pl-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:p-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:p-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:px-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:px-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.875rem;
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:py-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:py-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.875rem;
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:ps-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:ps-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:pe-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:pe-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:pt-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:pt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:pr-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:pr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:pb-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:pb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:pl-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:pl-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:p-4') {
        @include assert {
          @include output {
            @include \2xl\:p-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 1rem;
            }
          }
        }
      }

      @include it('2xl\:px-4') {
        @include assert {
          @include output {
            @include \2xl\:px-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1rem;
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('2xl\:py-4') {
        @include assert {
          @include output {
            @include \2xl\:py-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1rem;
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('2xl\:ps-4') {
        @include assert {
          @include output {
            @include \2xl\:ps-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 1rem;
            }
          }
        }
      }

      @include it('2xl\:pe-4') {
        @include assert {
          @include output {
            @include \2xl\:pe-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 1rem;
            }
          }
        }
      }

      @include it('2xl\:pt-4') {
        @include assert {
          @include output {
            @include \2xl\:pt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1rem;
            }
          }
        }
      }

      @include it('2xl\:pr-4') {
        @include assert {
          @include output {
            @include \2xl\:pr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 1rem;
            }
          }
        }
      }

      @include it('2xl\:pb-4') {
        @include assert {
          @include output {
            @include \2xl\:pb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 1rem;
            }
          }
        }
      }

      @include it('2xl\:pl-4') {
        @include assert {
          @include output {
            @include \2xl\:pl-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1rem;
            }
          }
        }
      }

      @include it('2xl\:p-5') {
        @include assert {
          @include output {
            @include \2xl\:p-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:px-5') {
        @include assert {
          @include output {
            @include \2xl\:px-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.25rem;
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:py-5') {
        @include assert {
          @include output {
            @include \2xl\:py-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.25rem;
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:ps-5') {
        @include assert {
          @include output {
            @include \2xl\:ps-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:pe-5') {
        @include assert {
          @include output {
            @include \2xl\:pe-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:pt-5') {
        @include assert {
          @include output {
            @include \2xl\:pt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:pr-5') {
        @include assert {
          @include output {
            @include \2xl\:pr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:pb-5') {
        @include assert {
          @include output {
            @include \2xl\:pb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:pl-5') {
        @include assert {
          @include output {
            @include \2xl\:pl-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:p-6') {
        @include assert {
          @include output {
            @include \2xl\:p-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:px-6') {
        @include assert {
          @include output {
            @include \2xl\:px-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.5rem;
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:py-6') {
        @include assert {
          @include output {
            @include \2xl\:py-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.5rem;
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:ps-6') {
        @include assert {
          @include output {
            @include \2xl\:ps-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:pe-6') {
        @include assert {
          @include output {
            @include \2xl\:pe-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:pt-6') {
        @include assert {
          @include output {
            @include \2xl\:pt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:pr-6') {
        @include assert {
          @include output {
            @include \2xl\:pr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:pb-6') {
        @include assert {
          @include output {
            @include \2xl\:pb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:pl-6') {
        @include assert {
          @include output {
            @include \2xl\:pl-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:p-7') {
        @include assert {
          @include output {
            @include \2xl\:p-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:px-7') {
        @include assert {
          @include output {
            @include \2xl\:px-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.75rem;
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:py-7') {
        @include assert {
          @include output {
            @include \2xl\:py-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.75rem;
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:ps-7') {
        @include assert {
          @include output {
            @include \2xl\:ps-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:pe-7') {
        @include assert {
          @include output {
            @include \2xl\:pe-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:pt-7') {
        @include assert {
          @include output {
            @include \2xl\:pt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:pr-7') {
        @include assert {
          @include output {
            @include \2xl\:pr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:pb-7') {
        @include assert {
          @include output {
            @include \2xl\:pb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:pl-7') {
        @include assert {
          @include output {
            @include \2xl\:pl-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:p-8') {
        @include assert {
          @include output {
            @include \2xl\:p-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 2rem;
            }
          }
        }
      }

      @include it('2xl\:px-8') {
        @include assert {
          @include output {
            @include \2xl\:px-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2rem;
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('2xl\:py-8') {
        @include assert {
          @include output {
            @include \2xl\:py-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2rem;
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('2xl\:ps-8') {
        @include assert {
          @include output {
            @include \2xl\:ps-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 2rem;
            }
          }
        }
      }

      @include it('2xl\:pe-8') {
        @include assert {
          @include output {
            @include \2xl\:pe-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 2rem;
            }
          }
        }
      }

      @include it('2xl\:pt-8') {
        @include assert {
          @include output {
            @include \2xl\:pt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2rem;
            }
          }
        }
      }

      @include it('2xl\:pr-8') {
        @include assert {
          @include output {
            @include \2xl\:pr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 2rem;
            }
          }
        }
      }

      @include it('2xl\:pb-8') {
        @include assert {
          @include output {
            @include \2xl\:pb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 2rem;
            }
          }
        }
      }

      @include it('2xl\:pl-8') {
        @include assert {
          @include output {
            @include \2xl\:pl-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2rem;
            }
          }
        }
      }

      @include it('2xl\:p-9') {
        @include assert {
          @include output {
            @include \2xl\:p-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:px-9') {
        @include assert {
          @include output {
            @include \2xl\:px-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.25rem;
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:py-9') {
        @include assert {
          @include output {
            @include \2xl\:py-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.25rem;
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:ps-9') {
        @include assert {
          @include output {
            @include \2xl\:ps-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:pe-9') {
        @include assert {
          @include output {
            @include \2xl\:pe-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:pt-9') {
        @include assert {
          @include output {
            @include \2xl\:pt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:pr-9') {
        @include assert {
          @include output {
            @include \2xl\:pr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:pb-9') {
        @include assert {
          @include output {
            @include \2xl\:pb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:pl-9') {
        @include assert {
          @include output {
            @include \2xl\:pl-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:p-10') {
        @include assert {
          @include output {
            @include \2xl\:p-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:px-10') {
        @include assert {
          @include output {
            @include \2xl\:px-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.5rem;
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:py-10') {
        @include assert {
          @include output {
            @include \2xl\:py-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.5rem;
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:ps-10') {
        @include assert {
          @include output {
            @include \2xl\:ps-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:pe-10') {
        @include assert {
          @include output {
            @include \2xl\:pe-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:pt-10') {
        @include assert {
          @include output {
            @include \2xl\:pt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:pr-10') {
        @include assert {
          @include output {
            @include \2xl\:pr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:pb-10') {
        @include assert {
          @include output {
            @include \2xl\:pb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:pl-10') {
        @include assert {
          @include output {
            @include \2xl\:pl-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:p-11') {
        @include assert {
          @include output {
            @include \2xl\:p-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:px-11') {
        @include assert {
          @include output {
            @include \2xl\:px-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.75rem;
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:py-11') {
        @include assert {
          @include output {
            @include \2xl\:py-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.75rem;
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:ps-11') {
        @include assert {
          @include output {
            @include \2xl\:ps-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:pe-11') {
        @include assert {
          @include output {
            @include \2xl\:pe-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:pt-11') {
        @include assert {
          @include output {
            @include \2xl\:pt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:pr-11') {
        @include assert {
          @include output {
            @include \2xl\:pr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:pb-11') {
        @include assert {
          @include output {
            @include \2xl\:pb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:pl-11') {
        @include assert {
          @include output {
            @include \2xl\:pl-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:p-12') {
        @include assert {
          @include output {
            @include \2xl\:p-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 3rem;
            }
          }
        }
      }

      @include it('2xl\:px-12') {
        @include assert {
          @include output {
            @include \2xl\:px-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 3rem;
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('2xl\:py-12') {
        @include assert {
          @include output {
            @include \2xl\:py-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 3rem;
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('2xl\:ps-12') {
        @include assert {
          @include output {
            @include \2xl\:ps-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 3rem;
            }
          }
        }
      }

      @include it('2xl\:pe-12') {
        @include assert {
          @include output {
            @include \2xl\:pe-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 3rem;
            }
          }
        }
      }

      @include it('2xl\:pt-12') {
        @include assert {
          @include output {
            @include \2xl\:pt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 3rem;
            }
          }
        }
      }

      @include it('2xl\:pr-12') {
        @include assert {
          @include output {
            @include \2xl\:pr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 3rem;
            }
          }
        }
      }

      @include it('2xl\:pb-12') {
        @include assert {
          @include output {
            @include \2xl\:pb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 3rem;
            }
          }
        }
      }

      @include it('2xl\:pl-12') {
        @include assert {
          @include output {
            @include \2xl\:pl-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 3rem;
            }
          }
        }
      }

      @include it('2xl\:p-14') {
        @include assert {
          @include output {
            @include \2xl\:p-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:px-14') {
        @include assert {
          @include output {
            @include \2xl\:px-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 3.5rem;
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:py-14') {
        @include assert {
          @include output {
            @include \2xl\:py-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 3.5rem;
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:ps-14') {
        @include assert {
          @include output {
            @include \2xl\:ps-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:pe-14') {
        @include assert {
          @include output {
            @include \2xl\:pe-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:pt-14') {
        @include assert {
          @include output {
            @include \2xl\:pt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:pr-14') {
        @include assert {
          @include output {
            @include \2xl\:pr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:pb-14') {
        @include assert {
          @include output {
            @include \2xl\:pb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:pl-14') {
        @include assert {
          @include output {
            @include \2xl\:pl-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:p-16') {
        @include assert {
          @include output {
            @include \2xl\:p-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 4rem;
            }
          }
        }
      }

      @include it('2xl\:px-16') {
        @include assert {
          @include output {
            @include \2xl\:px-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 4rem;
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('2xl\:py-16') {
        @include assert {
          @include output {
            @include \2xl\:py-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 4rem;
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('2xl\:ps-16') {
        @include assert {
          @include output {
            @include \2xl\:ps-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 4rem;
            }
          }
        }
      }

      @include it('2xl\:pe-16') {
        @include assert {
          @include output {
            @include \2xl\:pe-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 4rem;
            }
          }
        }
      }

      @include it('2xl\:pt-16') {
        @include assert {
          @include output {
            @include \2xl\:pt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 4rem;
            }
          }
        }
      }

      @include it('2xl\:pr-16') {
        @include assert {
          @include output {
            @include \2xl\:pr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 4rem;
            }
          }
        }
      }

      @include it('2xl\:pb-16') {
        @include assert {
          @include output {
            @include \2xl\:pb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 4rem;
            }
          }
        }
      }

      @include it('2xl\:pl-16') {
        @include assert {
          @include output {
            @include \2xl\:pl-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 4rem;
            }
          }
        }
      }

      @include it('2xl\:p-20') {
        @include assert {
          @include output {
            @include \2xl\:p-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 5rem;
            }
          }
        }
      }

      @include it('2xl\:px-20') {
        @include assert {
          @include output {
            @include \2xl\:px-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('2xl\:py-20') {
        @include assert {
          @include output {
            @include \2xl\:py-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 5rem;
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('2xl\:ps-20') {
        @include assert {
          @include output {
            @include \2xl\:ps-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 5rem;
            }
          }
        }
      }

      @include it('2xl\:pe-20') {
        @include assert {
          @include output {
            @include \2xl\:pe-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 5rem;
            }
          }
        }
      }

      @include it('2xl\:pt-20') {
        @include assert {
          @include output {
            @include \2xl\:pt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 5rem;
            }
          }
        }
      }

      @include it('2xl\:pr-20') {
        @include assert {
          @include output {
            @include \2xl\:pr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 5rem;
            }
          }
        }
      }

      @include it('2xl\:pb-20') {
        @include assert {
          @include output {
            @include \2xl\:pb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 5rem;
            }
          }
        }
      }

      @include it('2xl\:pl-20') {
        @include assert {
          @include output {
            @include \2xl\:pl-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 5rem;
            }
          }
        }
      }

      @include it('2xl\:p-24') {
        @include assert {
          @include output {
            @include \2xl\:p-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 6rem;
            }
          }
        }
      }

      @include it('2xl\:px-24') {
        @include assert {
          @include output {
            @include \2xl\:px-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 6rem;
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('2xl\:py-24') {
        @include assert {
          @include output {
            @include \2xl\:py-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 6rem;
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('2xl\:ps-24') {
        @include assert {
          @include output {
            @include \2xl\:ps-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 6rem;
            }
          }
        }
      }

      @include it('2xl\:pe-24') {
        @include assert {
          @include output {
            @include \2xl\:pe-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 6rem;
            }
          }
        }
      }

      @include it('2xl\:pt-24') {
        @include assert {
          @include output {
            @include \2xl\:pt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 6rem;
            }
          }
        }
      }

      @include it('2xl\:pr-24') {
        @include assert {
          @include output {
            @include \2xl\:pr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 6rem;
            }
          }
        }
      }

      @include it('2xl\:pb-24') {
        @include assert {
          @include output {
            @include \2xl\:pb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 6rem;
            }
          }
        }
      }

      @include it('2xl\:pl-24') {
        @include assert {
          @include output {
            @include \2xl\:pl-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 6rem;
            }
          }
        }
      }

      @include it('2xl\:p-28') {
        @include assert {
          @include output {
            @include \2xl\:p-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 7rem;
            }
          }
        }
      }

      @include it('2xl\:px-28') {
        @include assert {
          @include output {
            @include \2xl\:px-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 7rem;
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('2xl\:py-28') {
        @include assert {
          @include output {
            @include \2xl\:py-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 7rem;
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('2xl\:ps-28') {
        @include assert {
          @include output {
            @include \2xl\:ps-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 7rem;
            }
          }
        }
      }

      @include it('2xl\:pe-28') {
        @include assert {
          @include output {
            @include \2xl\:pe-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 7rem;
            }
          }
        }
      }

      @include it('2xl\:pt-28') {
        @include assert {
          @include output {
            @include \2xl\:pt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 7rem;
            }
          }
        }
      }

      @include it('2xl\:pr-28') {
        @include assert {
          @include output {
            @include \2xl\:pr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 7rem;
            }
          }
        }
      }

      @include it('2xl\:pb-28') {
        @include assert {
          @include output {
            @include \2xl\:pb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 7rem;
            }
          }
        }
      }

      @include it('2xl\:pl-28') {
        @include assert {
          @include output {
            @include \2xl\:pl-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 7rem;
            }
          }
        }
      }

      @include it('2xl\:p-32') {
        @include assert {
          @include output {
            @include \2xl\:p-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 8rem;
            }
          }
        }
      }

      @include it('2xl\:px-32') {
        @include assert {
          @include output {
            @include \2xl\:px-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 8rem;
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('2xl\:py-32') {
        @include assert {
          @include output {
            @include \2xl\:py-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 8rem;
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('2xl\:ps-32') {
        @include assert {
          @include output {
            @include \2xl\:ps-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 8rem;
            }
          }
        }
      }

      @include it('2xl\:pe-32') {
        @include assert {
          @include output {
            @include \2xl\:pe-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 8rem;
            }
          }
        }
      }

      @include it('2xl\:pt-32') {
        @include assert {
          @include output {
            @include \2xl\:pt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 8rem;
            }
          }
        }
      }

      @include it('2xl\:pr-32') {
        @include assert {
          @include output {
            @include \2xl\:pr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 8rem;
            }
          }
        }
      }

      @include it('2xl\:pb-32') {
        @include assert {
          @include output {
            @include \2xl\:pb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 8rem;
            }
          }
        }
      }

      @include it('2xl\:pl-32') {
        @include assert {
          @include output {
            @include \2xl\:pl-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 8rem;
            }
          }
        }
      }

      @include it('2xl\:p-36') {
        @include assert {
          @include output {
            @include \2xl\:p-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 9rem;
            }
          }
        }
      }

      @include it('2xl\:px-36') {
        @include assert {
          @include output {
            @include \2xl\:px-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 9rem;
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('2xl\:py-36') {
        @include assert {
          @include output {
            @include \2xl\:py-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 9rem;
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('2xl\:ps-36') {
        @include assert {
          @include output {
            @include \2xl\:ps-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 9rem;
            }
          }
        }
      }

      @include it('2xl\:pe-36') {
        @include assert {
          @include output {
            @include \2xl\:pe-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 9rem;
            }
          }
        }
      }

      @include it('2xl\:pt-36') {
        @include assert {
          @include output {
            @include \2xl\:pt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 9rem;
            }
          }
        }
      }

      @include it('2xl\:pr-36') {
        @include assert {
          @include output {
            @include \2xl\:pr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 9rem;
            }
          }
        }
      }

      @include it('2xl\:pb-36') {
        @include assert {
          @include output {
            @include \2xl\:pb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 9rem;
            }
          }
        }
      }

      @include it('2xl\:pl-36') {
        @include assert {
          @include output {
            @include \2xl\:pl-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 9rem;
            }
          }
        }
      }

      @include it('2xl\:p-40') {
        @include assert {
          @include output {
            @include \2xl\:p-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 10rem;
            }
          }
        }
      }

      @include it('2xl\:px-40') {
        @include assert {
          @include output {
            @include \2xl\:px-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 10rem;
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('2xl\:py-40') {
        @include assert {
          @include output {
            @include \2xl\:py-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 10rem;
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('2xl\:ps-40') {
        @include assert {
          @include output {
            @include \2xl\:ps-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 10rem;
            }
          }
        }
      }

      @include it('2xl\:pe-40') {
        @include assert {
          @include output {
            @include \2xl\:pe-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 10rem;
            }
          }
        }
      }

      @include it('2xl\:pt-40') {
        @include assert {
          @include output {
            @include \2xl\:pt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 10rem;
            }
          }
        }
      }

      @include it('2xl\:pr-40') {
        @include assert {
          @include output {
            @include \2xl\:pr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 10rem;
            }
          }
        }
      }

      @include it('2xl\:pb-40') {
        @include assert {
          @include output {
            @include \2xl\:pb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 10rem;
            }
          }
        }
      }

      @include it('2xl\:pl-40') {
        @include assert {
          @include output {
            @include \2xl\:pl-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 10rem;
            }
          }
        }
      }

      @include it('2xl\:p-44') {
        @include assert {
          @include output {
            @include \2xl\:p-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 11rem;
            }
          }
        }
      }

      @include it('2xl\:px-44') {
        @include assert {
          @include output {
            @include \2xl\:px-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 11rem;
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('2xl\:py-44') {
        @include assert {
          @include output {
            @include \2xl\:py-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 11rem;
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('2xl\:ps-44') {
        @include assert {
          @include output {
            @include \2xl\:ps-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 11rem;
            }
          }
        }
      }

      @include it('2xl\:pe-44') {
        @include assert {
          @include output {
            @include \2xl\:pe-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 11rem;
            }
          }
        }
      }

      @include it('2xl\:pt-44') {
        @include assert {
          @include output {
            @include \2xl\:pt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 11rem;
            }
          }
        }
      }

      @include it('2xl\:pr-44') {
        @include assert {
          @include output {
            @include \2xl\:pr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 11rem;
            }
          }
        }
      }

      @include it('2xl\:pb-44') {
        @include assert {
          @include output {
            @include \2xl\:pb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 11rem;
            }
          }
        }
      }

      @include it('2xl\:pl-44') {
        @include assert {
          @include output {
            @include \2xl\:pl-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 11rem;
            }
          }
        }
      }

      @include it('2xl\:p-48') {
        @include assert {
          @include output {
            @include \2xl\:p-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 12rem;
            }
          }
        }
      }

      @include it('2xl\:px-48') {
        @include assert {
          @include output {
            @include \2xl\:px-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 12rem;
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('2xl\:py-48') {
        @include assert {
          @include output {
            @include \2xl\:py-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 12rem;
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('2xl\:ps-48') {
        @include assert {
          @include output {
            @include \2xl\:ps-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 12rem;
            }
          }
        }
      }

      @include it('2xl\:pe-48') {
        @include assert {
          @include output {
            @include \2xl\:pe-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 12rem;
            }
          }
        }
      }

      @include it('2xl\:pt-48') {
        @include assert {
          @include output {
            @include \2xl\:pt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 12rem;
            }
          }
        }
      }

      @include it('2xl\:pr-48') {
        @include assert {
          @include output {
            @include \2xl\:pr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 12rem;
            }
          }
        }
      }

      @include it('2xl\:pb-48') {
        @include assert {
          @include output {
            @include \2xl\:pb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 12rem;
            }
          }
        }
      }

      @include it('2xl\:pl-48') {
        @include assert {
          @include output {
            @include \2xl\:pl-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 12rem;
            }
          }
        }
      }

      @include it('2xl\:p-52') {
        @include assert {
          @include output {
            @include \2xl\:p-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 13rem;
            }
          }
        }
      }

      @include it('2xl\:px-52') {
        @include assert {
          @include output {
            @include \2xl\:px-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 13rem;
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('2xl\:py-52') {
        @include assert {
          @include output {
            @include \2xl\:py-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 13rem;
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('2xl\:ps-52') {
        @include assert {
          @include output {
            @include \2xl\:ps-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 13rem;
            }
          }
        }
      }

      @include it('2xl\:pe-52') {
        @include assert {
          @include output {
            @include \2xl\:pe-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 13rem;
            }
          }
        }
      }

      @include it('2xl\:pt-52') {
        @include assert {
          @include output {
            @include \2xl\:pt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 13rem;
            }
          }
        }
      }

      @include it('2xl\:pr-52') {
        @include assert {
          @include output {
            @include \2xl\:pr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 13rem;
            }
          }
        }
      }

      @include it('2xl\:pb-52') {
        @include assert {
          @include output {
            @include \2xl\:pb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 13rem;
            }
          }
        }
      }

      @include it('2xl\:pl-52') {
        @include assert {
          @include output {
            @include \2xl\:pl-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 13rem;
            }
          }
        }
      }

      @include it('2xl\:p-56') {
        @include assert {
          @include output {
            @include \2xl\:p-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 14rem;
            }
          }
        }
      }

      @include it('2xl\:px-56') {
        @include assert {
          @include output {
            @include \2xl\:px-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 14rem;
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('2xl\:py-56') {
        @include assert {
          @include output {
            @include \2xl\:py-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 14rem;
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('2xl\:ps-56') {
        @include assert {
          @include output {
            @include \2xl\:ps-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 14rem;
            }
          }
        }
      }

      @include it('2xl\:pe-56') {
        @include assert {
          @include output {
            @include \2xl\:pe-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 14rem;
            }
          }
        }
      }

      @include it('2xl\:pt-56') {
        @include assert {
          @include output {
            @include \2xl\:pt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 14rem;
            }
          }
        }
      }

      @include it('2xl\:pr-56') {
        @include assert {
          @include output {
            @include \2xl\:pr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 14rem;
            }
          }
        }
      }

      @include it('2xl\:pb-56') {
        @include assert {
          @include output {
            @include \2xl\:pb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 14rem;
            }
          }
        }
      }

      @include it('2xl\:pl-56') {
        @include assert {
          @include output {
            @include \2xl\:pl-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 14rem;
            }
          }
        }
      }

      @include it('2xl\:p-60') {
        @include assert {
          @include output {
            @include \2xl\:p-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 15rem;
            }
          }
        }
      }

      @include it('2xl\:px-60') {
        @include assert {
          @include output {
            @include \2xl\:px-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 15rem;
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('2xl\:py-60') {
        @include assert {
          @include output {
            @include \2xl\:py-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 15rem;
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('2xl\:ps-60') {
        @include assert {
          @include output {
            @include \2xl\:ps-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 15rem;
            }
          }
        }
      }

      @include it('2xl\:pe-60') {
        @include assert {
          @include output {
            @include \2xl\:pe-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 15rem;
            }
          }
        }
      }

      @include it('2xl\:pt-60') {
        @include assert {
          @include output {
            @include \2xl\:pt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 15rem;
            }
          }
        }
      }

      @include it('2xl\:pr-60') {
        @include assert {
          @include output {
            @include \2xl\:pr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 15rem;
            }
          }
        }
      }

      @include it('2xl\:pb-60') {
        @include assert {
          @include output {
            @include \2xl\:pb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 15rem;
            }
          }
        }
      }

      @include it('2xl\:pl-60') {
        @include assert {
          @include output {
            @include \2xl\:pl-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 15rem;
            }
          }
        }
      }

      @include it('2xl\:p-64') {
        @include assert {
          @include output {
            @include \2xl\:p-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 16rem;
            }
          }
        }
      }

      @include it('2xl\:px-64') {
        @include assert {
          @include output {
            @include \2xl\:px-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 16rem;
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('2xl\:py-64') {
        @include assert {
          @include output {
            @include \2xl\:py-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 16rem;
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('2xl\:ps-64') {
        @include assert {
          @include output {
            @include \2xl\:ps-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 16rem;
            }
          }
        }
      }

      @include it('2xl\:pe-64') {
        @include assert {
          @include output {
            @include \2xl\:pe-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 16rem;
            }
          }
        }
      }

      @include it('2xl\:pt-64') {
        @include assert {
          @include output {
            @include \2xl\:pt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 16rem;
            }
          }
        }
      }

      @include it('2xl\:pr-64') {
        @include assert {
          @include output {
            @include \2xl\:pr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 16rem;
            }
          }
        }
      }

      @include it('2xl\:pb-64') {
        @include assert {
          @include output {
            @include \2xl\:pb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 16rem;
            }
          }
        }
      }

      @include it('2xl\:pl-64') {
        @include assert {
          @include output {
            @include \2xl\:pl-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 16rem;
            }
          }
        }
      }

      @include it('2xl\:p-72') {
        @include assert {
          @include output {
            @include \2xl\:p-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 18rem;
            }
          }
        }
      }

      @include it('2xl\:px-72') {
        @include assert {
          @include output {
            @include \2xl\:px-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 18rem;
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('2xl\:py-72') {
        @include assert {
          @include output {
            @include \2xl\:py-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 18rem;
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('2xl\:ps-72') {
        @include assert {
          @include output {
            @include \2xl\:ps-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 18rem;
            }
          }
        }
      }

      @include it('2xl\:pe-72') {
        @include assert {
          @include output {
            @include \2xl\:pe-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 18rem;
            }
          }
        }
      }

      @include it('2xl\:pt-72') {
        @include assert {
          @include output {
            @include \2xl\:pt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 18rem;
            }
          }
        }
      }

      @include it('2xl\:pr-72') {
        @include assert {
          @include output {
            @include \2xl\:pr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 18rem;
            }
          }
        }
      }

      @include it('2xl\:pb-72') {
        @include assert {
          @include output {
            @include \2xl\:pb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 18rem;
            }
          }
        }
      }

      @include it('2xl\:pl-72') {
        @include assert {
          @include output {
            @include \2xl\:pl-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 18rem;
            }
          }
        }
      }

      @include it('2xl\:p-80') {
        @include assert {
          @include output {
            @include \2xl\:p-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 20rem;
            }
          }
        }
      }

      @include it('2xl\:px-80') {
        @include assert {
          @include output {
            @include \2xl\:px-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 20rem;
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('2xl\:py-80') {
        @include assert {
          @include output {
            @include \2xl\:py-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 20rem;
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('2xl\:ps-80') {
        @include assert {
          @include output {
            @include \2xl\:ps-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 20rem;
            }
          }
        }
      }

      @include it('2xl\:pe-80') {
        @include assert {
          @include output {
            @include \2xl\:pe-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 20rem;
            }
          }
        }
      }

      @include it('2xl\:pt-80') {
        @include assert {
          @include output {
            @include \2xl\:pt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 20rem;
            }
          }
        }
      }

      @include it('2xl\:pr-80') {
        @include assert {
          @include output {
            @include \2xl\:pr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 20rem;
            }
          }
        }
      }

      @include it('2xl\:pb-80') {
        @include assert {
          @include output {
            @include \2xl\:pb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 20rem;
            }
          }
        }
      }

      @include it('2xl\:pl-80') {
        @include assert {
          @include output {
            @include \2xl\:pl-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 20rem;
            }
          }
        }
      }

      @include it('2xl\:p-96') {
        @include assert {
          @include output {
            @include \2xl\:p-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 24rem;
            }
          }
        }
      }

      @include it('2xl\:px-96') {
        @include assert {
          @include output {
            @include \2xl\:px-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 24rem;
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('2xl\:py-96') {
        @include assert {
          @include output {
            @include \2xl\:py-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 24rem;
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('2xl\:ps-96') {
        @include assert {
          @include output {
            @include \2xl\:ps-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 24rem;
            }
          }
        }
      }

      @include it('2xl\:pe-96') {
        @include assert {
          @include output {
            @include \2xl\:pe-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 24rem;
            }
          }
        }
      }

      @include it('2xl\:pt-96') {
        @include assert {
          @include output {
            @include \2xl\:pt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 24rem;
            }
          }
        }
      }

      @include it('2xl\:pr-96') {
        @include assert {
          @include output {
            @include \2xl\:pr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 24rem;
            }
          }
        }
      }

      @include it('2xl\:pb-96') {
        @include assert {
          @include output {
            @include \2xl\:pb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 24rem;
            }
          }
        }
      }

      @include it('2xl\:pl-96') {
        @include assert {
          @include output {
            @include \2xl\:pl-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 24rem;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('p-(5px)') {
        @include assert {
          @include output {
            @include p-(5px);
            @include reset;
          }

          @include expect {
            padding: 5px;
          }
        }
      }

      @include it('px-(5px)') {
        @include assert {
          @include output {
            @include px-(5px);
            @include reset;
          }

          @include expect {
            padding-left: 5px;
            padding-right: 5px;
          }
        }
      }

      @include it('py-(5px)') {
        @include assert {
          @include output {
            @include py-(5px);
            @include reset;
          }

          @include expect {
            padding-top: 5px;
            padding-bottom: 5px;
          }
        }
      }

      @include it('ps-(5px)') {
        @include assert {
          @include output {
            @include ps-(5px);
            @include reset;
          }

          @include expect {
            padding-inline-start: 5px;
          }
        }
      }

      @include it('pe-(5px)') {
        @include assert {
          @include output {
            @include pe-(5px);
            @include reset;
          }

          @include expect {
            padding-inline-end: 5px;
          }
        }
      }

      @include it('pt-(5px)') {
        @include assert {
          @include output {
            @include pt-(5px);
            @include reset;
          }

          @include expect {
            padding-top: 5px;
          }
        }
      }

      @include it('pr-(5px)') {
        @include assert {
          @include output {
            @include pr-(5px);
            @include reset;
          }

          @include expect {
            padding-right: 5px;
          }
        }
      }

      @include it('pb-(5px)') {
        @include assert {
          @include output {
            @include pb-(5px);
            @include reset;
          }

          @include expect {
            padding-bottom: 5px;
          }
        }
      }

      @include it('pl-(5px)') {
        @include assert {
          @include output {
            @include pl-(5px);
            @include reset;
          }

          @include expect {
            padding-left: 5px;
          }
        }
      }

      @include it('sm\:p-(5px)') {
        @include assert {
          @include output {
            @include sm\:p-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding: 5px;
            }
          }
        }
      }

      @include it('sm\:px-(5px)') {
        @include assert {
          @include output {
            @include sm\:px-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 5px;
              padding-right: 5px;
            }
          }
        }
      }

      @include it('sm\:py-(5px)') {
        @include assert {
          @include output {
            @include sm\:py-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 5px;
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('sm\:ps-(5px)') {
        @include assert {
          @include output {
            @include sm\:ps-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-start: 5px;
            }
          }
        }
      }

      @include it('sm\:pe-(5px)') {
        @include assert {
          @include output {
            @include sm\:pe-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-inline-end: 5px;
            }
          }
        }
      }

      @include it('sm\:pt-(5px)') {
        @include assert {
          @include output {
            @include sm\:pt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-top: 5px;
            }
          }
        }
      }

      @include it('sm\:pr-(5px)') {
        @include assert {
          @include output {
            @include sm\:pr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-right: 5px;
            }
          }
        }
      }

      @include it('sm\:pb-(5px)') {
        @include assert {
          @include output {
            @include sm\:pb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('sm\:pl-(5px)') {
        @include assert {
          @include output {
            @include sm\:pl-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              padding-left: 5px;
            }
          }
        }
      }

      @include it('md\:p-(5px)') {
        @include assert {
          @include output {
            @include md\:p-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding: 5px;
            }
          }
        }
      }

      @include it('md\:px-(5px)') {
        @include assert {
          @include output {
            @include md\:px-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 5px;
              padding-right: 5px;
            }
          }
        }
      }

      @include it('md\:py-(5px)') {
        @include assert {
          @include output {
            @include md\:py-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 5px;
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('md\:ps-(5px)') {
        @include assert {
          @include output {
            @include md\:ps-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-start: 5px;
            }
          }
        }
      }

      @include it('md\:pe-(5px)') {
        @include assert {
          @include output {
            @include md\:pe-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-inline-end: 5px;
            }
          }
        }
      }

      @include it('md\:pt-(5px)') {
        @include assert {
          @include output {
            @include md\:pt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-top: 5px;
            }
          }
        }
      }

      @include it('md\:pr-(5px)') {
        @include assert {
          @include output {
            @include md\:pr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-right: 5px;
            }
          }
        }
      }

      @include it('md\:pb-(5px)') {
        @include assert {
          @include output {
            @include md\:pb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('md\:pl-(5px)') {
        @include assert {
          @include output {
            @include md\:pl-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              padding-left: 5px;
            }
          }
        }
      }

      @include it('lg\:p-(5px)') {
        @include assert {
          @include output {
            @include lg\:p-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding: 5px;
            }
          }
        }
      }

      @include it('lg\:px-(5px)') {
        @include assert {
          @include output {
            @include lg\:px-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 5px;
              padding-right: 5px;
            }
          }
        }
      }

      @include it('lg\:py-(5px)') {
        @include assert {
          @include output {
            @include lg\:py-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 5px;
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('lg\:ps-(5px)') {
        @include assert {
          @include output {
            @include lg\:ps-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-start: 5px;
            }
          }
        }
      }

      @include it('lg\:pe-(5px)') {
        @include assert {
          @include output {
            @include lg\:pe-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-inline-end: 5px;
            }
          }
        }
      }

      @include it('lg\:pt-(5px)') {
        @include assert {
          @include output {
            @include lg\:pt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-top: 5px;
            }
          }
        }
      }

      @include it('lg\:pr-(5px)') {
        @include assert {
          @include output {
            @include lg\:pr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-right: 5px;
            }
          }
        }
      }

      @include it('lg\:pb-(5px)') {
        @include assert {
          @include output {
            @include lg\:pb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('lg\:pl-(5px)') {
        @include assert {
          @include output {
            @include lg\:pl-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              padding-left: 5px;
            }
          }
        }
      }

      @include it('xl\:p-(5px)') {
        @include assert {
          @include output {
            @include xl\:p-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding: 5px;
            }
          }
        }
      }

      @include it('xl\:px-(5px)') {
        @include assert {
          @include output {
            @include xl\:px-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 5px;
              padding-right: 5px;
            }
          }
        }
      }

      @include it('xl\:py-(5px)') {
        @include assert {
          @include output {
            @include xl\:py-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 5px;
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('xl\:ps-(5px)') {
        @include assert {
          @include output {
            @include xl\:ps-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-start: 5px;
            }
          }
        }
      }

      @include it('xl\:pe-(5px)') {
        @include assert {
          @include output {
            @include xl\:pe-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-inline-end: 5px;
            }
          }
        }
      }

      @include it('xl\:pt-(5px)') {
        @include assert {
          @include output {
            @include xl\:pt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-top: 5px;
            }
          }
        }
      }

      @include it('xl\:pr-(5px)') {
        @include assert {
          @include output {
            @include xl\:pr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-right: 5px;
            }
          }
        }
      }

      @include it('xl\:pb-(5px)') {
        @include assert {
          @include output {
            @include xl\:pb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('xl\:pl-(5px)') {
        @include assert {
          @include output {
            @include xl\:pl-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              padding-left: 5px;
            }
          }
        }
      }

      @include it('2xl\:p-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:p-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding: 5px;
            }
          }
        }
      }

      @include it('2xl\:px-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:px-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 5px;
              padding-right: 5px;
            }
          }
        }
      }

      @include it('2xl\:py-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:py-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 5px;
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('2xl\:ps-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:ps-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-start: 5px;
            }
          }
        }
      }

      @include it('2xl\:pe-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:pe-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-inline-end: 5px;
            }
          }
        }
      }

      @include it('2xl\:pt-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:pt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-top: 5px;
            }
          }
        }
      }

      @include it('2xl\:pr-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:pr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-right: 5px;
            }
          }
        }
      }

      @include it('2xl\:pb-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:pb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-bottom: 5px;
            }
          }
        }
      }

      @include it('2xl\:pl-(5px)') {
        @include assert {
          @include output {
            @include \2xl\:pl-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              padding-left: 5px;
            }
          }
        }
      }
    }
  }
}
