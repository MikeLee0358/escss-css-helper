@import '../_classic_only';

@include describe('7.Borders') {
  @include describe('Border Radius') {
    @include describe('Basic') {
      @include it('rounded-none') {
        @include assert {
          @include output {
            @include rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0px;
          }
        }
      }

      @include it('rounded-sm') {
        @include assert {
          @include output {
            @include rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0.125rem;
          }
        }
      }

      @include it('rounded') {
        @include assert {
          @include output {
            @include rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-md') {
        @include assert {
          @include output {
            @include rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-lg') {
        @include assert {
          @include output {
            @include rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-xl') {
        @include assert {
          @include output {
            @include rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-2xl') {
        @include assert {
          @include output {
            @include rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 1rem;
          }
        }
      }

      @include it('rounded-3xl') {
        @include assert {
          @include output {
            @include rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-full') {
        @include assert {
          @include output {
            @include rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 9999px;
          }
        }
      }

      @include it('rounded-s-none') {
        @include assert {
          @include output {
            @include rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0px;
            border-end-start-radius: 0px;
          }
        }
      }

      @include it('rounded-s-sm') {
        @include assert {
          @include output {
            @include rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.125rem;
            border-end-start-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-s') {
        @include assert {
          @include output {
            @include rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.25rem;
            border-end-start-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-s-md') {
        @include assert {
          @include output {
            @include rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.375rem;
            border-end-start-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-s-lg') {
        @include assert {
          @include output {
            @include rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.5rem;
            border-end-start-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-s-xl') {
        @include assert {
          @include output {
            @include rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.75rem;
            border-end-start-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-s-2xl') {
        @include assert {
          @include output {
            @include rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 1rem;
            border-end-start-radius: 1rem;
          }
        }
      }

      @include it('rounded-s-3xl') {
        @include assert {
          @include output {
            @include rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 1.5rem;
            border-end-start-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-s-full') {
        @include assert {
          @include output {
            @include rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 9999px;
            border-end-start-radius: 9999px;
          }
        }
      }

      @include it('rounded-e-none') {
        @include assert {
          @include output {
            @include rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0px;
            border-end-end-radius: 0px;
          }
        }
      }

      @include it('rounded-e-sm') {
        @include assert {
          @include output {
            @include rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.125rem;
            border-end-end-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-e') {
        @include assert {
          @include output {
            @include rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.25rem;
            border-end-end-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-e-md') {
        @include assert {
          @include output {
            @include rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.375rem;
            border-end-end-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-e-lg') {
        @include assert {
          @include output {
            @include rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.5rem;
            border-end-end-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-e-xl') {
        @include assert {
          @include output {
            @include rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.75rem;
            border-end-end-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-e-2xl') {
        @include assert {
          @include output {
            @include rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 1rem;
            border-end-end-radius: 1rem;
          }
        }
      }

      @include it('rounded-e-3xl') {
        @include assert {
          @include output {
            @include rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 1.5rem;
            border-end-end-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-e-full') {
        @include assert {
          @include output {
            @include rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 9999px;
            border-end-end-radius: 9999px;
          }
        }
      }

      @include it('rounded-t-none') {
        @include assert {
          @include output {
            @include rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0px;
            border-top-right-radius: 0px;
          }
        }
      }

      @include it('rounded-t-sm') {
        @include assert {
          @include output {
            @include rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.125rem;
            border-top-right-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-t') {
        @include assert {
          @include output {
            @include rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.25rem;
            border-top-right-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-t-md') {
        @include assert {
          @include output {
            @include rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.375rem;
            border-top-right-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-t-lg') {
        @include assert {
          @include output {
            @include rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.5rem;
            border-top-right-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-t-xl') {
        @include assert {
          @include output {
            @include rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.75rem;
            border-top-right-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-t-2xl') {
        @include assert {
          @include output {
            @include rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1rem;
            border-top-right-radius: 1rem;
          }
        }
      }

      @include it('rounded-t-3xl') {
        @include assert {
          @include output {
            @include rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1.5rem;
            border-top-right-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-t-full') {
        @include assert {
          @include output {
            @include rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 9999px;
            border-top-right-radius: 9999px;
          }
        }
      }

      @include it('rounded-r-none') {
        @include assert {
          @include output {
            @include rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
          }
        }
      }

      @include it('rounded-r-sm') {
        @include assert {
          @include output {
            @include rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.125rem;
            border-bottom-right-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-r') {
        @include assert {
          @include output {
            @include rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.25rem;
            border-bottom-right-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-r-md') {
        @include assert {
          @include output {
            @include rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-r-lg') {
        @include assert {
          @include output {
            @include rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-r-xl') {
        @include assert {
          @include output {
            @include rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.75rem;
            border-bottom-right-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-r-2xl') {
        @include assert {
          @include output {
            @include rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 1rem;
            border-bottom-right-radius: 1rem;
          }
        }
      }

      @include it('rounded-r-3xl') {
        @include assert {
          @include output {
            @include rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 1.5rem;
            border-bottom-right-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-r-full') {
        @include assert {
          @include output {
            @include rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 9999px;
            border-bottom-right-radius: 9999px;
          }
        }
      }

      @include it('rounded-b-none') {
        @include assert {
          @include output {
            @include rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0px;
            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it('rounded-b-sm') {
        @include assert {
          @include output {
            @include rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.125rem;
            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-b') {
        @include assert {
          @include output {
            @include rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.25rem;
            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-b-md') {
        @include assert {
          @include output {
            @include rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-b-lg') {
        @include assert {
          @include output {
            @include rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-b-xl') {
        @include assert {
          @include output {
            @include rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.75rem;
            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-b-2xl') {
        @include assert {
          @include output {
            @include rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 1rem;
            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it('rounded-b-3xl') {
        @include assert {
          @include output {
            @include rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 1.5rem;
            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-b-full') {
        @include assert {
          @include output {
            @include rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 9999px;
            border-bottom-left-radius: 9999px;
          }
        }
      }

      @include it('rounded-l-none') {
        @include assert {
          @include output {
            @include rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0px;
            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it('rounded-l-sm') {
        @include assert {
          @include output {
            @include rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.125rem;
            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-l') {
        @include assert {
          @include output {
            @include rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.25rem;
            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-l-md') {
        @include assert {
          @include output {
            @include rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-l-lg') {
        @include assert {
          @include output {
            @include rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-l-xl') {
        @include assert {
          @include output {
            @include rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.75rem;
            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-l-2xl') {
        @include assert {
          @include output {
            @include rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1rem;
            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it('rounded-l-3xl') {
        @include assert {
          @include output {
            @include rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1.5rem;
            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-l-full') {
        @include assert {
          @include output {
            @include rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 9999px;
            border-bottom-left-radius: 9999px;
          }
        }
      }

      @include it('rounded-ss-none') {
        @include assert {
          @include output {
            @include rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0px;
          }
        }
      }

      @include it('rounded-ss-sm') {
        @include assert {
          @include output {
            @include rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-ss') {
        @include assert {
          @include output {
            @include rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-ss-md') {
        @include assert {
          @include output {
            @include rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-ss-lg') {
        @include assert {
          @include output {
            @include rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-ss-xl') {
        @include assert {
          @include output {
            @include rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-ss-2xl') {
        @include assert {
          @include output {
            @include rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 1rem;
          }
        }
      }

      @include it('rounded-ss-3xl') {
        @include assert {
          @include output {
            @include rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-ss-full') {
        @include assert {
          @include output {
            @include rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 9999px;
          }
        }
      }

      @include it('rounded-se-none') {
        @include assert {
          @include output {
            @include rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0px;
          }
        }
      }

      @include it('rounded-se-sm') {
        @include assert {
          @include output {
            @include rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-se') {
        @include assert {
          @include output {
            @include rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-se-md') {
        @include assert {
          @include output {
            @include rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-se-lg') {
        @include assert {
          @include output {
            @include rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-se-xl') {
        @include assert {
          @include output {
            @include rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-se-2xl') {
        @include assert {
          @include output {
            @include rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 1rem;
          }
        }
      }

      @include it('rounded-se-3xl') {
        @include assert {
          @include output {
            @include rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-se-full') {
        @include assert {
          @include output {
            @include rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 9999px;
          }
        }
      }

      @include it('rounded-ee-none') {
        @include assert {
          @include output {
            @include rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0px;
          }
        }
      }

      @include it('rounded-ee-sm') {
        @include assert {
          @include output {
            @include rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-ee') {
        @include assert {
          @include output {
            @include rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-ee-md') {
        @include assert {
          @include output {
            @include rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-ee-lg') {
        @include assert {
          @include output {
            @include rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-ee-xl') {
        @include assert {
          @include output {
            @include rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-ee-2xl') {
        @include assert {
          @include output {
            @include rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 1rem;
          }
        }
      }

      @include it('rounded-ee-3xl') {
        @include assert {
          @include output {
            @include rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-ee-full') {
        @include assert {
          @include output {
            @include rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 9999px;
          }
        }
      }

      @include it('rounded-es-none') {
        @include assert {
          @include output {
            @include rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0px;
          }
        }
      }

      @include it('rounded-es-sm') {
        @include assert {
          @include output {
            @include rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-es') {
        @include assert {
          @include output {
            @include rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-es-md') {
        @include assert {
          @include output {
            @include rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-es-lg') {
        @include assert {
          @include output {
            @include rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-es-xl') {
        @include assert {
          @include output {
            @include rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-es-2xl') {
        @include assert {
          @include output {
            @include rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 1rem;
          }
        }
      }

      @include it('rounded-es-3xl') {
        @include assert {
          @include output {
            @include rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-es-full') {
        @include assert {
          @include output {
            @include rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 9999px;
          }
        }
      }

      @include it('rounded-tl-none') {
        @include assert {
          @include output {
            @include rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0px;
          }
        }
      }

      @include it('rounded-tl-sm') {
        @include assert {
          @include output {
            @include rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-tl') {
        @include assert {
          @include output {
            @include rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-tl-md') {
        @include assert {
          @include output {
            @include rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-tl-lg') {
        @include assert {
          @include output {
            @include rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-tl-xl') {
        @include assert {
          @include output {
            @include rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-tl-2xl') {
        @include assert {
          @include output {
            @include rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1rem;
          }
        }
      }

      @include it('rounded-tl-3xl') {
        @include assert {
          @include output {
            @include rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-tl-full') {
        @include assert {
          @include output {
            @include rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 9999px;
          }
        }
      }

      @include it('rounded-tr-none') {
        @include assert {
          @include output {
            @include rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0px;
          }
        }
      }

      @include it('rounded-tr-sm') {
        @include assert {
          @include output {
            @include rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-tr') {
        @include assert {
          @include output {
            @include rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-tr-md') {
        @include assert {
          @include output {
            @include rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-tr-lg') {
        @include assert {
          @include output {
            @include rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-tr-xl') {
        @include assert {
          @include output {
            @include rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-tr-2xl') {
        @include assert {
          @include output {
            @include rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 1rem;
          }
        }
      }

      @include it('rounded-tr-3xl') {
        @include assert {
          @include output {
            @include rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-tr-full') {
        @include assert {
          @include output {
            @include rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 9999px;
          }
        }
      }

      @include it('rounded-br-none') {
        @include assert {
          @include output {
            @include rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0px;
          }
        }
      }

      @include it('rounded-br-sm') {
        @include assert {
          @include output {
            @include rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-br') {
        @include assert {
          @include output {
            @include rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-br-md') {
        @include assert {
          @include output {
            @include rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-br-lg') {
        @include assert {
          @include output {
            @include rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-br-xl') {
        @include assert {
          @include output {
            @include rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-br-2xl') {
        @include assert {
          @include output {
            @include rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 1rem;
          }
        }
      }

      @include it('rounded-br-3xl') {
        @include assert {
          @include output {
            @include rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-br-full') {
        @include assert {
          @include output {
            @include rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 9999px;
          }
        }
      }

      @include it('rounded-bl-none') {
        @include assert {
          @include output {
            @include rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it('rounded-bl-sm') {
        @include assert {
          @include output {
            @include rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it('rounded-bl') {
        @include assert {
          @include output {
            @include rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it('rounded-bl-md') {
        @include assert {
          @include output {
            @include rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it('rounded-bl-lg') {
        @include assert {
          @include output {
            @include rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it('rounded-bl-xl') {
        @include assert {
          @include output {
            @include rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it('rounded-bl-2xl') {
        @include assert {
          @include output {
            @include rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it('rounded-bl-3xl') {
        @include assert {
          @include output {
            @include rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it('rounded-bl-full') {
        @include assert {
          @include output {
            @include rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 9999px;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:rounded-none') {
        @include assert {
          @include output {
            @include sm\:rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded') {
        @include assert {
          @include output {
            @include sm\:rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-md') {
        @include assert {
          @include output {
            @include sm\:rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-full') {
        @include assert {
          @include output {
            @include sm\:rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-s-none') {
        @include assert {
          @include output {
            @include sm\:rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0px;
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-s-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.125rem;
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s') {
        @include assert {
          @include output {
            @include sm\:rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.25rem;
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-md') {
        @include assert {
          @include output {
            @include sm\:rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.375rem;
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.5rem;
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.75rem;
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 1rem;
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 1.5rem;
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-s-full') {
        @include assert {
          @include output {
            @include sm\:rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 9999px;
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-e-none') {
        @include assert {
          @include output {
            @include sm\:rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0px;
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-e-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.125rem;
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e') {
        @include assert {
          @include output {
            @include sm\:rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.25rem;
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-md') {
        @include assert {
          @include output {
            @include sm\:rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.375rem;
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.5rem;
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.75rem;
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 1rem;
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 1.5rem;
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-e-full') {
        @include assert {
          @include output {
            @include sm\:rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 9999px;
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-t-none') {
        @include assert {
          @include output {
            @include sm\:rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0px;
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-t-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.125rem;
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t') {
        @include assert {
          @include output {
            @include sm\:rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-md') {
        @include assert {
          @include output {
            @include sm\:rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.375rem;
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.5rem;
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.75rem;
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1rem;
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1.5rem;
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-t-full') {
        @include assert {
          @include output {
            @include sm\:rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 9999px;
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-r-none') {
        @include assert {
          @include output {
            @include sm\:rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0px;
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-r-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.125rem;
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r') {
        @include assert {
          @include output {
            @include sm\:rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-md') {
        @include assert {
          @include output {
            @include sm\:rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.375rem;
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.5rem;
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.75rem;
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 1.5rem;
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-r-full') {
        @include assert {
          @include output {
            @include sm\:rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 9999px;
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-b-none') {
        @include assert {
          @include output {
            @include sm\:rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-b-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b') {
        @include assert {
          @include output {
            @include sm\:rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-md') {
        @include assert {
          @include output {
            @include sm\:rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-b-full') {
        @include assert {
          @include output {
            @include sm\:rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-l-none') {
        @include assert {
          @include output {
            @include sm\:rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-l-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l') {
        @include assert {
          @include output {
            @include sm\:rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-md') {
        @include assert {
          @include output {
            @include sm\:rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-l-full') {
        @include assert {
          @include output {
            @include sm\:rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-none') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss') {
        @include assert {
          @include output {
            @include sm\:rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-md') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-full') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-se-none') {
        @include assert {
          @include output {
            @include sm\:rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-se-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se') {
        @include assert {
          @include output {
            @include sm\:rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-md') {
        @include assert {
          @include output {
            @include sm\:rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-se-full') {
        @include assert {
          @include output {
            @include sm\:rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-none') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee') {
        @include assert {
          @include output {
            @include sm\:rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-md') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-full') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-es-none') {
        @include assert {
          @include output {
            @include sm\:rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-es-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es') {
        @include assert {
          @include output {
            @include sm\:rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-md') {
        @include assert {
          @include output {
            @include sm\:rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-es-full') {
        @include assert {
          @include output {
            @include sm\:rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-none') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl') {
        @include assert {
          @include output {
            @include sm\:rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-md') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-full') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-none') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr') {
        @include assert {
          @include output {
            @include sm\:rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-md') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-full') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-br-none') {
        @include assert {
          @include output {
            @include sm\:rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-br-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br') {
        @include assert {
          @include output {
            @include sm\:rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-md') {
        @include assert {
          @include output {
            @include sm\:rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-br-full') {
        @include assert {
          @include output {
            @include sm\:rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-none') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-sm') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl') {
        @include assert {
          @include output {
            @include sm\:rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-md') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-lg') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-xl') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-2xl') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-3xl') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-full') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-none') {
        @include assert {
          @include output {
            @include md\:rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-sm') {
        @include assert {
          @include output {
            @include md\:rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded') {
        @include assert {
          @include output {
            @include md\:rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-md') {
        @include assert {
          @include output {
            @include md\:rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-lg') {
        @include assert {
          @include output {
            @include md\:rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-xl') {
        @include assert {
          @include output {
            @include md\:rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-full') {
        @include assert {
          @include output {
            @include md\:rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-s-none') {
        @include assert {
          @include output {
            @include md\:rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0px;
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-s-sm') {
        @include assert {
          @include output {
            @include md\:rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.125rem;
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-s') {
        @include assert {
          @include output {
            @include md\:rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.25rem;
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-md') {
        @include assert {
          @include output {
            @include md\:rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.375rem;
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-lg') {
        @include assert {
          @include output {
            @include md\:rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.5rem;
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-xl') {
        @include assert {
          @include output {
            @include md\:rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.75rem;
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 1rem;
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 1.5rem;
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-s-full') {
        @include assert {
          @include output {
            @include md\:rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 9999px;
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-e-none') {
        @include assert {
          @include output {
            @include md\:rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0px;
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-e-sm') {
        @include assert {
          @include output {
            @include md\:rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.125rem;
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-e') {
        @include assert {
          @include output {
            @include md\:rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.25rem;
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-md') {
        @include assert {
          @include output {
            @include md\:rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.375rem;
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-lg') {
        @include assert {
          @include output {
            @include md\:rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.5rem;
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-xl') {
        @include assert {
          @include output {
            @include md\:rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.75rem;
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 1rem;
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 1.5rem;
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-e-full') {
        @include assert {
          @include output {
            @include md\:rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 9999px;
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-t-none') {
        @include assert {
          @include output {
            @include md\:rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0px;
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-t-sm') {
        @include assert {
          @include output {
            @include md\:rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.125rem;
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-t') {
        @include assert {
          @include output {
            @include md\:rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-md') {
        @include assert {
          @include output {
            @include md\:rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.375rem;
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-lg') {
        @include assert {
          @include output {
            @include md\:rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.5rem;
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-xl') {
        @include assert {
          @include output {
            @include md\:rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.75rem;
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1rem;
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1.5rem;
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-t-full') {
        @include assert {
          @include output {
            @include md\:rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 9999px;
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-r-none') {
        @include assert {
          @include output {
            @include md\:rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0px;
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-r-sm') {
        @include assert {
          @include output {
            @include md\:rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.125rem;
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-r') {
        @include assert {
          @include output {
            @include md\:rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-md') {
        @include assert {
          @include output {
            @include md\:rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.375rem;
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-lg') {
        @include assert {
          @include output {
            @include md\:rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.5rem;
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-xl') {
        @include assert {
          @include output {
            @include md\:rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.75rem;
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 1.5rem;
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-r-full') {
        @include assert {
          @include output {
            @include md\:rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 9999px;
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-b-none') {
        @include assert {
          @include output {
            @include md\:rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-b-sm') {
        @include assert {
          @include output {
            @include md\:rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-b') {
        @include assert {
          @include output {
            @include md\:rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-md') {
        @include assert {
          @include output {
            @include md\:rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-lg') {
        @include assert {
          @include output {
            @include md\:rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-xl') {
        @include assert {
          @include output {
            @include md\:rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-b-full') {
        @include assert {
          @include output {
            @include md\:rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-l-none') {
        @include assert {
          @include output {
            @include md\:rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-l-sm') {
        @include assert {
          @include output {
            @include md\:rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-l') {
        @include assert {
          @include output {
            @include md\:rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-md') {
        @include assert {
          @include output {
            @include md\:rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-lg') {
        @include assert {
          @include output {
            @include md\:rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-xl') {
        @include assert {
          @include output {
            @include md\:rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-l-full') {
        @include assert {
          @include output {
            @include md\:rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-ss-none') {
        @include assert {
          @include output {
            @include md\:rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-ss-sm') {
        @include assert {
          @include output {
            @include md\:rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss') {
        @include assert {
          @include output {
            @include md\:rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-md') {
        @include assert {
          @include output {
            @include md\:rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-lg') {
        @include assert {
          @include output {
            @include md\:rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-xl') {
        @include assert {
          @include output {
            @include md\:rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-ss-full') {
        @include assert {
          @include output {
            @include md\:rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-se-none') {
        @include assert {
          @include output {
            @include md\:rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-se-sm') {
        @include assert {
          @include output {
            @include md\:rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-se') {
        @include assert {
          @include output {
            @include md\:rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-md') {
        @include assert {
          @include output {
            @include md\:rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-lg') {
        @include assert {
          @include output {
            @include md\:rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-xl') {
        @include assert {
          @include output {
            @include md\:rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-se-full') {
        @include assert {
          @include output {
            @include md\:rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-ee-none') {
        @include assert {
          @include output {
            @include md\:rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-ee-sm') {
        @include assert {
          @include output {
            @include md\:rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee') {
        @include assert {
          @include output {
            @include md\:rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-md') {
        @include assert {
          @include output {
            @include md\:rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-lg') {
        @include assert {
          @include output {
            @include md\:rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-xl') {
        @include assert {
          @include output {
            @include md\:rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-ee-full') {
        @include assert {
          @include output {
            @include md\:rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-es-none') {
        @include assert {
          @include output {
            @include md\:rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-es-sm') {
        @include assert {
          @include output {
            @include md\:rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-es') {
        @include assert {
          @include output {
            @include md\:rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-md') {
        @include assert {
          @include output {
            @include md\:rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-lg') {
        @include assert {
          @include output {
            @include md\:rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-xl') {
        @include assert {
          @include output {
            @include md\:rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-es-full') {
        @include assert {
          @include output {
            @include md\:rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-tl-none') {
        @include assert {
          @include output {
            @include md\:rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-tl-sm') {
        @include assert {
          @include output {
            @include md\:rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl') {
        @include assert {
          @include output {
            @include md\:rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-md') {
        @include assert {
          @include output {
            @include md\:rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-lg') {
        @include assert {
          @include output {
            @include md\:rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-xl') {
        @include assert {
          @include output {
            @include md\:rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-tl-full') {
        @include assert {
          @include output {
            @include md\:rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-tr-none') {
        @include assert {
          @include output {
            @include md\:rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-tr-sm') {
        @include assert {
          @include output {
            @include md\:rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr') {
        @include assert {
          @include output {
            @include md\:rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-md') {
        @include assert {
          @include output {
            @include md\:rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-lg') {
        @include assert {
          @include output {
            @include md\:rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-xl') {
        @include assert {
          @include output {
            @include md\:rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-tr-full') {
        @include assert {
          @include output {
            @include md\:rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-br-none') {
        @include assert {
          @include output {
            @include md\:rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-br-sm') {
        @include assert {
          @include output {
            @include md\:rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-br') {
        @include assert {
          @include output {
            @include md\:rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-md') {
        @include assert {
          @include output {
            @include md\:rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-lg') {
        @include assert {
          @include output {
            @include md\:rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-xl') {
        @include assert {
          @include output {
            @include md\:rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-br-full') {
        @include assert {
          @include output {
            @include md\:rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('md\:rounded-bl-none') {
        @include assert {
          @include output {
            @include md\:rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('md\:rounded-bl-sm') {
        @include assert {
          @include output {
            @include md\:rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl') {
        @include assert {
          @include output {
            @include md\:rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-md') {
        @include assert {
          @include output {
            @include md\:rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-lg') {
        @include assert {
          @include output {
            @include md\:rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-xl') {
        @include assert {
          @include output {
            @include md\:rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-2xl') {
        @include assert {
          @include output {
            @include md\:rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-3xl') {
        @include assert {
          @include output {
            @include md\:rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('md\:rounded-bl-full') {
        @include assert {
          @include output {
            @include md\:rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-none') {
        @include assert {
          @include output {
            @include lg\:rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded') {
        @include assert {
          @include output {
            @include lg\:rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-md') {
        @include assert {
          @include output {
            @include lg\:rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-full') {
        @include assert {
          @include output {
            @include lg\:rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-s-none') {
        @include assert {
          @include output {
            @include lg\:rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0px;
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-s-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.125rem;
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s') {
        @include assert {
          @include output {
            @include lg\:rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.25rem;
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-md') {
        @include assert {
          @include output {
            @include lg\:rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.375rem;
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.5rem;
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.75rem;
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 1rem;
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 1.5rem;
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-s-full') {
        @include assert {
          @include output {
            @include lg\:rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 9999px;
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-e-none') {
        @include assert {
          @include output {
            @include lg\:rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0px;
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-e-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.125rem;
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e') {
        @include assert {
          @include output {
            @include lg\:rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.25rem;
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-md') {
        @include assert {
          @include output {
            @include lg\:rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.375rem;
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.5rem;
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.75rem;
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 1rem;
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 1.5rem;
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-e-full') {
        @include assert {
          @include output {
            @include lg\:rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 9999px;
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-t-none') {
        @include assert {
          @include output {
            @include lg\:rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0px;
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-t-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.125rem;
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t') {
        @include assert {
          @include output {
            @include lg\:rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-md') {
        @include assert {
          @include output {
            @include lg\:rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.375rem;
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.5rem;
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.75rem;
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1rem;
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1.5rem;
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-t-full') {
        @include assert {
          @include output {
            @include lg\:rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 9999px;
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-r-none') {
        @include assert {
          @include output {
            @include lg\:rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0px;
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-r-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.125rem;
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r') {
        @include assert {
          @include output {
            @include lg\:rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-md') {
        @include assert {
          @include output {
            @include lg\:rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.375rem;
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.5rem;
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.75rem;
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 1.5rem;
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-r-full') {
        @include assert {
          @include output {
            @include lg\:rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 9999px;
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-b-none') {
        @include assert {
          @include output {
            @include lg\:rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-b-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b') {
        @include assert {
          @include output {
            @include lg\:rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-md') {
        @include assert {
          @include output {
            @include lg\:rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-b-full') {
        @include assert {
          @include output {
            @include lg\:rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-l-none') {
        @include assert {
          @include output {
            @include lg\:rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-l-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l') {
        @include assert {
          @include output {
            @include lg\:rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-md') {
        @include assert {
          @include output {
            @include lg\:rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-l-full') {
        @include assert {
          @include output {
            @include lg\:rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-none') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss') {
        @include assert {
          @include output {
            @include lg\:rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-md') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-full') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-se-none') {
        @include assert {
          @include output {
            @include lg\:rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-se-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se') {
        @include assert {
          @include output {
            @include lg\:rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-md') {
        @include assert {
          @include output {
            @include lg\:rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-se-full') {
        @include assert {
          @include output {
            @include lg\:rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-none') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee') {
        @include assert {
          @include output {
            @include lg\:rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-md') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-full') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-es-none') {
        @include assert {
          @include output {
            @include lg\:rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-es-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es') {
        @include assert {
          @include output {
            @include lg\:rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-md') {
        @include assert {
          @include output {
            @include lg\:rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-es-full') {
        @include assert {
          @include output {
            @include lg\:rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-none') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl') {
        @include assert {
          @include output {
            @include lg\:rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-md') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-full') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-none') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr') {
        @include assert {
          @include output {
            @include lg\:rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-md') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-full') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-br-none') {
        @include assert {
          @include output {
            @include lg\:rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-br-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br') {
        @include assert {
          @include output {
            @include lg\:rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-md') {
        @include assert {
          @include output {
            @include lg\:rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-br-full') {
        @include assert {
          @include output {
            @include lg\:rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-none') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-sm') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl') {
        @include assert {
          @include output {
            @include lg\:rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-md') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-lg') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-xl') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-2xl') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-3xl') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-full') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-none') {
        @include assert {
          @include output {
            @include xl\:rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded') {
        @include assert {
          @include output {
            @include xl\:rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-md') {
        @include assert {
          @include output {
            @include xl\:rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-full') {
        @include assert {
          @include output {
            @include xl\:rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-s-none') {
        @include assert {
          @include output {
            @include xl\:rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0px;
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-s-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.125rem;
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s') {
        @include assert {
          @include output {
            @include xl\:rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.25rem;
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-md') {
        @include assert {
          @include output {
            @include xl\:rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.375rem;
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.5rem;
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.75rem;
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 1rem;
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 1.5rem;
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-s-full') {
        @include assert {
          @include output {
            @include xl\:rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 9999px;
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-e-none') {
        @include assert {
          @include output {
            @include xl\:rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0px;
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-e-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.125rem;
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e') {
        @include assert {
          @include output {
            @include xl\:rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.25rem;
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-md') {
        @include assert {
          @include output {
            @include xl\:rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.375rem;
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.5rem;
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.75rem;
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 1rem;
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 1.5rem;
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-e-full') {
        @include assert {
          @include output {
            @include xl\:rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 9999px;
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-t-none') {
        @include assert {
          @include output {
            @include xl\:rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0px;
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-t-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.125rem;
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t') {
        @include assert {
          @include output {
            @include xl\:rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-md') {
        @include assert {
          @include output {
            @include xl\:rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.375rem;
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.5rem;
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.75rem;
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1rem;
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1.5rem;
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-t-full') {
        @include assert {
          @include output {
            @include xl\:rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 9999px;
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-r-none') {
        @include assert {
          @include output {
            @include xl\:rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0px;
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-r-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.125rem;
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r') {
        @include assert {
          @include output {
            @include xl\:rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-md') {
        @include assert {
          @include output {
            @include xl\:rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.375rem;
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.5rem;
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.75rem;
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 1.5rem;
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-r-full') {
        @include assert {
          @include output {
            @include xl\:rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 9999px;
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-b-none') {
        @include assert {
          @include output {
            @include xl\:rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-b-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b') {
        @include assert {
          @include output {
            @include xl\:rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-md') {
        @include assert {
          @include output {
            @include xl\:rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-b-full') {
        @include assert {
          @include output {
            @include xl\:rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-l-none') {
        @include assert {
          @include output {
            @include xl\:rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-l-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l') {
        @include assert {
          @include output {
            @include xl\:rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-md') {
        @include assert {
          @include output {
            @include xl\:rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-l-full') {
        @include assert {
          @include output {
            @include xl\:rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-none') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss') {
        @include assert {
          @include output {
            @include xl\:rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-md') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-full') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-se-none') {
        @include assert {
          @include output {
            @include xl\:rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-se-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se') {
        @include assert {
          @include output {
            @include xl\:rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-md') {
        @include assert {
          @include output {
            @include xl\:rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-se-full') {
        @include assert {
          @include output {
            @include xl\:rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-none') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee') {
        @include assert {
          @include output {
            @include xl\:rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-md') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-full') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-es-none') {
        @include assert {
          @include output {
            @include xl\:rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-es-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es') {
        @include assert {
          @include output {
            @include xl\:rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-md') {
        @include assert {
          @include output {
            @include xl\:rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-es-full') {
        @include assert {
          @include output {
            @include xl\:rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-none') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl') {
        @include assert {
          @include output {
            @include xl\:rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-md') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-full') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-none') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr') {
        @include assert {
          @include output {
            @include xl\:rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-md') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-full') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-br-none') {
        @include assert {
          @include output {
            @include xl\:rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-br-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br') {
        @include assert {
          @include output {
            @include xl\:rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-md') {
        @include assert {
          @include output {
            @include xl\:rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-br-full') {
        @include assert {
          @include output {
            @include xl\:rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-none') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-sm') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl') {
        @include assert {
          @include output {
            @include xl\:rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-md') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-lg') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-xl') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-2xl') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-3xl') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-full') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded') {
        @include assert {
          @include output {
            @include \2xl\:rounded;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0px;
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.125rem;
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.25rem;
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.375rem;
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.5rem;
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.75rem;
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 1rem;
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 1.5rem;
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 9999px;
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0px;
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.125rem;
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.25rem;
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.375rem;
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.5rem;
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.75rem;
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 1rem;
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 1.5rem;
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 9999px;
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0px;
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.125rem;
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.375rem;
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.5rem;
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.75rem;
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1rem;
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1.5rem;
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 9999px;
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0px;
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.125rem;
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.375rem;
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.5rem;
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.75rem;
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 1.5rem;
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 9999px;
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0px;
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.125rem;
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.25rem;
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.375rem;
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.5rem;
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.75rem;
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1.5rem;
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 9999px;
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 9999px;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-none') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0px;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-sm') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-sm;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-md') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-md;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-lg') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-lg;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-2xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-2xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 1rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-3xl') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-3xl;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-full') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-full;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 9999px;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('rounded-(12px)') {
        @include assert {
          @include output {
            @include rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-radius: 12px;
          }
        }
      }

      @include it('rounded-s-(12px)') {
        @include assert {
          @include output {
            @include rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 12px;
            border-end-start-radius: 12px;
          }
        }
      }

      @include it('rounded-e-(12px)') {
        @include assert {
          @include output {
            @include rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 12px;
            border-end-end-radius: 12px;
          }
        }
      }

      @include it('rounded-t-(12px)') {
        @include assert {
          @include output {
            @include rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
          }
        }
      }

      @include it('rounded-r-(12px)') {
        @include assert {
          @include output {
            @include rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 12px;
            border-bottom-right-radius: 12px;
          }
        }
      }

      @include it('rounded-b-(12px)') {
        @include assert {
          @include output {
            @include rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 12px;
            border-bottom-left-radius: 12px;
          }
        }
      }

      @include it('rounded-l-(12px)') {
        @include assert {
          @include output {
            @include rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 12px;
            border-bottom-left-radius: 12px;
          }
        }
      }

      @include it('rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-start-radius: 12px;
          }
        }
      }

      @include it('rounded-se-(12px)') {
        @include assert {
          @include output {
            @include rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-start-end-radius: 12px;
          }
        }
      }

      @include it('rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-end-radius: 12px;
          }
        }
      }

      @include it('rounded-es-(12px)') {
        @include assert {
          @include output {
            @include rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-end-start-radius: 12px;
          }
        }
      }

      @include it('rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-left-radius: 12px;
          }
        }
      }

      @include it('rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-top-right-radius: 12px;
          }
        }
      }

      @include it('rounded-br-(12px)') {
        @include assert {
          @include output {
            @include rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-right-radius: 12px;
          }
        }
      }

      @include it('rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            border-bottom-left-radius: 12px;
          }
        }
      }

      @include it('sm\:rounded-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-s-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 12px;
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-e-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 12px;
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-t-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 12px;
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-r-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 12px;
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-b-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-l-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-start-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-se-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-start-end-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-es-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-left-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-br-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('sm\:rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include sm\:rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-s-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 12px;
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-e-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 12px;
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-t-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 12px;
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-r-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 12px;
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-b-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-l-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-start-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-se-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-start-end-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-es-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-left-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-br-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('md\:rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include md\:rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-s-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 12px;
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-e-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 12px;
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-t-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 12px;
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-r-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 12px;
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-b-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-l-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-start-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-se-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-start-end-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-es-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-left-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-br-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('lg\:rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include lg\:rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-s-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 12px;
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-e-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 12px;
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-t-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 12px;
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-r-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 12px;
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-b-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-l-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-start-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-se-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-start-end-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-es-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-left-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-br-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('xl\:rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include xl\:rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-s-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-s-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 12px;
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-e-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-e-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 12px;
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-t-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-t-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 12px;
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-r-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-r-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 12px;
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-b-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-b-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-l-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-l-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 12px;
              border-bottom-left-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ss-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ss-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-start-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-se-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-se-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-start-end-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-ee-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-ee-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-end-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-es-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-es-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-end-start-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tl-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-left-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-tr-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-tr-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-top-right-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-br-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-br-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-right-radius: 12px;
            }
          }
        }
      }

      @include it('2xl\:rounded-bl-(12px)') {
        @include assert {
          @include output {
            @include \2xl\:rounded-bl-(12px);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              border-bottom-left-radius: 12px;
            }
          }
        }
      }
    }
  }
}
