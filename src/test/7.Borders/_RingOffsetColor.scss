@import '../_classic_only';

@include describe('7.Borders') {
  @include describe('Ring Offset Color') {
    @include describe('Basic') {
      @include it('ring-offset-inherit') {
        @include assert {
          @include output {
            @include ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 inherit,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-current') {
        @include assert {
          @include output {
            @include ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 currentColor,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-transparent') {
        @include assert {
          @include output {
            @include ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 transparent,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-100') {
        @include assert {
          @include output {
            @include ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f1f5f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-200') {
        @include assert {
          @include output {
            @include ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e2e8f0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-300') {
        @include assert {
          @include output {
            @include ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #cbd5e1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-400') {
        @include assert {
          @include output {
            @include ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #94a3b8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-500') {
        @include assert {
          @include output {
            @include ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #64748b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-600') {
        @include assert {
          @include output {
            @include ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #475569,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-700') {
        @include assert {
          @include output {
            @include ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #334155,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-800') {
        @include assert {
          @include output {
            @include ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e293b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-900') {
        @include assert {
          @include output {
            @include ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0f172a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-slate-950') {
        @include assert {
          @include output {
            @include ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #020617,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-50') {
        @include assert {
          @include output {
            @include ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f9fafb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-100') {
        @include assert {
          @include output {
            @include ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f3f4f6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-200') {
        @include assert {
          @include output {
            @include ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e5e7eb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-300') {
        @include assert {
          @include output {
            @include ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d1d5db,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-400') {
        @include assert {
          @include output {
            @include ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9ca3af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-500') {
        @include assert {
          @include output {
            @include ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6b7280,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-600') {
        @include assert {
          @include output {
            @include ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4b5563,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-700') {
        @include assert {
          @include output {
            @include ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #374151,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-800') {
        @include assert {
          @include output {
            @include ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1f2937,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-900') {
        @include assert {
          @include output {
            @include ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #111827,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-gray-950') {
        @include assert {
          @include output {
            @include ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #030712,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafafa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f4f4f5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e4e4e7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d4d4d8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a1a1aa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #71717a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #52525b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3f3f46,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #27272a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #18181b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #09090b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafafa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5f5f5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e5e5e5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d4d4d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a3a3a3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #737373,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #525252,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #404040,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #262626,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #171717,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0a0a0a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-50') {
        @include assert {
          @include output {
            @include ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafaf9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-100') {
        @include assert {
          @include output {
            @include ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5f5f4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-200') {
        @include assert {
          @include output {
            @include ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e7e5e4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-300') {
        @include assert {
          @include output {
            @include ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d6d3d1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-400') {
        @include assert {
          @include output {
            @include ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a8a29e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-500') {
        @include assert {
          @include output {
            @include ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #78716c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-600') {
        @include assert {
          @include output {
            @include ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #57534e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-700') {
        @include assert {
          @include output {
            @include ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #44403c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-800') {
        @include assert {
          @include output {
            @include ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #292524,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-900') {
        @include assert {
          @include output {
            @include ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1c1917,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-stone-950') {
        @include assert {
          @include output {
            @include ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0c0a09,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-50') {
        @include assert {
          @include output {
            @include ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef2f2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-100') {
        @include assert {
          @include output {
            @include ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fee2e2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-200') {
        @include assert {
          @include output {
            @include ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fecaca,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-300') {
        @include assert {
          @include output {
            @include ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fca5a5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-400') {
        @include assert {
          @include output {
            @include ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f87171,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-500') {
        @include assert {
          @include output {
            @include ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ef4444,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-600') {
        @include assert {
          @include output {
            @include ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dc2626,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-700') {
        @include assert {
          @include output {
            @include ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #b91c1c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-800') {
        @include assert {
          @include output {
            @include ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #991b1b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-900') {
        @include assert {
          @include output {
            @include ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7f1d1d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-red-950') {
        @include assert {
          @include output {
            @include ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #450a0a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-50') {
        @include assert {
          @include output {
            @include ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff7ed,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-100') {
        @include assert {
          @include output {
            @include ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ffedd5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-200') {
        @include assert {
          @include output {
            @include ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fed7aa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-300') {
        @include assert {
          @include output {
            @include ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdba74,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-400') {
        @include assert {
          @include output {
            @include ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fb923c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-500') {
        @include assert {
          @include output {
            @include ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f97316,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-600') {
        @include assert {
          @include output {
            @include ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ea580c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-700') {
        @include assert {
          @include output {
            @include ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c2410c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-800') {
        @include assert {
          @include output {
            @include ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9a3412,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-900') {
        @include assert {
          @include output {
            @include ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7c2d12,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-orange-950') {
        @include assert {
          @include output {
            @include ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #431407,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-50') {
        @include assert {
          @include output {
            @include ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fffbeb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-100') {
        @include assert {
          @include output {
            @include ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef3c7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-200') {
        @include assert {
          @include output {
            @include ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fde68a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-300') {
        @include assert {
          @include output {
            @include ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fcd34d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-400') {
        @include assert {
          @include output {
            @include ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fbbf24,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-500') {
        @include assert {
          @include output {
            @include ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f59e0b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-600') {
        @include assert {
          @include output {
            @include ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d97706,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-700') {
        @include assert {
          @include output {
            @include ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #b45309,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-800') {
        @include assert {
          @include output {
            @include ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #92400e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-900') {
        @include assert {
          @include output {
            @include ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #78350f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-amber-950') {
        @include assert {
          @include output {
            @include ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #451a03,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fefce8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef9c3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef08a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fde047,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #facc15,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eab308,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ca8a04,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a16207,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #854d0e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #713f12,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #422006,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-50') {
        @include assert {
          @include output {
            @include ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f7fee7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-100') {
        @include assert {
          @include output {
            @include ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfccb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-200') {
        @include assert {
          @include output {
            @include ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d9f99d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-300') {
        @include assert {
          @include output {
            @include ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bef264,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-400') {
        @include assert {
          @include output {
            @include ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a3e635,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-500') {
        @include assert {
          @include output {
            @include ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #84cc16,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-600') {
        @include assert {
          @include output {
            @include ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #65a30d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-700') {
        @include assert {
          @include output {
            @include ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4d7c0f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-800') {
        @include assert {
          @include output {
            @include ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3f6212,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-900') {
        @include assert {
          @include output {
            @include ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #365314,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-lime-950') {
        @include assert {
          @include output {
            @include ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1a2e05,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-50') {
        @include assert {
          @include output {
            @include ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0fdf4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-100') {
        @include assert {
          @include output {
            @include ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dcfce7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-200') {
        @include assert {
          @include output {
            @include ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bbf7d0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-300') {
        @include assert {
          @include output {
            @include ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #86efac,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-400') {
        @include assert {
          @include output {
            @include ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4ade80,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-500') {
        @include assert {
          @include output {
            @include ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #22c55e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-600') {
        @include assert {
          @include output {
            @include ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #16a34a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-700') {
        @include assert {
          @include output {
            @include ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #15803d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-800') {
        @include assert {
          @include output {
            @include ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #166534,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-900') {
        @include assert {
          @include output {
            @include ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #14532d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-green-950') {
        @include assert {
          @include output {
            @include ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #052e16,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfdf5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d1fae5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a7f3d0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6ee7b7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #34d399,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #10b981,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #059669,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #047857,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #065f46,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #064e3b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #022c22,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-50') {
        @include assert {
          @include output {
            @include ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0fdfa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-100') {
        @include assert {
          @include output {
            @include ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ccfbf1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-200') {
        @include assert {
          @include output {
            @include ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #99f6e4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-300') {
        @include assert {
          @include output {
            @include ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #5eead4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-400') {
        @include assert {
          @include output {
            @include ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2dd4bf,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-500') {
        @include assert {
          @include output {
            @include ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #14b8a6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-600') {
        @include assert {
          @include output {
            @include ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0d9488,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-700') {
        @include assert {
          @include output {
            @include ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0f766e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-800') {
        @include assert {
          @include output {
            @include ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #115e59,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-900') {
        @include assert {
          @include output {
            @include ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #134e4a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-teal-950') {
        @include assert {
          @include output {
            @include ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #042f2e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfeff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #cffafe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a5f3fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #67e8f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #22d3ee,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #06b6d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0891b2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0e7490,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #155e75,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #164e63,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #083344,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-50') {
        @include assert {
          @include output {
            @include ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0f9ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-100') {
        @include assert {
          @include output {
            @include ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e0f2fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-200') {
        @include assert {
          @include output {
            @include ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bae6fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-300') {
        @include assert {
          @include output {
            @include ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7dd3fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-400') {
        @include assert {
          @include output {
            @include ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #38bdf8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-500') {
        @include assert {
          @include output {
            @include ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0ea5e9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-600') {
        @include assert {
          @include output {
            @include ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0284c7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-700') {
        @include assert {
          @include output {
            @include ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0369a1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-800') {
        @include assert {
          @include output {
            @include ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #075985,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-900') {
        @include assert {
          @include output {
            @include ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0c4a6e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-sky-950') {
        @include assert {
          @include output {
            @include ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #082f49,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-50') {
        @include assert {
          @include output {
            @include ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eff6ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-100') {
        @include assert {
          @include output {
            @include ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dbeafe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-200') {
        @include assert {
          @include output {
            @include ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bfdbfe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-300') {
        @include assert {
          @include output {
            @include ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #93c5fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-400') {
        @include assert {
          @include output {
            @include ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #60a5fa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-500') {
        @include assert {
          @include output {
            @include ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3b82f6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-600') {
        @include assert {
          @include output {
            @include ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2563eb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-700') {
        @include assert {
          @include output {
            @include ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1d4ed8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-800') {
        @include assert {
          @include output {
            @include ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e40af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-900') {
        @include assert {
          @include output {
            @include ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e3a8a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-blue-950') {
        @include assert {
          @include output {
            @include ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #172554,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eef2ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e0e7ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c7d2fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a5b4fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #818cf8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6366f1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4f46e5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4338ca,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3730a3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #312e81,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e1b4b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-50') {
        @include assert {
          @include output {
            @include ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5f3ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-100') {
        @include assert {
          @include output {
            @include ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ede9fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-200') {
        @include assert {
          @include output {
            @include ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ddd6fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-300') {
        @include assert {
          @include output {
            @include ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c4b5fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-400') {
        @include assert {
          @include output {
            @include ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a78bfa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-500') {
        @include assert {
          @include output {
            @include ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #8b5cf6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-600') {
        @include assert {
          @include output {
            @include ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7c3aed,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-700') {
        @include assert {
          @include output {
            @include ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6d28d9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-800') {
        @include assert {
          @include output {
            @include ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #5b21b6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-900') {
        @include assert {
          @include output {
            @include ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4c1d95,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-violet-950') {
        @include assert {
          @include output {
            @include ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2e1065,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-50') {
        @include assert {
          @include output {
            @include ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #faf5ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-100') {
        @include assert {
          @include output {
            @include ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f3e8ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-200') {
        @include assert {
          @include output {
            @include ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e9d5ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-300') {
        @include assert {
          @include output {
            @include ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d8b4fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-400') {
        @include assert {
          @include output {
            @include ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c084fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-500') {
        @include assert {
          @include output {
            @include ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a855f7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-600') {
        @include assert {
          @include output {
            @include ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9333ea,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-700') {
        @include assert {
          @include output {
            @include ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7e22ce,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-800') {
        @include assert {
          @include output {
            @include ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6b21a8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-900') {
        @include assert {
          @include output {
            @include ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #581c87,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-purple-950') {
        @include assert {
          @include output {
            @include ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3b0764,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdf4ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fae8ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5d0fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0abfc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e879f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d946ef,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c026d3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a21caf,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #86198f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #701a75,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4a044e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-50') {
        @include assert {
          @include output {
            @include ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdf2f8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-100') {
        @include assert {
          @include output {
            @include ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fce7f3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-200') {
        @include assert {
          @include output {
            @include ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fbcfe8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-300') {
        @include assert {
          @include output {
            @include ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f9a8d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-400') {
        @include assert {
          @include output {
            @include ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f472b6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-500') {
        @include assert {
          @include output {
            @include ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ec4899,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-600') {
        @include assert {
          @include output {
            @include ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #db2777,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-700') {
        @include assert {
          @include output {
            @include ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #be185d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-800') {
        @include assert {
          @include output {
            @include ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9d174d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-900') {
        @include assert {
          @include output {
            @include ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #831843,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-pink-950') {
        @include assert {
          @include output {
            @include ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #500724,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-50') {
        @include assert {
          @include output {
            @include ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff1f2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-100') {
        @include assert {
          @include output {
            @include ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ffe4e6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-200') {
        @include assert {
          @include output {
            @include ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fecdd3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-300') {
        @include assert {
          @include output {
            @include ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fda4af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-400') {
        @include assert {
          @include output {
            @include ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fb7185,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-500') {
        @include assert {
          @include output {
            @include ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f43f5e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-600') {
        @include assert {
          @include output {
            @include ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e11d48,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-700') {
        @include assert {
          @include output {
            @include ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #be123c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-800') {
        @include assert {
          @include output {
            @include ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9f1239,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-900') {
        @include assert {
          @include output {
            @include ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #881337,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('ring-offset-rose-950') {
        @include assert {
          @include output {
            @include ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4c0519,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:ring-offset-inherit') {
        @include assert {
          @include output {
            @include sm\:ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 inherit,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-current') {
        @include assert {
          @include output {
            @include sm\:ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 currentColor,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-transparent') {
        @include assert {
          @include output {
            @include sm\:ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 transparent,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f1f5f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e2e8f0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #cbd5e1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #94a3b8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #64748b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #475569,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #334155,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1e293b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0f172a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-slate-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #020617,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f9fafb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f3f4f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e5e7eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d1d5db,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #9ca3af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #6b7280,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4b5563,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #374151,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1f2937,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #111827,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-gray-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #030712,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f4f4f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e4e4e7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d4d4d8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a1a1aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #71717a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #52525b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #3f3f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #27272a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #18181b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #09090b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f5f5f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e5e5e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d4d4d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a3a3a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #737373,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #525252,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #404040,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #262626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #171717,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0a0a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fafaf9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f5f5f4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e7e5e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d6d3d1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a8a29e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #78716c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #57534e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #44403c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #292524,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1c1917,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-stone-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0c0a09,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fef2f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fee2e2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fecaca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fca5a5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f87171,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ef4444,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #dc2626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #b91c1c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #991b1b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #7f1d1d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-red-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #450a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fff7ed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ffedd5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fed7aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fdba74,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fb923c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f97316,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ea580c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #c2410c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #9a3412,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #7c2d12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-orange-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #431407,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fffbeb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fef3c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fde68a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fcd34d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fbbf24,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f59e0b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d97706,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #b45309,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #92400e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #78350f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-amber-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #451a03,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fefce8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fef9c3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fef08a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fde047,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #facc15,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #eab308,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ca8a04,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a16207,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #854d0e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #713f12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #422006,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f7fee7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ecfccb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d9f99d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #bef264,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a3e635,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #84cc16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #65a30d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4d7c0f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #3f6212,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #365314,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-lime-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1a2e05,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f0fdf4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #dcfce7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #bbf7d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #86efac,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4ade80,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #22c55e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #16a34a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #15803d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #166534,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #14532d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-green-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #052e16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ecfdf5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d1fae5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a7f3d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #6ee7b7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #34d399,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #10b981,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #059669,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #047857,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #065f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #064e3b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #022c22,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f0fdfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ccfbf1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #99f6e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #5eead4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #2dd4bf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #14b8a6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0d9488,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0f766e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #115e59,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #134e4a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-teal-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #042f2e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ecfeff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #cffafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a5f3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #67e8f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #22d3ee,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #06b6d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0891b2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0e7490,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #155e75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #164e63,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #083344,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f0f9ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e0f2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #bae6fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #7dd3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #38bdf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0ea5e9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0284c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0369a1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #075985,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #0c4a6e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-sky-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #082f49,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #eff6ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #dbeafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #bfdbfe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #93c5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #60a5fa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #3b82f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #2563eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1d4ed8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1e40af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1e3a8a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-blue-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #172554,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #eef2ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e0e7ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #c7d2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a5b4fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #818cf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #6366f1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4f46e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4338ca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #3730a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #312e81,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #1e1b4b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f5f3ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ede9fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ddd6fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #c4b5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a78bfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #8b5cf6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #7c3aed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #6d28d9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #5b21b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4c1d95,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-violet-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #2e1065,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #faf5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f3e8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e9d5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d8b4fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #c084fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a855f7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #9333ea,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #7e22ce,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #6b21a8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #581c87,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-purple-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #3b0764,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fdf4ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fae8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f5d0fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f0abfc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e879f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #d946ef,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #c026d3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #a21caf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #86198f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #701a75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4a044e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fdf2f8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fce7f3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fbcfe8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f9a8d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f472b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ec4899,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #db2777,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #be185d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #9d174d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #831843,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-pink-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #500724,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-50') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fff1f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-100') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #ffe4e6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-200') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fecdd3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-300') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fda4af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-400') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #fb7185,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-500') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #f43f5e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-600') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #e11d48,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-700') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #be123c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-800') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #9f1239,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-900') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #881337,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('sm\:ring-offset-rose-950') {
        @include assert {
          @include output {
            @include sm\:ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #4c0519,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-inherit') {
        @include assert {
          @include output {
            @include md\:ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 inherit,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-current') {
        @include assert {
          @include output {
            @include md\:ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 currentColor,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-transparent') {
        @include assert {
          @include output {
            @include md\:ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 transparent,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f1f5f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e2e8f0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #cbd5e1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #94a3b8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #64748b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #475569,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #334155,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1e293b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0f172a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-slate-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #020617,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f9fafb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f3f4f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e5e7eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d1d5db,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #9ca3af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #6b7280,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4b5563,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #374151,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1f2937,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #111827,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-gray-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #030712,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f4f4f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e4e4e7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d4d4d8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a1a1aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #71717a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #52525b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #3f3f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #27272a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #18181b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #09090b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f5f5f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e5e5e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d4d4d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a3a3a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #737373,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #525252,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #404040,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #262626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #171717,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0a0a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fafaf9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f5f5f4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e7e5e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d6d3d1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a8a29e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #78716c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #57534e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #44403c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #292524,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1c1917,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-stone-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0c0a09,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fef2f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fee2e2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fecaca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fca5a5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f87171,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ef4444,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #dc2626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #b91c1c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #991b1b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #7f1d1d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-red-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #450a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fff7ed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ffedd5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fed7aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fdba74,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fb923c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f97316,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ea580c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #c2410c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #9a3412,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #7c2d12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-orange-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #431407,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fffbeb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fef3c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fde68a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fcd34d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fbbf24,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f59e0b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d97706,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #b45309,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #92400e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #78350f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-amber-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #451a03,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fefce8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fef9c3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fef08a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fde047,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #facc15,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #eab308,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ca8a04,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a16207,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #854d0e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #713f12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #422006,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f7fee7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ecfccb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d9f99d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #bef264,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a3e635,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #84cc16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #65a30d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4d7c0f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #3f6212,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #365314,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-lime-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1a2e05,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f0fdf4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #dcfce7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #bbf7d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #86efac,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4ade80,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #22c55e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #16a34a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #15803d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #166534,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #14532d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-green-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #052e16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ecfdf5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d1fae5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a7f3d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #6ee7b7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #34d399,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #10b981,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #059669,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #047857,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #065f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #064e3b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #022c22,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f0fdfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ccfbf1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #99f6e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #5eead4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #2dd4bf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #14b8a6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0d9488,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0f766e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #115e59,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #134e4a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-teal-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #042f2e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ecfeff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #cffafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a5f3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #67e8f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #22d3ee,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #06b6d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0891b2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0e7490,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #155e75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #164e63,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #083344,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f0f9ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e0f2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #bae6fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #7dd3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #38bdf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0ea5e9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0284c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0369a1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #075985,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #0c4a6e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-sky-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #082f49,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #eff6ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #dbeafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #bfdbfe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #93c5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #60a5fa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #3b82f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #2563eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1d4ed8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1e40af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1e3a8a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-blue-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #172554,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #eef2ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e0e7ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #c7d2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a5b4fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #818cf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #6366f1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4f46e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4338ca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #3730a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #312e81,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #1e1b4b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f5f3ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ede9fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ddd6fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #c4b5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a78bfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #8b5cf6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #7c3aed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #6d28d9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #5b21b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4c1d95,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-violet-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #2e1065,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #faf5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f3e8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e9d5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d8b4fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #c084fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a855f7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #9333ea,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #7e22ce,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #6b21a8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #581c87,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-purple-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #3b0764,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fdf4ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fae8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f5d0fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f0abfc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e879f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #d946ef,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #c026d3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #a21caf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #86198f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #701a75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4a044e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fdf2f8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fce7f3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fbcfe8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f9a8d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f472b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ec4899,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #db2777,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #be185d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #9d174d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #831843,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-pink-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #500724,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-50') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fff1f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-100') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #ffe4e6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-200') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fecdd3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-300') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fda4af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-400') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #fb7185,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-500') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #f43f5e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-600') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #e11d48,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-700') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #be123c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-800') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #9f1239,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-900') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #881337,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-rose-950') {
        @include assert {
          @include output {
            @include md\:ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #4c0519,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-inherit') {
        @include assert {
          @include output {
            @include lg\:ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 inherit,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-current') {
        @include assert {
          @include output {
            @include lg\:ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 currentColor,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-transparent') {
        @include assert {
          @include output {
            @include lg\:ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 transparent,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f1f5f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e2e8f0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #cbd5e1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #94a3b8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #64748b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #475569,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #334155,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1e293b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0f172a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-slate-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #020617,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f9fafb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f3f4f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e5e7eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d1d5db,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #9ca3af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #6b7280,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4b5563,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #374151,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1f2937,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #111827,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-gray-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #030712,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f4f4f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e4e4e7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d4d4d8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a1a1aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #71717a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #52525b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #3f3f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #27272a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #18181b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #09090b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f5f5f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e5e5e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d4d4d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a3a3a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #737373,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #525252,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #404040,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #262626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #171717,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0a0a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fafaf9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f5f5f4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e7e5e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d6d3d1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a8a29e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #78716c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #57534e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #44403c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #292524,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1c1917,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-stone-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0c0a09,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fef2f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fee2e2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fecaca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fca5a5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f87171,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ef4444,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #dc2626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #b91c1c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #991b1b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #7f1d1d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-red-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #450a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fff7ed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ffedd5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fed7aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fdba74,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fb923c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f97316,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ea580c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #c2410c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #9a3412,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #7c2d12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-orange-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #431407,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fffbeb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fef3c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fde68a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fcd34d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fbbf24,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f59e0b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d97706,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #b45309,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #92400e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #78350f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-amber-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #451a03,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fefce8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fef9c3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fef08a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fde047,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #facc15,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #eab308,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ca8a04,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a16207,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #854d0e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #713f12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #422006,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f7fee7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ecfccb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d9f99d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #bef264,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a3e635,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #84cc16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #65a30d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4d7c0f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #3f6212,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #365314,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-lime-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1a2e05,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f0fdf4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #dcfce7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #bbf7d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #86efac,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4ade80,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #22c55e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #16a34a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #15803d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #166534,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #14532d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-green-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #052e16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ecfdf5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d1fae5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a7f3d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #6ee7b7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #34d399,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #10b981,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #059669,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #047857,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #065f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #064e3b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #022c22,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f0fdfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ccfbf1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #99f6e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #5eead4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #2dd4bf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #14b8a6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0d9488,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0f766e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #115e59,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #134e4a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-teal-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #042f2e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ecfeff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #cffafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a5f3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #67e8f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #22d3ee,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #06b6d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0891b2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0e7490,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #155e75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #164e63,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #083344,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f0f9ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e0f2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #bae6fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #7dd3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #38bdf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0ea5e9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0284c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0369a1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #075985,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #0c4a6e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-sky-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #082f49,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #eff6ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #dbeafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #bfdbfe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #93c5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #60a5fa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #3b82f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #2563eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1d4ed8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1e40af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1e3a8a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-blue-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #172554,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #eef2ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e0e7ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #c7d2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a5b4fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #818cf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #6366f1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4f46e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4338ca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #3730a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #312e81,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #1e1b4b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f5f3ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ede9fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ddd6fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #c4b5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a78bfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #8b5cf6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #7c3aed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #6d28d9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #5b21b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4c1d95,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-violet-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #2e1065,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #faf5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f3e8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e9d5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d8b4fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #c084fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a855f7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #9333ea,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #7e22ce,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #6b21a8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #581c87,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-purple-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #3b0764,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fdf4ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fae8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f5d0fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f0abfc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e879f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #d946ef,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #c026d3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #a21caf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #86198f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #701a75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4a044e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fdf2f8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fce7f3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fbcfe8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f9a8d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f472b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ec4899,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #db2777,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #be185d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #9d174d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #831843,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-pink-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #500724,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-50') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fff1f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-100') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #ffe4e6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-200') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fecdd3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-300') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fda4af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-400') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #fb7185,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-500') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #f43f5e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-600') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #e11d48,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-700') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #be123c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-800') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #9f1239,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-900') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #881337,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-rose-950') {
        @include assert {
          @include output {
            @include lg\:ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #4c0519,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-inherit') {
        @include assert {
          @include output {
            @include xl\:ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 inherit,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-current') {
        @include assert {
          @include output {
            @include xl\:ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 currentColor,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-transparent') {
        @include assert {
          @include output {
            @include xl\:ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 transparent,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f1f5f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e2e8f0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #cbd5e1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #94a3b8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #64748b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #475569,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #334155,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1e293b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0f172a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-slate-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #020617,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f9fafb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f3f4f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e5e7eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d1d5db,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #9ca3af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #6b7280,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4b5563,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #374151,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1f2937,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #111827,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-gray-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #030712,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f4f4f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e4e4e7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d4d4d8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a1a1aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #71717a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #52525b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #3f3f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #27272a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #18181b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #09090b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f5f5f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e5e5e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d4d4d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a3a3a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #737373,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #525252,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #404040,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #262626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #171717,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0a0a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fafaf9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f5f5f4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e7e5e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d6d3d1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a8a29e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #78716c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #57534e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #44403c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #292524,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1c1917,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-stone-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0c0a09,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fef2f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fee2e2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fecaca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fca5a5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f87171,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ef4444,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #dc2626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #b91c1c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #991b1b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #7f1d1d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-red-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #450a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fff7ed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ffedd5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fed7aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fdba74,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fb923c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f97316,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ea580c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #c2410c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #9a3412,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #7c2d12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-orange-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #431407,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fffbeb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fef3c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fde68a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fcd34d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fbbf24,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f59e0b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d97706,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #b45309,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #92400e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #78350f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-amber-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #451a03,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fefce8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fef9c3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fef08a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fde047,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #facc15,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #eab308,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ca8a04,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a16207,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #854d0e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #713f12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #422006,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f7fee7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ecfccb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d9f99d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #bef264,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a3e635,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #84cc16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #65a30d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4d7c0f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #3f6212,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #365314,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-lime-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1a2e05,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f0fdf4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #dcfce7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #bbf7d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #86efac,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4ade80,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #22c55e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #16a34a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #15803d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #166534,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #14532d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-green-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #052e16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ecfdf5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d1fae5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a7f3d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #6ee7b7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #34d399,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #10b981,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #059669,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #047857,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #065f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #064e3b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #022c22,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f0fdfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ccfbf1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #99f6e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #5eead4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #2dd4bf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #14b8a6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0d9488,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0f766e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #115e59,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #134e4a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-teal-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #042f2e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ecfeff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #cffafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a5f3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #67e8f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #22d3ee,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #06b6d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0891b2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0e7490,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #155e75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #164e63,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #083344,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f0f9ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e0f2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #bae6fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #7dd3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #38bdf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0ea5e9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0284c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0369a1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #075985,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #0c4a6e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-sky-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #082f49,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #eff6ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #dbeafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #bfdbfe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #93c5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #60a5fa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #3b82f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #2563eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1d4ed8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1e40af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1e3a8a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-blue-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #172554,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #eef2ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e0e7ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #c7d2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a5b4fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #818cf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #6366f1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4f46e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4338ca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #3730a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #312e81,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #1e1b4b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f5f3ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ede9fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ddd6fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #c4b5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a78bfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #8b5cf6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #7c3aed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #6d28d9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #5b21b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4c1d95,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-violet-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #2e1065,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #faf5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f3e8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e9d5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d8b4fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #c084fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a855f7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #9333ea,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #7e22ce,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #6b21a8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #581c87,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-purple-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #3b0764,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fdf4ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fae8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f5d0fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f0abfc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e879f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #d946ef,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #c026d3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #a21caf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #86198f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #701a75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4a044e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fdf2f8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fce7f3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fbcfe8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f9a8d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f472b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ec4899,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #db2777,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #be185d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #9d174d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #831843,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-pink-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #500724,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-50') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fff1f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-100') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #ffe4e6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-200') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fecdd3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-300') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fda4af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-400') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #fb7185,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-500') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #f43f5e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-600') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #e11d48,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-700') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #be123c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-800') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #9f1239,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-900') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #881337,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-rose-950') {
        @include assert {
          @include output {
            @include xl\:ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #4c0519,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-inherit') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-inherit;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 inherit,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-current') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-current;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 currentColor,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-transparent') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-transparent;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 transparent,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f1f5f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e2e8f0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #cbd5e1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #94a3b8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #64748b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #475569,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #334155,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1e293b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0f172a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-slate-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #020617,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f9fafb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f3f4f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e5e7eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d1d5db,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #9ca3af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #6b7280,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4b5563,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #374151,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1f2937,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #111827,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-gray-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #030712,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f4f4f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e4e4e7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d4d4d8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a1a1aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #71717a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #52525b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #3f3f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #27272a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #18181b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-zinc-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #09090b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fafafa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f5f5f5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e5e5e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d4d4d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a3a3a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #737373,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #525252,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #404040,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #262626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #171717,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-neutral-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0a0a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fafaf9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f5f5f4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e7e5e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d6d3d1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a8a29e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #78716c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #57534e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #44403c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #292524,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1c1917,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-stone-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0c0a09,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fef2f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fee2e2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fecaca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fca5a5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f87171,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ef4444,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #dc2626,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #b91c1c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #991b1b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #7f1d1d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-red-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-red-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #450a0a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fff7ed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ffedd5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fed7aa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fdba74,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fb923c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f97316,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ea580c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #c2410c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #9a3412,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #7c2d12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-orange-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #431407,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fffbeb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fef3c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fde68a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fcd34d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fbbf24,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f59e0b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d97706,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #b45309,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #92400e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #78350f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-amber-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #451a03,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fefce8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fef9c3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fef08a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fde047,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #facc15,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #eab308,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ca8a04,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a16207,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #854d0e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #713f12,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-yellow-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #422006,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f7fee7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ecfccb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d9f99d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #bef264,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a3e635,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #84cc16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #65a30d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4d7c0f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #3f6212,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #365314,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-lime-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1a2e05,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f0fdf4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #dcfce7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #bbf7d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #86efac,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4ade80,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #22c55e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #16a34a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #15803d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #166534,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #14532d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-green-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-green-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #052e16,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ecfdf5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d1fae5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a7f3d0,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #6ee7b7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #34d399,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #10b981,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #059669,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #047857,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #065f46,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #064e3b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-emerald-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #022c22,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f0fdfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ccfbf1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #99f6e4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #5eead4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #2dd4bf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #14b8a6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0d9488,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0f766e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #115e59,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #134e4a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-teal-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #042f2e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ecfeff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #cffafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a5f3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #67e8f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #22d3ee,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #06b6d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0891b2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0e7490,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #155e75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #164e63,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-cyan-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #083344,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f0f9ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e0f2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #bae6fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #7dd3fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #38bdf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0ea5e9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0284c7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0369a1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #075985,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #0c4a6e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-sky-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #082f49,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #eff6ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #dbeafe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #bfdbfe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #93c5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #60a5fa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #3b82f6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #2563eb,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1d4ed8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1e40af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1e3a8a,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-blue-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #172554,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #eef2ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e0e7ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #c7d2fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a5b4fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #818cf8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #6366f1,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4f46e5,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4338ca,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #3730a3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #312e81,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-indigo-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #1e1b4b,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f5f3ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ede9fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ddd6fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #c4b5fd,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a78bfa,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #8b5cf6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #7c3aed,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #6d28d9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #5b21b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4c1d95,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-violet-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #2e1065,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #faf5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f3e8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e9d5ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d8b4fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #c084fc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a855f7,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #9333ea,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #7e22ce,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #6b21a8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #581c87,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-purple-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #3b0764,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fdf4ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fae8ff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f5d0fe,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f0abfc,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e879f9,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #d946ef,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #c026d3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #a21caf,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #86198f,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #701a75,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-fuchsia-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4a044e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fdf2f8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fce7f3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fbcfe8,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f9a8d4,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f472b6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ec4899,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #db2777,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #be185d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #9d174d,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #831843,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-pink-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #500724,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-50;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fff1f2,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-100;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #ffe4e6,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-200;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fecdd3,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-300;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fda4af,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-400;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #fb7185,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-500;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #f43f5e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-600;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #e11d48,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-700;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #be123c,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-800;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #9f1239,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-900;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #881337,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-rose-950;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #4c0519,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #50d71e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it('sm\:ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include sm\:ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-shadow:
                0 0 0 0 #50d71e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('md\:ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include md\:ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-shadow:
                0 0 0 0 #50d71e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('lg\:ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include lg\:ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-shadow:
                0 0 0 0 #50d71e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('xl\:ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include xl\:ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-shadow:
                0 0 0 0 #50d71e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }

      @include it('2xl\:ring-offset-(#50d71e)') {
        @include assert {
          @include output {
            @include \2xl\:ring-offset-(#50d71e);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-shadow:
                0 0 0 0 #50d71e,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff;
            }
          }
        }
      }
    }
  }
}
