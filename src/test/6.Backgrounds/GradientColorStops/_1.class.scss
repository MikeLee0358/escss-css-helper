@use '../../mode0' as *;
@use 'true' as *;

@include describe('6.Backgrounds') {
  @include describe('Gradient Color Stops') {
    @include describe('Basic') {
      @include it('from-inherit') {
        @include assert {
          @include output {
            @include from-inherit;
            @include reset;
          }

          @include expect {
            background-image: inherit !important;
          }
        }
      }

      @include it('from-current') {
        @include assert {
          @include output {
            @include from-current;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, currentColor, transparent);
          }
        }
      }

      @include it('from-transparent') {
        @include assert {
          @include output {
            @include from-transparent;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, transparent, transparent);
          }
        }
      }

      @include it('from-slate-100') {
        @include assert {
          @include output {
            @include from-slate-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f1f5f9, transparent);
          }
        }
      }

      @include it('from-slate-200') {
        @include assert {
          @include output {
            @include from-slate-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e2e8f0, transparent);
          }
        }
      }

      @include it('from-slate-300') {
        @include assert {
          @include output {
            @include from-slate-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #cbd5e1, transparent);
          }
        }
      }

      @include it('from-slate-400') {
        @include assert {
          @include output {
            @include from-slate-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #94a3b8, transparent);
          }
        }
      }

      @include it('from-slate-500') {
        @include assert {
          @include output {
            @include from-slate-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #64748b, transparent);
          }
        }
      }

      @include it('from-slate-600') {
        @include assert {
          @include output {
            @include from-slate-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #475569, transparent);
          }
        }
      }

      @include it('from-slate-700') {
        @include assert {
          @include output {
            @include from-slate-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #334155, transparent);
          }
        }
      }

      @include it('from-slate-800') {
        @include assert {
          @include output {
            @include from-slate-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1e293b, transparent);
          }
        }
      }

      @include it('from-slate-900') {
        @include assert {
          @include output {
            @include from-slate-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0f172a, transparent);
          }
        }
      }

      @include it('from-slate-950') {
        @include assert {
          @include output {
            @include from-slate-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #020617, transparent);
          }
        }
      }

      @include it('from-gray-50') {
        @include assert {
          @include output {
            @include from-gray-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f9fafb, transparent);
          }
        }
      }

      @include it('from-gray-100') {
        @include assert {
          @include output {
            @include from-gray-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f3f4f6, transparent);
          }
        }
      }

      @include it('from-gray-200') {
        @include assert {
          @include output {
            @include from-gray-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e5e7eb, transparent);
          }
        }
      }

      @include it('from-gray-300') {
        @include assert {
          @include output {
            @include from-gray-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d1d5db, transparent);
          }
        }
      }

      @include it('from-gray-400') {
        @include assert {
          @include output {
            @include from-gray-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #9ca3af, transparent);
          }
        }
      }

      @include it('from-gray-500') {
        @include assert {
          @include output {
            @include from-gray-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #6b7280, transparent);
          }
        }
      }

      @include it('from-gray-600') {
        @include assert {
          @include output {
            @include from-gray-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4b5563, transparent);
          }
        }
      }

      @include it('from-gray-700') {
        @include assert {
          @include output {
            @include from-gray-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #374151, transparent);
          }
        }
      }

      @include it('from-gray-800') {
        @include assert {
          @include output {
            @include from-gray-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1f2937, transparent);
          }
        }
      }

      @include it('from-gray-900') {
        @include assert {
          @include output {
            @include from-gray-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #111827, transparent);
          }
        }
      }

      @include it('from-gray-950') {
        @include assert {
          @include output {
            @include from-gray-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #030712, transparent);
          }
        }
      }

      @include it('from-zinc-50') {
        @include assert {
          @include output {
            @include from-zinc-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fafafa, transparent);
          }
        }
      }

      @include it('from-zinc-100') {
        @include assert {
          @include output {
            @include from-zinc-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f4f4f5, transparent);
          }
        }
      }

      @include it('from-zinc-200') {
        @include assert {
          @include output {
            @include from-zinc-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e4e4e7, transparent);
          }
        }
      }

      @include it('from-zinc-300') {
        @include assert {
          @include output {
            @include from-zinc-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d4d4d8, transparent);
          }
        }
      }

      @include it('from-zinc-400') {
        @include assert {
          @include output {
            @include from-zinc-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a1a1aa, transparent);
          }
        }
      }

      @include it('from-zinc-500') {
        @include assert {
          @include output {
            @include from-zinc-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #71717a, transparent);
          }
        }
      }

      @include it('from-zinc-600') {
        @include assert {
          @include output {
            @include from-zinc-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #52525b, transparent);
          }
        }
      }

      @include it('from-zinc-700') {
        @include assert {
          @include output {
            @include from-zinc-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #3f3f46, transparent);
          }
        }
      }

      @include it('from-zinc-800') {
        @include assert {
          @include output {
            @include from-zinc-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #27272a, transparent);
          }
        }
      }

      @include it('from-zinc-900') {
        @include assert {
          @include output {
            @include from-zinc-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #18181b, transparent);
          }
        }
      }

      @include it('from-zinc-950') {
        @include assert {
          @include output {
            @include from-zinc-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #09090b, transparent);
          }
        }
      }

      @include it('from-neutral-50') {
        @include assert {
          @include output {
            @include from-neutral-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fafafa, transparent);
          }
        }
      }

      @include it('from-neutral-100') {
        @include assert {
          @include output {
            @include from-neutral-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f5f5f5, transparent);
          }
        }
      }

      @include it('from-neutral-200') {
        @include assert {
          @include output {
            @include from-neutral-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e5e5e5, transparent);
          }
        }
      }

      @include it('from-neutral-300') {
        @include assert {
          @include output {
            @include from-neutral-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d4d4d4, transparent);
          }
        }
      }

      @include it('from-neutral-400') {
        @include assert {
          @include output {
            @include from-neutral-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a3a3a3, transparent);
          }
        }
      }

      @include it('from-neutral-500') {
        @include assert {
          @include output {
            @include from-neutral-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #737373, transparent);
          }
        }
      }

      @include it('from-neutral-600') {
        @include assert {
          @include output {
            @include from-neutral-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #525252, transparent);
          }
        }
      }

      @include it('from-neutral-700') {
        @include assert {
          @include output {
            @include from-neutral-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #404040, transparent);
          }
        }
      }

      @include it('from-neutral-800') {
        @include assert {
          @include output {
            @include from-neutral-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #262626, transparent);
          }
        }
      }

      @include it('from-neutral-900') {
        @include assert {
          @include output {
            @include from-neutral-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #171717, transparent);
          }
        }
      }

      @include it('from-neutral-950') {
        @include assert {
          @include output {
            @include from-neutral-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0a0a0a, transparent);
          }
        }
      }

      @include it('from-stone-50') {
        @include assert {
          @include output {
            @include from-stone-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fafaf9, transparent);
          }
        }
      }

      @include it('from-stone-100') {
        @include assert {
          @include output {
            @include from-stone-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f5f5f4, transparent);
          }
        }
      }

      @include it('from-stone-200') {
        @include assert {
          @include output {
            @include from-stone-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e7e5e4, transparent);
          }
        }
      }

      @include it('from-stone-300') {
        @include assert {
          @include output {
            @include from-stone-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d6d3d1, transparent);
          }
        }
      }

      @include it('from-stone-400') {
        @include assert {
          @include output {
            @include from-stone-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a8a29e, transparent);
          }
        }
      }

      @include it('from-stone-500') {
        @include assert {
          @include output {
            @include from-stone-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #78716c, transparent);
          }
        }
      }

      @include it('from-stone-600') {
        @include assert {
          @include output {
            @include from-stone-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #57534e, transparent);
          }
        }
      }

      @include it('from-stone-700') {
        @include assert {
          @include output {
            @include from-stone-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #44403c, transparent);
          }
        }
      }

      @include it('from-stone-800') {
        @include assert {
          @include output {
            @include from-stone-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #292524, transparent);
          }
        }
      }

      @include it('from-stone-900') {
        @include assert {
          @include output {
            @include from-stone-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1c1917, transparent);
          }
        }
      }

      @include it('from-stone-950') {
        @include assert {
          @include output {
            @include from-stone-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0c0a09, transparent);
          }
        }
      }

      @include it('from-red-50') {
        @include assert {
          @include output {
            @include from-red-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fef2f2, transparent);
          }
        }
      }

      @include it('from-red-100') {
        @include assert {
          @include output {
            @include from-red-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fee2e2, transparent);
          }
        }
      }

      @include it('from-red-200') {
        @include assert {
          @include output {
            @include from-red-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fecaca, transparent);
          }
        }
      }

      @include it('from-red-300') {
        @include assert {
          @include output {
            @include from-red-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fca5a5, transparent);
          }
        }
      }

      @include it('from-red-400') {
        @include assert {
          @include output {
            @include from-red-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f87171, transparent);
          }
        }
      }

      @include it('from-red-500') {
        @include assert {
          @include output {
            @include from-red-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ef4444, transparent);
          }
        }
      }

      @include it('from-red-600') {
        @include assert {
          @include output {
            @include from-red-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #dc2626, transparent);
          }
        }
      }

      @include it('from-red-700') {
        @include assert {
          @include output {
            @include from-red-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #b91c1c, transparent);
          }
        }
      }

      @include it('from-red-800') {
        @include assert {
          @include output {
            @include from-red-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #991b1b, transparent);
          }
        }
      }

      @include it('from-red-900') {
        @include assert {
          @include output {
            @include from-red-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #7f1d1d, transparent);
          }
        }
      }

      @include it('from-red-950') {
        @include assert {
          @include output {
            @include from-red-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #450a0a, transparent);
          }
        }
      }

      @include it('from-orange-50') {
        @include assert {
          @include output {
            @include from-orange-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff7ed, transparent);
          }
        }
      }

      @include it('from-orange-100') {
        @include assert {
          @include output {
            @include from-orange-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ffedd5, transparent);
          }
        }
      }

      @include it('from-orange-200') {
        @include assert {
          @include output {
            @include from-orange-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fed7aa, transparent);
          }
        }
      }

      @include it('from-orange-300') {
        @include assert {
          @include output {
            @include from-orange-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fdba74, transparent);
          }
        }
      }

      @include it('from-orange-400') {
        @include assert {
          @include output {
            @include from-orange-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fb923c, transparent);
          }
        }
      }

      @include it('from-orange-500') {
        @include assert {
          @include output {
            @include from-orange-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f97316, transparent);
          }
        }
      }

      @include it('from-orange-600') {
        @include assert {
          @include output {
            @include from-orange-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ea580c, transparent);
          }
        }
      }

      @include it('from-orange-700') {
        @include assert {
          @include output {
            @include from-orange-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #c2410c, transparent);
          }
        }
      }

      @include it('from-orange-800') {
        @include assert {
          @include output {
            @include from-orange-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #9a3412, transparent);
          }
        }
      }

      @include it('from-orange-900') {
        @include assert {
          @include output {
            @include from-orange-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #7c2d12, transparent);
          }
        }
      }

      @include it('from-orange-950') {
        @include assert {
          @include output {
            @include from-orange-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #431407, transparent);
          }
        }
      }

      @include it('from-amber-50') {
        @include assert {
          @include output {
            @include from-amber-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fffbeb, transparent);
          }
        }
      }

      @include it('from-amber-100') {
        @include assert {
          @include output {
            @include from-amber-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fef3c7, transparent);
          }
        }
      }

      @include it('from-amber-200') {
        @include assert {
          @include output {
            @include from-amber-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fde68a, transparent);
          }
        }
      }

      @include it('from-amber-300') {
        @include assert {
          @include output {
            @include from-amber-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fcd34d, transparent);
          }
        }
      }

      @include it('from-amber-400') {
        @include assert {
          @include output {
            @include from-amber-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fbbf24, transparent);
          }
        }
      }

      @include it('from-amber-500') {
        @include assert {
          @include output {
            @include from-amber-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f59e0b, transparent);
          }
        }
      }

      @include it('from-amber-600') {
        @include assert {
          @include output {
            @include from-amber-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d97706, transparent);
          }
        }
      }

      @include it('from-amber-700') {
        @include assert {
          @include output {
            @include from-amber-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #b45309, transparent);
          }
        }
      }

      @include it('from-amber-800') {
        @include assert {
          @include output {
            @include from-amber-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #92400e, transparent);
          }
        }
      }

      @include it('from-amber-900') {
        @include assert {
          @include output {
            @include from-amber-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #78350f, transparent);
          }
        }
      }

      @include it('from-amber-950') {
        @include assert {
          @include output {
            @include from-amber-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #451a03, transparent);
          }
        }
      }

      @include it('from-yellow-50') {
        @include assert {
          @include output {
            @include from-yellow-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fefce8, transparent);
          }
        }
      }

      @include it('from-yellow-100') {
        @include assert {
          @include output {
            @include from-yellow-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fef9c3, transparent);
          }
        }
      }

      @include it('from-yellow-200') {
        @include assert {
          @include output {
            @include from-yellow-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fef08a, transparent);
          }
        }
      }

      @include it('from-yellow-300') {
        @include assert {
          @include output {
            @include from-yellow-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fde047, transparent);
          }
        }
      }

      @include it('from-yellow-400') {
        @include assert {
          @include output {
            @include from-yellow-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #facc15, transparent);
          }
        }
      }

      @include it('from-yellow-500') {
        @include assert {
          @include output {
            @include from-yellow-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #eab308, transparent);
          }
        }
      }

      @include it('from-yellow-600') {
        @include assert {
          @include output {
            @include from-yellow-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ca8a04, transparent);
          }
        }
      }

      @include it('from-yellow-700') {
        @include assert {
          @include output {
            @include from-yellow-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a16207, transparent);
          }
        }
      }

      @include it('from-yellow-800') {
        @include assert {
          @include output {
            @include from-yellow-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #854d0e, transparent);
          }
        }
      }

      @include it('from-yellow-900') {
        @include assert {
          @include output {
            @include from-yellow-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #713f12, transparent);
          }
        }
      }

      @include it('from-yellow-950') {
        @include assert {
          @include output {
            @include from-yellow-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #422006, transparent);
          }
        }
      }

      @include it('from-lime-50') {
        @include assert {
          @include output {
            @include from-lime-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f7fee7, transparent);
          }
        }
      }

      @include it('from-lime-100') {
        @include assert {
          @include output {
            @include from-lime-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ecfccb, transparent);
          }
        }
      }

      @include it('from-lime-200') {
        @include assert {
          @include output {
            @include from-lime-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d9f99d, transparent);
          }
        }
      }

      @include it('from-lime-300') {
        @include assert {
          @include output {
            @include from-lime-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #bef264, transparent);
          }
        }
      }

      @include it('from-lime-400') {
        @include assert {
          @include output {
            @include from-lime-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a3e635, transparent);
          }
        }
      }

      @include it('from-lime-500') {
        @include assert {
          @include output {
            @include from-lime-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #84cc16, transparent);
          }
        }
      }

      @include it('from-lime-600') {
        @include assert {
          @include output {
            @include from-lime-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #65a30d, transparent);
          }
        }
      }

      @include it('from-lime-700') {
        @include assert {
          @include output {
            @include from-lime-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4d7c0f, transparent);
          }
        }
      }

      @include it('from-lime-800') {
        @include assert {
          @include output {
            @include from-lime-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #3f6212, transparent);
          }
        }
      }

      @include it('from-lime-900') {
        @include assert {
          @include output {
            @include from-lime-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #365314, transparent);
          }
        }
      }

      @include it('from-lime-950') {
        @include assert {
          @include output {
            @include from-lime-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1a2e05, transparent);
          }
        }
      }

      @include it('from-green-50') {
        @include assert {
          @include output {
            @include from-green-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f0fdf4, transparent);
          }
        }
      }

      @include it('from-green-100') {
        @include assert {
          @include output {
            @include from-green-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #dcfce7, transparent);
          }
        }
      }

      @include it('from-green-200') {
        @include assert {
          @include output {
            @include from-green-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #bbf7d0, transparent);
          }
        }
      }

      @include it('from-green-300') {
        @include assert {
          @include output {
            @include from-green-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #86efac, transparent);
          }
        }
      }

      @include it('from-green-400') {
        @include assert {
          @include output {
            @include from-green-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4ade80, transparent);
          }
        }
      }

      @include it('from-green-500') {
        @include assert {
          @include output {
            @include from-green-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #22c55e, transparent);
          }
        }
      }

      @include it('from-green-600') {
        @include assert {
          @include output {
            @include from-green-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #16a34a, transparent);
          }
        }
      }

      @include it('from-green-700') {
        @include assert {
          @include output {
            @include from-green-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #15803d, transparent);
          }
        }
      }

      @include it('from-green-800') {
        @include assert {
          @include output {
            @include from-green-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #166534, transparent);
          }
        }
      }

      @include it('from-green-900') {
        @include assert {
          @include output {
            @include from-green-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #14532d, transparent);
          }
        }
      }

      @include it('from-green-950') {
        @include assert {
          @include output {
            @include from-green-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #052e16, transparent);
          }
        }
      }

      @include it('from-emerald-50') {
        @include assert {
          @include output {
            @include from-emerald-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ecfdf5, transparent);
          }
        }
      }

      @include it('from-emerald-100') {
        @include assert {
          @include output {
            @include from-emerald-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d1fae5, transparent);
          }
        }
      }

      @include it('from-emerald-200') {
        @include assert {
          @include output {
            @include from-emerald-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a7f3d0, transparent);
          }
        }
      }

      @include it('from-emerald-300') {
        @include assert {
          @include output {
            @include from-emerald-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #6ee7b7, transparent);
          }
        }
      }

      @include it('from-emerald-400') {
        @include assert {
          @include output {
            @include from-emerald-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #34d399, transparent);
          }
        }
      }

      @include it('from-emerald-500') {
        @include assert {
          @include output {
            @include from-emerald-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #10b981, transparent);
          }
        }
      }

      @include it('from-emerald-600') {
        @include assert {
          @include output {
            @include from-emerald-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #059669, transparent);
          }
        }
      }

      @include it('from-emerald-700') {
        @include assert {
          @include output {
            @include from-emerald-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #047857, transparent);
          }
        }
      }

      @include it('from-emerald-800') {
        @include assert {
          @include output {
            @include from-emerald-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #065f46, transparent);
          }
        }
      }

      @include it('from-emerald-900') {
        @include assert {
          @include output {
            @include from-emerald-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #064e3b, transparent);
          }
        }
      }

      @include it('from-emerald-950') {
        @include assert {
          @include output {
            @include from-emerald-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #022c22, transparent);
          }
        }
      }

      @include it('from-teal-50') {
        @include assert {
          @include output {
            @include from-teal-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f0fdfa, transparent);
          }
        }
      }

      @include it('from-teal-100') {
        @include assert {
          @include output {
            @include from-teal-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ccfbf1, transparent);
          }
        }
      }

      @include it('from-teal-200') {
        @include assert {
          @include output {
            @include from-teal-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #99f6e4, transparent);
          }
        }
      }

      @include it('from-teal-300') {
        @include assert {
          @include output {
            @include from-teal-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #5eead4, transparent);
          }
        }
      }

      @include it('from-teal-400') {
        @include assert {
          @include output {
            @include from-teal-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #2dd4bf, transparent);
          }
        }
      }

      @include it('from-teal-500') {
        @include assert {
          @include output {
            @include from-teal-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #14b8a6, transparent);
          }
        }
      }

      @include it('from-teal-600') {
        @include assert {
          @include output {
            @include from-teal-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0d9488, transparent);
          }
        }
      }

      @include it('from-teal-700') {
        @include assert {
          @include output {
            @include from-teal-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0f766e, transparent);
          }
        }
      }

      @include it('from-teal-800') {
        @include assert {
          @include output {
            @include from-teal-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #115e59, transparent);
          }
        }
      }

      @include it('from-teal-900') {
        @include assert {
          @include output {
            @include from-teal-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #134e4a, transparent);
          }
        }
      }

      @include it('from-teal-950') {
        @include assert {
          @include output {
            @include from-teal-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #042f2e, transparent);
          }
        }
      }

      @include it('from-cyan-50') {
        @include assert {
          @include output {
            @include from-cyan-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ecfeff, transparent);
          }
        }
      }

      @include it('from-cyan-100') {
        @include assert {
          @include output {
            @include from-cyan-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #cffafe, transparent);
          }
        }
      }

      @include it('from-cyan-200') {
        @include assert {
          @include output {
            @include from-cyan-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a5f3fc, transparent);
          }
        }
      }

      @include it('from-cyan-300') {
        @include assert {
          @include output {
            @include from-cyan-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #67e8f9, transparent);
          }
        }
      }

      @include it('from-cyan-400') {
        @include assert {
          @include output {
            @include from-cyan-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #22d3ee, transparent);
          }
        }
      }

      @include it('from-cyan-500') {
        @include assert {
          @include output {
            @include from-cyan-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #06b6d4, transparent);
          }
        }
      }

      @include it('from-cyan-600') {
        @include assert {
          @include output {
            @include from-cyan-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0891b2, transparent);
          }
        }
      }

      @include it('from-cyan-700') {
        @include assert {
          @include output {
            @include from-cyan-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0e7490, transparent);
          }
        }
      }

      @include it('from-cyan-800') {
        @include assert {
          @include output {
            @include from-cyan-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #155e75, transparent);
          }
        }
      }

      @include it('from-cyan-900') {
        @include assert {
          @include output {
            @include from-cyan-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #164e63, transparent);
          }
        }
      }

      @include it('from-cyan-950') {
        @include assert {
          @include output {
            @include from-cyan-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #083344, transparent);
          }
        }
      }

      @include it('from-sky-50') {
        @include assert {
          @include output {
            @include from-sky-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f0f9ff, transparent);
          }
        }
      }

      @include it('from-sky-100') {
        @include assert {
          @include output {
            @include from-sky-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e0f2fe, transparent);
          }
        }
      }

      @include it('from-sky-200') {
        @include assert {
          @include output {
            @include from-sky-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #bae6fd, transparent);
          }
        }
      }

      @include it('from-sky-300') {
        @include assert {
          @include output {
            @include from-sky-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #7dd3fc, transparent);
          }
        }
      }

      @include it('from-sky-400') {
        @include assert {
          @include output {
            @include from-sky-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #38bdf8, transparent);
          }
        }
      }

      @include it('from-sky-500') {
        @include assert {
          @include output {
            @include from-sky-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0ea5e9, transparent);
          }
        }
      }

      @include it('from-sky-600') {
        @include assert {
          @include output {
            @include from-sky-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0284c7, transparent);
          }
        }
      }

      @include it('from-sky-700') {
        @include assert {
          @include output {
            @include from-sky-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0369a1, transparent);
          }
        }
      }

      @include it('from-sky-800') {
        @include assert {
          @include output {
            @include from-sky-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #075985, transparent);
          }
        }
      }

      @include it('from-sky-900') {
        @include assert {
          @include output {
            @include from-sky-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #0c4a6e, transparent);
          }
        }
      }

      @include it('from-sky-950') {
        @include assert {
          @include output {
            @include from-sky-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #082f49, transparent);
          }
        }
      }

      @include it('from-blue-50') {
        @include assert {
          @include output {
            @include from-blue-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #eff6ff, transparent);
          }
        }
      }

      @include it('from-blue-100') {
        @include assert {
          @include output {
            @include from-blue-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #dbeafe, transparent);
          }
        }
      }

      @include it('from-blue-200') {
        @include assert {
          @include output {
            @include from-blue-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #bfdbfe, transparent);
          }
        }
      }

      @include it('from-blue-300') {
        @include assert {
          @include output {
            @include from-blue-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #93c5fd, transparent);
          }
        }
      }

      @include it('from-blue-400') {
        @include assert {
          @include output {
            @include from-blue-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #60a5fa, transparent);
          }
        }
      }

      @include it('from-blue-500') {
        @include assert {
          @include output {
            @include from-blue-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #3b82f6, transparent);
          }
        }
      }

      @include it('from-blue-600') {
        @include assert {
          @include output {
            @include from-blue-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #2563eb, transparent);
          }
        }
      }

      @include it('from-blue-700') {
        @include assert {
          @include output {
            @include from-blue-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1d4ed8, transparent);
          }
        }
      }

      @include it('from-blue-800') {
        @include assert {
          @include output {
            @include from-blue-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1e40af, transparent);
          }
        }
      }

      @include it('from-blue-900') {
        @include assert {
          @include output {
            @include from-blue-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1e3a8a, transparent);
          }
        }
      }

      @include it('from-blue-950') {
        @include assert {
          @include output {
            @include from-blue-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #172554, transparent);
          }
        }
      }

      @include it('from-indigo-50') {
        @include assert {
          @include output {
            @include from-indigo-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #eef2ff, transparent);
          }
        }
      }

      @include it('from-indigo-100') {
        @include assert {
          @include output {
            @include from-indigo-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e0e7ff, transparent);
          }
        }
      }

      @include it('from-indigo-200') {
        @include assert {
          @include output {
            @include from-indigo-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #c7d2fe, transparent);
          }
        }
      }

      @include it('from-indigo-300') {
        @include assert {
          @include output {
            @include from-indigo-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a5b4fc, transparent);
          }
        }
      }

      @include it('from-indigo-400') {
        @include assert {
          @include output {
            @include from-indigo-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #818cf8, transparent);
          }
        }
      }

      @include it('from-indigo-500') {
        @include assert {
          @include output {
            @include from-indigo-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #6366f1, transparent);
          }
        }
      }

      @include it('from-indigo-600') {
        @include assert {
          @include output {
            @include from-indigo-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4f46e5, transparent);
          }
        }
      }

      @include it('from-indigo-700') {
        @include assert {
          @include output {
            @include from-indigo-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4338ca, transparent);
          }
        }
      }

      @include it('from-indigo-800') {
        @include assert {
          @include output {
            @include from-indigo-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #3730a3, transparent);
          }
        }
      }

      @include it('from-indigo-900') {
        @include assert {
          @include output {
            @include from-indigo-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #312e81, transparent);
          }
        }
      }

      @include it('from-indigo-950') {
        @include assert {
          @include output {
            @include from-indigo-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #1e1b4b, transparent);
          }
        }
      }

      @include it('from-violet-50') {
        @include assert {
          @include output {
            @include from-violet-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f5f3ff, transparent);
          }
        }
      }

      @include it('from-violet-100') {
        @include assert {
          @include output {
            @include from-violet-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ede9fe, transparent);
          }
        }
      }

      @include it('from-violet-200') {
        @include assert {
          @include output {
            @include from-violet-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ddd6fe, transparent);
          }
        }
      }

      @include it('from-violet-300') {
        @include assert {
          @include output {
            @include from-violet-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #c4b5fd, transparent);
          }
        }
      }

      @include it('from-violet-400') {
        @include assert {
          @include output {
            @include from-violet-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a78bfa, transparent);
          }
        }
      }

      @include it('from-violet-500') {
        @include assert {
          @include output {
            @include from-violet-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #8b5cf6, transparent);
          }
        }
      }

      @include it('from-violet-600') {
        @include assert {
          @include output {
            @include from-violet-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #7c3aed, transparent);
          }
        }
      }

      @include it('from-violet-700') {
        @include assert {
          @include output {
            @include from-violet-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #6d28d9, transparent);
          }
        }
      }

      @include it('from-violet-800') {
        @include assert {
          @include output {
            @include from-violet-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #5b21b6, transparent);
          }
        }
      }

      @include it('from-violet-900') {
        @include assert {
          @include output {
            @include from-violet-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4c1d95, transparent);
          }
        }
      }

      @include it('from-violet-950') {
        @include assert {
          @include output {
            @include from-violet-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #2e1065, transparent);
          }
        }
      }

      @include it('from-purple-50') {
        @include assert {
          @include output {
            @include from-purple-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #faf5ff, transparent);
          }
        }
      }

      @include it('from-purple-100') {
        @include assert {
          @include output {
            @include from-purple-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f3e8ff, transparent);
          }
        }
      }

      @include it('from-purple-200') {
        @include assert {
          @include output {
            @include from-purple-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e9d5ff, transparent);
          }
        }
      }

      @include it('from-purple-300') {
        @include assert {
          @include output {
            @include from-purple-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d8b4fe, transparent);
          }
        }
      }

      @include it('from-purple-400') {
        @include assert {
          @include output {
            @include from-purple-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #c084fc, transparent);
          }
        }
      }

      @include it('from-purple-500') {
        @include assert {
          @include output {
            @include from-purple-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a855f7, transparent);
          }
        }
      }

      @include it('from-purple-600') {
        @include assert {
          @include output {
            @include from-purple-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #9333ea, transparent);
          }
        }
      }

      @include it('from-purple-700') {
        @include assert {
          @include output {
            @include from-purple-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #7e22ce, transparent);
          }
        }
      }

      @include it('from-purple-800') {
        @include assert {
          @include output {
            @include from-purple-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #6b21a8, transparent);
          }
        }
      }

      @include it('from-purple-900') {
        @include assert {
          @include output {
            @include from-purple-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #581c87, transparent);
          }
        }
      }

      @include it('from-purple-950') {
        @include assert {
          @include output {
            @include from-purple-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #3b0764, transparent);
          }
        }
      }

      @include it('from-fuchsia-50') {
        @include assert {
          @include output {
            @include from-fuchsia-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fdf4ff, transparent);
          }
        }
      }

      @include it('from-fuchsia-100') {
        @include assert {
          @include output {
            @include from-fuchsia-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fae8ff, transparent);
          }
        }
      }

      @include it('from-fuchsia-200') {
        @include assert {
          @include output {
            @include from-fuchsia-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f5d0fe, transparent);
          }
        }
      }

      @include it('from-fuchsia-300') {
        @include assert {
          @include output {
            @include from-fuchsia-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f0abfc, transparent);
          }
        }
      }

      @include it('from-fuchsia-400') {
        @include assert {
          @include output {
            @include from-fuchsia-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e879f9, transparent);
          }
        }
      }

      @include it('from-fuchsia-500') {
        @include assert {
          @include output {
            @include from-fuchsia-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #d946ef, transparent);
          }
        }
      }

      @include it('from-fuchsia-600') {
        @include assert {
          @include output {
            @include from-fuchsia-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #c026d3, transparent);
          }
        }
      }

      @include it('from-fuchsia-700') {
        @include assert {
          @include output {
            @include from-fuchsia-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #a21caf, transparent);
          }
        }
      }

      @include it('from-fuchsia-800') {
        @include assert {
          @include output {
            @include from-fuchsia-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #86198f, transparent);
          }
        }
      }

      @include it('from-fuchsia-900') {
        @include assert {
          @include output {
            @include from-fuchsia-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #701a75, transparent);
          }
        }
      }

      @include it('from-fuchsia-950') {
        @include assert {
          @include output {
            @include from-fuchsia-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4a044e, transparent);
          }
        }
      }

      @include it('from-pink-50') {
        @include assert {
          @include output {
            @include from-pink-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fdf2f8, transparent);
          }
        }
      }

      @include it('from-pink-100') {
        @include assert {
          @include output {
            @include from-pink-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fce7f3, transparent);
          }
        }
      }

      @include it('from-pink-200') {
        @include assert {
          @include output {
            @include from-pink-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fbcfe8, transparent);
          }
        }
      }

      @include it('from-pink-300') {
        @include assert {
          @include output {
            @include from-pink-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f9a8d4, transparent);
          }
        }
      }

      @include it('from-pink-400') {
        @include assert {
          @include output {
            @include from-pink-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f472b6, transparent);
          }
        }
      }

      @include it('from-pink-500') {
        @include assert {
          @include output {
            @include from-pink-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ec4899, transparent);
          }
        }
      }

      @include it('from-pink-600') {
        @include assert {
          @include output {
            @include from-pink-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #db2777, transparent);
          }
        }
      }

      @include it('from-pink-700') {
        @include assert {
          @include output {
            @include from-pink-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #be185d, transparent);
          }
        }
      }

      @include it('from-pink-800') {
        @include assert {
          @include output {
            @include from-pink-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #9d174d, transparent);
          }
        }
      }

      @include it('from-pink-900') {
        @include assert {
          @include output {
            @include from-pink-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #831843, transparent);
          }
        }
      }

      @include it('from-pink-950') {
        @include assert {
          @include output {
            @include from-pink-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #500724, transparent);
          }
        }
      }

      @include it('from-rose-50') {
        @include assert {
          @include output {
            @include from-rose-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff1f2, transparent);
          }
        }
      }

      @include it('from-rose-100') {
        @include assert {
          @include output {
            @include from-rose-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #ffe4e6, transparent);
          }
        }
      }

      @include it('from-rose-200') {
        @include assert {
          @include output {
            @include from-rose-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fecdd3, transparent);
          }
        }
      }

      @include it('from-rose-300') {
        @include assert {
          @include output {
            @include from-rose-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fda4af, transparent);
          }
        }
      }

      @include it('from-rose-400') {
        @include assert {
          @include output {
            @include from-rose-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fb7185, transparent);
          }
        }
      }

      @include it('from-rose-500') {
        @include assert {
          @include output {
            @include from-rose-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #f43f5e, transparent);
          }
        }
      }

      @include it('from-rose-600') {
        @include assert {
          @include output {
            @include from-rose-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #e11d48, transparent);
          }
        }
      }

      @include it('from-rose-700') {
        @include assert {
          @include output {
            @include from-rose-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #be123c, transparent);
          }
        }
      }

      @include it('from-rose-800') {
        @include assert {
          @include output {
            @include from-rose-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #9f1239, transparent);
          }
        }
      }

      @include it('from-rose-900') {
        @include assert {
          @include output {
            @include from-rose-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #881337, transparent);
          }
        }
      }

      @include it('from-rose-950') {
        @include assert {
          @include output {
            @include from-rose-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #4c0519, transparent);
          }
        }
      }

      @include it('from-0\%') {
        @include assert {
          @include output {
            @include from-0\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 0%, transparent);
          }
        }
      }

      @include it('from-5\%') {
        @include assert {
          @include output {
            @include from-5\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 5%, transparent);
          }
        }
      }

      @include it('from-10\%') {
        @include assert {
          @include output {
            @include from-10\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 10%, transparent);
          }
        }
      }

      @include it('from-15\%') {
        @include assert {
          @include output {
            @include from-15\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 15%, transparent);
          }
        }
      }

      @include it('from-20\%') {
        @include assert {
          @include output {
            @include from-20\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 20%, transparent);
          }
        }
      }

      @include it('from-25\%') {
        @include assert {
          @include output {
            @include from-25\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 25%, transparent);
          }
        }
      }

      @include it('from-30\%') {
        @include assert {
          @include output {
            @include from-30\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 30%, transparent);
          }
        }
      }

      @include it('from-35\%') {
        @include assert {
          @include output {
            @include from-35\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 35%, transparent);
          }
        }
      }

      @include it('from-40\%') {
        @include assert {
          @include output {
            @include from-40\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 40%, transparent);
          }
        }
      }

      @include it('from-45\%') {
        @include assert {
          @include output {
            @include from-45\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 45%, transparent);
          }
        }
      }

      @include it('from-50\%') {
        @include assert {
          @include output {
            @include from-50\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 50%, transparent);
          }
        }
      }

      @include it('from-55\%') {
        @include assert {
          @include output {
            @include from-55\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 55%, transparent);
          }
        }
      }

      @include it('from-60\%') {
        @include assert {
          @include output {
            @include from-60\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 60%, transparent);
          }
        }
      }

      @include it('from-65\%') {
        @include assert {
          @include output {
            @include from-65\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 65%, transparent);
          }
        }
      }

      @include it('from-70\%') {
        @include assert {
          @include output {
            @include from-70\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 70%, transparent);
          }
        }
      }

      @include it('from-75\%') {
        @include assert {
          @include output {
            @include from-75\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 75%, transparent);
          }
        }
      }

      @include it('from-80\%') {
        @include assert {
          @include output {
            @include from-80\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 80%, transparent);
          }
        }
      }

      @include it('from-85\%') {
        @include assert {
          @include output {
            @include from-85\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 85%, transparent);
          }
        }
      }

      @include it('from-90\%') {
        @include assert {
          @include output {
            @include from-90\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 90%, transparent);
          }
        }
      }

      @include it('from-95\%') {
        @include assert {
          @include output {
            @include from-95\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff 95%, transparent);
          }
        }
      }

      @include it('via-inherit') {
        @include assert {
          @include output {
            @include via-inherit;
            @include reset;
          }

          @include expect {
            background-image: inherit !important;
          }
        }
      }

      @include it('via-current') {
        @include assert {
          @include output {
            @include via-current;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(
              null,
              #fff,
              currentColor,
              transparent
            );
          }
        }
      }

      @include it('via-transparent') {
        @include assert {
          @include output {
            @include via-transparent;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(
              null,
              #fff,
              transparent,
              transparent
            );
          }
        }
      }

      @include it('via-slate-100') {
        @include assert {
          @include output {
            @include via-slate-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f1f5f9, transparent);
          }
        }
      }

      @include it('via-slate-200') {
        @include assert {
          @include output {
            @include via-slate-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e2e8f0, transparent);
          }
        }
      }

      @include it('via-slate-300') {
        @include assert {
          @include output {
            @include via-slate-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #cbd5e1, transparent);
          }
        }
      }

      @include it('via-slate-400') {
        @include assert {
          @include output {
            @include via-slate-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #94a3b8, transparent);
          }
        }
      }

      @include it('via-slate-500') {
        @include assert {
          @include output {
            @include via-slate-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #64748b, transparent);
          }
        }
      }

      @include it('via-slate-600') {
        @include assert {
          @include output {
            @include via-slate-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #475569, transparent);
          }
        }
      }

      @include it('via-slate-700') {
        @include assert {
          @include output {
            @include via-slate-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #334155, transparent);
          }
        }
      }

      @include it('via-slate-800') {
        @include assert {
          @include output {
            @include via-slate-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e293b, transparent);
          }
        }
      }

      @include it('via-slate-900') {
        @include assert {
          @include output {
            @include via-slate-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0f172a, transparent);
          }
        }
      }

      @include it('via-slate-950') {
        @include assert {
          @include output {
            @include via-slate-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #020617, transparent);
          }
        }
      }

      @include it('via-gray-50') {
        @include assert {
          @include output {
            @include via-gray-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f9fafb, transparent);
          }
        }
      }

      @include it('via-gray-100') {
        @include assert {
          @include output {
            @include via-gray-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f3f4f6, transparent);
          }
        }
      }

      @include it('via-gray-200') {
        @include assert {
          @include output {
            @include via-gray-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e5e7eb, transparent);
          }
        }
      }

      @include it('via-gray-300') {
        @include assert {
          @include output {
            @include via-gray-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d1d5db, transparent);
          }
        }
      }

      @include it('via-gray-400') {
        @include assert {
          @include output {
            @include via-gray-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9ca3af, transparent);
          }
        }
      }

      @include it('via-gray-500') {
        @include assert {
          @include output {
            @include via-gray-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6b7280, transparent);
          }
        }
      }

      @include it('via-gray-600') {
        @include assert {
          @include output {
            @include via-gray-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4b5563, transparent);
          }
        }
      }

      @include it('via-gray-700') {
        @include assert {
          @include output {
            @include via-gray-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #374151, transparent);
          }
        }
      }

      @include it('via-gray-800') {
        @include assert {
          @include output {
            @include via-gray-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1f2937, transparent);
          }
        }
      }

      @include it('via-gray-900') {
        @include assert {
          @include output {
            @include via-gray-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #111827, transparent);
          }
        }
      }

      @include it('via-gray-950') {
        @include assert {
          @include output {
            @include via-gray-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #030712, transparent);
          }
        }
      }

      @include it('via-zinc-50') {
        @include assert {
          @include output {
            @include via-zinc-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafafa, transparent);
          }
        }
      }

      @include it('via-zinc-100') {
        @include assert {
          @include output {
            @include via-zinc-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f4f4f5, transparent);
          }
        }
      }

      @include it('via-zinc-200') {
        @include assert {
          @include output {
            @include via-zinc-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e4e4e7, transparent);
          }
        }
      }

      @include it('via-zinc-300') {
        @include assert {
          @include output {
            @include via-zinc-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d4d4d8, transparent);
          }
        }
      }

      @include it('via-zinc-400') {
        @include assert {
          @include output {
            @include via-zinc-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a1a1aa, transparent);
          }
        }
      }

      @include it('via-zinc-500') {
        @include assert {
          @include output {
            @include via-zinc-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #71717a, transparent);
          }
        }
      }

      @include it('via-zinc-600') {
        @include assert {
          @include output {
            @include via-zinc-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #52525b, transparent);
          }
        }
      }

      @include it('via-zinc-700') {
        @include assert {
          @include output {
            @include via-zinc-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3f3f46, transparent);
          }
        }
      }

      @include it('via-zinc-800') {
        @include assert {
          @include output {
            @include via-zinc-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #27272a, transparent);
          }
        }
      }

      @include it('via-zinc-900') {
        @include assert {
          @include output {
            @include via-zinc-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #18181b, transparent);
          }
        }
      }

      @include it('via-zinc-950') {
        @include assert {
          @include output {
            @include via-zinc-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #09090b, transparent);
          }
        }
      }

      @include it('via-neutral-50') {
        @include assert {
          @include output {
            @include via-neutral-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafafa, transparent);
          }
        }
      }

      @include it('via-neutral-100') {
        @include assert {
          @include output {
            @include via-neutral-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(
              null,
              #fff,
              #f5f5f5,
              transparent
            );
          }
        }
      }

      @include it('via-neutral-200') {
        @include assert {
          @include output {
            @include via-neutral-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e5e5e5, transparent);
          }
        }
      }

      @include it('via-neutral-300') {
        @include assert {
          @include output {
            @include via-neutral-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d4d4d4, transparent);
          }
        }
      }

      @include it('via-neutral-400') {
        @include assert {
          @include output {
            @include via-neutral-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a3a3a3, transparent);
          }
        }
      }

      @include it('via-neutral-500') {
        @include assert {
          @include output {
            @include via-neutral-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #737373, transparent);
          }
        }
      }

      @include it('via-neutral-600') {
        @include assert {
          @include output {
            @include via-neutral-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #525252, transparent);
          }
        }
      }

      @include it('via-neutral-700') {
        @include assert {
          @include output {
            @include via-neutral-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #404040, transparent);
          }
        }
      }

      @include it('via-neutral-800') {
        @include assert {
          @include output {
            @include via-neutral-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #262626, transparent);
          }
        }
      }

      @include it('via-neutral-900') {
        @include assert {
          @include output {
            @include via-neutral-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #171717, transparent);
          }
        }
      }

      @include it('via-neutral-950') {
        @include assert {
          @include output {
            @include via-neutral-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0a0a0a, transparent);
          }
        }
      }

      @include it('via-stone-50') {
        @include assert {
          @include output {
            @include via-stone-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafaf9, transparent);
          }
        }
      }

      @include it('via-stone-100') {
        @include assert {
          @include output {
            @include via-stone-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5f5f4, transparent);
          }
        }
      }

      @include it('via-stone-200') {
        @include assert {
          @include output {
            @include via-stone-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e7e5e4, transparent);
          }
        }
      }

      @include it('via-stone-300') {
        @include assert {
          @include output {
            @include via-stone-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d6d3d1, transparent);
          }
        }
      }

      @include it('via-stone-400') {
        @include assert {
          @include output {
            @include via-stone-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a8a29e, transparent);
          }
        }
      }

      @include it('via-stone-500') {
        @include assert {
          @include output {
            @include via-stone-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #78716c, transparent);
          }
        }
      }

      @include it('via-stone-600') {
        @include assert {
          @include output {
            @include via-stone-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #57534e, transparent);
          }
        }
      }

      @include it('via-stone-700') {
        @include assert {
          @include output {
            @include via-stone-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #44403c, transparent);
          }
        }
      }

      @include it('via-stone-800') {
        @include assert {
          @include output {
            @include via-stone-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #292524, transparent);
          }
        }
      }

      @include it('via-stone-900') {
        @include assert {
          @include output {
            @include via-stone-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1c1917, transparent);
          }
        }
      }

      @include it('via-stone-950') {
        @include assert {
          @include output {
            @include via-stone-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0c0a09, transparent);
          }
        }
      }

      @include it('via-red-50') {
        @include assert {
          @include output {
            @include via-red-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef2f2, transparent);
          }
        }
      }

      @include it('via-red-100') {
        @include assert {
          @include output {
            @include via-red-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fee2e2, transparent);
          }
        }
      }

      @include it('via-red-200') {
        @include assert {
          @include output {
            @include via-red-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fecaca, transparent);
          }
        }
      }

      @include it('via-red-300') {
        @include assert {
          @include output {
            @include via-red-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fca5a5, transparent);
          }
        }
      }

      @include it('via-red-400') {
        @include assert {
          @include output {
            @include via-red-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f87171, transparent);
          }
        }
      }

      @include it('via-red-500') {
        @include assert {
          @include output {
            @include via-red-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ef4444, transparent);
          }
        }
      }

      @include it('via-red-600') {
        @include assert {
          @include output {
            @include via-red-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dc2626, transparent);
          }
        }
      }

      @include it('via-red-700') {
        @include assert {
          @include output {
            @include via-red-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #b91c1c, transparent);
          }
        }
      }

      @include it('via-red-800') {
        @include assert {
          @include output {
            @include via-red-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #991b1b, transparent);
          }
        }
      }

      @include it('via-red-900') {
        @include assert {
          @include output {
            @include via-red-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7f1d1d, transparent);
          }
        }
      }

      @include it('via-red-950') {
        @include assert {
          @include output {
            @include via-red-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #450a0a, transparent);
          }
        }
      }

      @include it('via-orange-50') {
        @include assert {
          @include output {
            @include via-orange-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff7ed, transparent);
          }
        }
      }

      @include it('via-orange-100') {
        @include assert {
          @include output {
            @include via-orange-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ffedd5, transparent);
          }
        }
      }

      @include it('via-orange-200') {
        @include assert {
          @include output {
            @include via-orange-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fed7aa, transparent);
          }
        }
      }

      @include it('via-orange-300') {
        @include assert {
          @include output {
            @include via-orange-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdba74, transparent);
          }
        }
      }

      @include it('via-orange-400') {
        @include assert {
          @include output {
            @include via-orange-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fb923c, transparent);
          }
        }
      }

      @include it('via-orange-500') {
        @include assert {
          @include output {
            @include via-orange-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f97316, transparent);
          }
        }
      }

      @include it('via-orange-600') {
        @include assert {
          @include output {
            @include via-orange-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ea580c, transparent);
          }
        }
      }

      @include it('via-orange-700') {
        @include assert {
          @include output {
            @include via-orange-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c2410c, transparent);
          }
        }
      }

      @include it('via-orange-800') {
        @include assert {
          @include output {
            @include via-orange-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9a3412, transparent);
          }
        }
      }

      @include it('via-orange-900') {
        @include assert {
          @include output {
            @include via-orange-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7c2d12, transparent);
          }
        }
      }

      @include it('via-orange-950') {
        @include assert {
          @include output {
            @include via-orange-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #431407, transparent);
          }
        }
      }

      @include it('via-amber-50') {
        @include assert {
          @include output {
            @include via-amber-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fffbeb, transparent);
          }
        }
      }

      @include it('via-amber-100') {
        @include assert {
          @include output {
            @include via-amber-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef3c7, transparent);
          }
        }
      }

      @include it('via-amber-200') {
        @include assert {
          @include output {
            @include via-amber-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fde68a, transparent);
          }
        }
      }

      @include it('via-amber-300') {
        @include assert {
          @include output {
            @include via-amber-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fcd34d, transparent);
          }
        }
      }

      @include it('via-amber-400') {
        @include assert {
          @include output {
            @include via-amber-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fbbf24, transparent);
          }
        }
      }

      @include it('via-amber-500') {
        @include assert {
          @include output {
            @include via-amber-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f59e0b, transparent);
          }
        }
      }

      @include it('via-amber-600') {
        @include assert {
          @include output {
            @include via-amber-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d97706, transparent);
          }
        }
      }

      @include it('via-amber-700') {
        @include assert {
          @include output {
            @include via-amber-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #b45309, transparent);
          }
        }
      }

      @include it('via-amber-800') {
        @include assert {
          @include output {
            @include via-amber-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #92400e, transparent);
          }
        }
      }

      @include it('via-amber-900') {
        @include assert {
          @include output {
            @include via-amber-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #78350f, transparent);
          }
        }
      }

      @include it('via-amber-950') {
        @include assert {
          @include output {
            @include via-amber-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #451a03, transparent);
          }
        }
      }

      @include it('via-yellow-50') {
        @include assert {
          @include output {
            @include via-yellow-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fefce8, transparent);
          }
        }
      }

      @include it('via-yellow-100') {
        @include assert {
          @include output {
            @include via-yellow-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef9c3, transparent);
          }
        }
      }

      @include it('via-yellow-200') {
        @include assert {
          @include output {
            @include via-yellow-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef08a, transparent);
          }
        }
      }

      @include it('via-yellow-300') {
        @include assert {
          @include output {
            @include via-yellow-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fde047, transparent);
          }
        }
      }

      @include it('via-yellow-400') {
        @include assert {
          @include output {
            @include via-yellow-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #facc15, transparent);
          }
        }
      }

      @include it('via-yellow-500') {
        @include assert {
          @include output {
            @include via-yellow-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eab308, transparent);
          }
        }
      }

      @include it('via-yellow-600') {
        @include assert {
          @include output {
            @include via-yellow-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ca8a04, transparent);
          }
        }
      }

      @include it('via-yellow-700') {
        @include assert {
          @include output {
            @include via-yellow-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a16207, transparent);
          }
        }
      }

      @include it('via-yellow-800') {
        @include assert {
          @include output {
            @include via-yellow-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #854d0e, transparent);
          }
        }
      }

      @include it('via-yellow-900') {
        @include assert {
          @include output {
            @include via-yellow-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #713f12, transparent);
          }
        }
      }

      @include it('via-yellow-950') {
        @include assert {
          @include output {
            @include via-yellow-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #422006, transparent);
          }
        }
      }

      @include it('via-lime-50') {
        @include assert {
          @include output {
            @include via-lime-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f7fee7, transparent);
          }
        }
      }

      @include it('via-lime-100') {
        @include assert {
          @include output {
            @include via-lime-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfccb, transparent);
          }
        }
      }

      @include it('via-lime-200') {
        @include assert {
          @include output {
            @include via-lime-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d9f99d, transparent);
          }
        }
      }

      @include it('via-lime-300') {
        @include assert {
          @include output {
            @include via-lime-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bef264, transparent);
          }
        }
      }

      @include it('via-lime-400') {
        @include assert {
          @include output {
            @include via-lime-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a3e635, transparent);
          }
        }
      }

      @include it('via-lime-500') {
        @include assert {
          @include output {
            @include via-lime-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #84cc16, transparent);
          }
        }
      }

      @include it('via-lime-600') {
        @include assert {
          @include output {
            @include via-lime-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #65a30d, transparent);
          }
        }
      }

      @include it('via-lime-700') {
        @include assert {
          @include output {
            @include via-lime-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4d7c0f, transparent);
          }
        }
      }

      @include it('via-lime-800') {
        @include assert {
          @include output {
            @include via-lime-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3f6212, transparent);
          }
        }
      }

      @include it('via-lime-900') {
        @include assert {
          @include output {
            @include via-lime-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #365314, transparent);
          }
        }
      }

      @include it('via-lime-950') {
        @include assert {
          @include output {
            @include via-lime-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1a2e05, transparent);
          }
        }
      }

      @include it('via-green-50') {
        @include assert {
          @include output {
            @include via-green-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0fdf4, transparent);
          }
        }
      }

      @include it('via-green-100') {
        @include assert {
          @include output {
            @include via-green-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dcfce7, transparent);
          }
        }
      }

      @include it('via-green-200') {
        @include assert {
          @include output {
            @include via-green-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bbf7d0, transparent);
          }
        }
      }

      @include it('via-green-300') {
        @include assert {
          @include output {
            @include via-green-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #86efac, transparent);
          }
        }
      }

      @include it('via-green-400') {
        @include assert {
          @include output {
            @include via-green-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4ade80, transparent);
          }
        }
      }

      @include it('via-green-500') {
        @include assert {
          @include output {
            @include via-green-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #22c55e, transparent);
          }
        }
      }

      @include it('via-green-600') {
        @include assert {
          @include output {
            @include via-green-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #16a34a, transparent);
          }
        }
      }

      @include it('via-green-700') {
        @include assert {
          @include output {
            @include via-green-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #15803d, transparent);
          }
        }
      }

      @include it('via-green-800') {
        @include assert {
          @include output {
            @include via-green-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #166534, transparent);
          }
        }
      }

      @include it('via-green-900') {
        @include assert {
          @include output {
            @include via-green-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #14532d, transparent);
          }
        }
      }

      @include it('via-green-950') {
        @include assert {
          @include output {
            @include via-green-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #052e16, transparent);
          }
        }
      }

      @include it('via-emerald-50') {
        @include assert {
          @include output {
            @include via-emerald-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfdf5, transparent);
          }
        }
      }

      @include it('via-emerald-100') {
        @include assert {
          @include output {
            @include via-emerald-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d1fae5, transparent);
          }
        }
      }

      @include it('via-emerald-200') {
        @include assert {
          @include output {
            @include via-emerald-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a7f3d0, transparent);
          }
        }
      }

      @include it('via-emerald-300') {
        @include assert {
          @include output {
            @include via-emerald-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6ee7b7, transparent);
          }
        }
      }

      @include it('via-emerald-400') {
        @include assert {
          @include output {
            @include via-emerald-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #34d399, transparent);
          }
        }
      }

      @include it('via-emerald-500') {
        @include assert {
          @include output {
            @include via-emerald-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #10b981, transparent);
          }
        }
      }

      @include it('via-emerald-600') {
        @include assert {
          @include output {
            @include via-emerald-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #059669, transparent);
          }
        }
      }

      @include it('via-emerald-700') {
        @include assert {
          @include output {
            @include via-emerald-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #047857, transparent);
          }
        }
      }

      @include it('via-emerald-800') {
        @include assert {
          @include output {
            @include via-emerald-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #065f46, transparent);
          }
        }
      }

      @include it('via-emerald-900') {
        @include assert {
          @include output {
            @include via-emerald-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #064e3b, transparent);
          }
        }
      }

      @include it('via-emerald-950') {
        @include assert {
          @include output {
            @include via-emerald-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #022c22, transparent);
          }
        }
      }

      @include it('via-teal-50') {
        @include assert {
          @include output {
            @include via-teal-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0fdfa, transparent);
          }
        }
      }

      @include it('via-teal-100') {
        @include assert {
          @include output {
            @include via-teal-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ccfbf1, transparent);
          }
        }
      }

      @include it('via-teal-200') {
        @include assert {
          @include output {
            @include via-teal-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #99f6e4, transparent);
          }
        }
      }

      @include it('via-teal-300') {
        @include assert {
          @include output {
            @include via-teal-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #5eead4, transparent);
          }
        }
      }

      @include it('via-teal-400') {
        @include assert {
          @include output {
            @include via-teal-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2dd4bf, transparent);
          }
        }
      }

      @include it('via-teal-500') {
        @include assert {
          @include output {
            @include via-teal-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #14b8a6, transparent);
          }
        }
      }

      @include it('via-teal-600') {
        @include assert {
          @include output {
            @include via-teal-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0d9488, transparent);
          }
        }
      }

      @include it('via-teal-700') {
        @include assert {
          @include output {
            @include via-teal-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0f766e, transparent);
          }
        }
      }

      @include it('via-teal-800') {
        @include assert {
          @include output {
            @include via-teal-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #115e59, transparent);
          }
        }
      }

      @include it('via-teal-900') {
        @include assert {
          @include output {
            @include via-teal-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #134e4a, transparent);
          }
        }
      }

      @include it('via-teal-950') {
        @include assert {
          @include output {
            @include via-teal-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #042f2e, transparent);
          }
        }
      }

      @include it('via-cyan-50') {
        @include assert {
          @include output {
            @include via-cyan-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfeff, transparent);
          }
        }
      }

      @include it('via-cyan-100') {
        @include assert {
          @include output {
            @include via-cyan-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #cffafe, transparent);
          }
        }
      }

      @include it('via-cyan-200') {
        @include assert {
          @include output {
            @include via-cyan-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a5f3fc, transparent);
          }
        }
      }

      @include it('via-cyan-300') {
        @include assert {
          @include output {
            @include via-cyan-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #67e8f9, transparent);
          }
        }
      }

      @include it('via-cyan-400') {
        @include assert {
          @include output {
            @include via-cyan-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #22d3ee, transparent);
          }
        }
      }

      @include it('via-cyan-500') {
        @include assert {
          @include output {
            @include via-cyan-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #06b6d4, transparent);
          }
        }
      }

      @include it('via-cyan-600') {
        @include assert {
          @include output {
            @include via-cyan-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0891b2, transparent);
          }
        }
      }

      @include it('via-cyan-700') {
        @include assert {
          @include output {
            @include via-cyan-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0e7490, transparent);
          }
        }
      }

      @include it('via-cyan-800') {
        @include assert {
          @include output {
            @include via-cyan-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #155e75, transparent);
          }
        }
      }

      @include it('via-cyan-900') {
        @include assert {
          @include output {
            @include via-cyan-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #164e63, transparent);
          }
        }
      }

      @include it('via-cyan-950') {
        @include assert {
          @include output {
            @include via-cyan-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #083344, transparent);
          }
        }
      }

      @include it('via-sky-50') {
        @include assert {
          @include output {
            @include via-sky-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0f9ff, transparent);
          }
        }
      }

      @include it('via-sky-100') {
        @include assert {
          @include output {
            @include via-sky-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e0f2fe, transparent);
          }
        }
      }

      @include it('via-sky-200') {
        @include assert {
          @include output {
            @include via-sky-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bae6fd, transparent);
          }
        }
      }

      @include it('via-sky-300') {
        @include assert {
          @include output {
            @include via-sky-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7dd3fc, transparent);
          }
        }
      }

      @include it('via-sky-400') {
        @include assert {
          @include output {
            @include via-sky-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #38bdf8, transparent);
          }
        }
      }

      @include it('via-sky-500') {
        @include assert {
          @include output {
            @include via-sky-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0ea5e9, transparent);
          }
        }
      }

      @include it('via-sky-600') {
        @include assert {
          @include output {
            @include via-sky-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0284c7, transparent);
          }
        }
      }

      @include it('via-sky-700') {
        @include assert {
          @include output {
            @include via-sky-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0369a1, transparent);
          }
        }
      }

      @include it('via-sky-800') {
        @include assert {
          @include output {
            @include via-sky-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #075985, transparent);
          }
        }
      }

      @include it('via-sky-900') {
        @include assert {
          @include output {
            @include via-sky-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0c4a6e, transparent);
          }
        }
      }

      @include it('via-sky-950') {
        @include assert {
          @include output {
            @include via-sky-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #082f49, transparent);
          }
        }
      }

      @include it('via-blue-50') {
        @include assert {
          @include output {
            @include via-blue-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eff6ff, transparent);
          }
        }
      }

      @include it('via-blue-100') {
        @include assert {
          @include output {
            @include via-blue-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dbeafe, transparent);
          }
        }
      }

      @include it('via-blue-200') {
        @include assert {
          @include output {
            @include via-blue-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bfdbfe, transparent);
          }
        }
      }

      @include it('via-blue-300') {
        @include assert {
          @include output {
            @include via-blue-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #93c5fd, transparent);
          }
        }
      }

      @include it('via-blue-400') {
        @include assert {
          @include output {
            @include via-blue-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #60a5fa, transparent);
          }
        }
      }

      @include it('via-blue-500') {
        @include assert {
          @include output {
            @include via-blue-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3b82f6, transparent);
          }
        }
      }

      @include it('via-blue-600') {
        @include assert {
          @include output {
            @include via-blue-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2563eb, transparent);
          }
        }
      }

      @include it('via-blue-700') {
        @include assert {
          @include output {
            @include via-blue-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1d4ed8, transparent);
          }
        }
      }

      @include it('via-blue-800') {
        @include assert {
          @include output {
            @include via-blue-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e40af, transparent);
          }
        }
      }

      @include it('via-blue-900') {
        @include assert {
          @include output {
            @include via-blue-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e3a8a, transparent);
          }
        }
      }

      @include it('via-blue-950') {
        @include assert {
          @include output {
            @include via-blue-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #172554, transparent);
          }
        }
      }

      @include it('via-indigo-50') {
        @include assert {
          @include output {
            @include via-indigo-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eef2ff, transparent);
          }
        }
      }

      @include it('via-indigo-100') {
        @include assert {
          @include output {
            @include via-indigo-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e0e7ff, transparent);
          }
        }
      }

      @include it('via-indigo-200') {
        @include assert {
          @include output {
            @include via-indigo-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c7d2fe, transparent);
          }
        }
      }

      @include it('via-indigo-300') {
        @include assert {
          @include output {
            @include via-indigo-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a5b4fc, transparent);
          }
        }
      }

      @include it('via-indigo-400') {
        @include assert {
          @include output {
            @include via-indigo-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #818cf8, transparent);
          }
        }
      }

      @include it('via-indigo-500') {
        @include assert {
          @include output {
            @include via-indigo-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6366f1, transparent);
          }
        }
      }

      @include it('via-indigo-600') {
        @include assert {
          @include output {
            @include via-indigo-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4f46e5, transparent);
          }
        }
      }

      @include it('via-indigo-700') {
        @include assert {
          @include output {
            @include via-indigo-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4338ca, transparent);
          }
        }
      }

      @include it('via-indigo-800') {
        @include assert {
          @include output {
            @include via-indigo-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3730a3, transparent);
          }
        }
      }

      @include it('via-indigo-900') {
        @include assert {
          @include output {
            @include via-indigo-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #312e81, transparent);
          }
        }
      }

      @include it('via-indigo-950') {
        @include assert {
          @include output {
            @include via-indigo-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e1b4b, transparent);
          }
        }
      }

      @include it('via-violet-50') {
        @include assert {
          @include output {
            @include via-violet-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5f3ff, transparent);
          }
        }
      }

      @include it('via-violet-100') {
        @include assert {
          @include output {
            @include via-violet-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ede9fe, transparent);
          }
        }
      }

      @include it('via-violet-200') {
        @include assert {
          @include output {
            @include via-violet-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ddd6fe, transparent);
          }
        }
      }

      @include it('via-violet-300') {
        @include assert {
          @include output {
            @include via-violet-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c4b5fd, transparent);
          }
        }
      }

      @include it('via-violet-400') {
        @include assert {
          @include output {
            @include via-violet-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a78bfa, transparent);
          }
        }
      }

      @include it('via-violet-500') {
        @include assert {
          @include output {
            @include via-violet-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #8b5cf6, transparent);
          }
        }
      }

      @include it('via-violet-600') {
        @include assert {
          @include output {
            @include via-violet-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7c3aed, transparent);
          }
        }
      }

      @include it('via-violet-700') {
        @include assert {
          @include output {
            @include via-violet-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6d28d9, transparent);
          }
        }
      }

      @include it('via-violet-800') {
        @include assert {
          @include output {
            @include via-violet-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #5b21b6, transparent);
          }
        }
      }

      @include it('via-violet-900') {
        @include assert {
          @include output {
            @include via-violet-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4c1d95, transparent);
          }
        }
      }

      @include it('via-violet-950') {
        @include assert {
          @include output {
            @include via-violet-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2e1065, transparent);
          }
        }
      }

      @include it('via-purple-50') {
        @include assert {
          @include output {
            @include via-purple-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #faf5ff, transparent);
          }
        }
      }

      @include it('via-purple-100') {
        @include assert {
          @include output {
            @include via-purple-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f3e8ff, transparent);
          }
        }
      }

      @include it('via-purple-200') {
        @include assert {
          @include output {
            @include via-purple-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e9d5ff, transparent);
          }
        }
      }

      @include it('via-purple-300') {
        @include assert {
          @include output {
            @include via-purple-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d8b4fe, transparent);
          }
        }
      }

      @include it('via-purple-400') {
        @include assert {
          @include output {
            @include via-purple-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c084fc, transparent);
          }
        }
      }

      @include it('via-purple-500') {
        @include assert {
          @include output {
            @include via-purple-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a855f7, transparent);
          }
        }
      }

      @include it('via-purple-600') {
        @include assert {
          @include output {
            @include via-purple-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9333ea, transparent);
          }
        }
      }

      @include it('via-purple-700') {
        @include assert {
          @include output {
            @include via-purple-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7e22ce, transparent);
          }
        }
      }

      @include it('via-purple-800') {
        @include assert {
          @include output {
            @include via-purple-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6b21a8, transparent);
          }
        }
      }

      @include it('via-purple-900') {
        @include assert {
          @include output {
            @include via-purple-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #581c87, transparent);
          }
        }
      }

      @include it('via-purple-950') {
        @include assert {
          @include output {
            @include via-purple-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3b0764, transparent);
          }
        }
      }

      @include it('via-fuchsia-50') {
        @include assert {
          @include output {
            @include via-fuchsia-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdf4ff, transparent);
          }
        }
      }

      @include it('via-fuchsia-100') {
        @include assert {
          @include output {
            @include via-fuchsia-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fae8ff, transparent);
          }
        }
      }

      @include it('via-fuchsia-200') {
        @include assert {
          @include output {
            @include via-fuchsia-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5d0fe, transparent);
          }
        }
      }

      @include it('via-fuchsia-300') {
        @include assert {
          @include output {
            @include via-fuchsia-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0abfc, transparent);
          }
        }
      }

      @include it('via-fuchsia-400') {
        @include assert {
          @include output {
            @include via-fuchsia-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e879f9, transparent);
          }
        }
      }

      @include it('via-fuchsia-500') {
        @include assert {
          @include output {
            @include via-fuchsia-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d946ef, transparent);
          }
        }
      }

      @include it('via-fuchsia-600') {
        @include assert {
          @include output {
            @include via-fuchsia-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c026d3, transparent);
          }
        }
      }

      @include it('via-fuchsia-700') {
        @include assert {
          @include output {
            @include via-fuchsia-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a21caf, transparent);
          }
        }
      }

      @include it('via-fuchsia-800') {
        @include assert {
          @include output {
            @include via-fuchsia-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #86198f, transparent);
          }
        }
      }

      @include it('via-fuchsia-900') {
        @include assert {
          @include output {
            @include via-fuchsia-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #701a75, transparent);
          }
        }
      }

      @include it('via-fuchsia-950') {
        @include assert {
          @include output {
            @include via-fuchsia-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4a044e, transparent);
          }
        }
      }

      @include it('via-pink-50') {
        @include assert {
          @include output {
            @include via-pink-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdf2f8, transparent);
          }
        }
      }

      @include it('via-pink-100') {
        @include assert {
          @include output {
            @include via-pink-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fce7f3, transparent);
          }
        }
      }

      @include it('via-pink-200') {
        @include assert {
          @include output {
            @include via-pink-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fbcfe8, transparent);
          }
        }
      }

      @include it('via-pink-300') {
        @include assert {
          @include output {
            @include via-pink-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f9a8d4, transparent);
          }
        }
      }

      @include it('via-pink-400') {
        @include assert {
          @include output {
            @include via-pink-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f472b6, transparent);
          }
        }
      }

      @include it('via-pink-500') {
        @include assert {
          @include output {
            @include via-pink-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ec4899, transparent);
          }
        }
      }

      @include it('via-pink-600') {
        @include assert {
          @include output {
            @include via-pink-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #db2777, transparent);
          }
        }
      }

      @include it('via-pink-700') {
        @include assert {
          @include output {
            @include via-pink-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #be185d, transparent);
          }
        }
      }

      @include it('via-pink-800') {
        @include assert {
          @include output {
            @include via-pink-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9d174d, transparent);
          }
        }
      }

      @include it('via-pink-900') {
        @include assert {
          @include output {
            @include via-pink-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #831843, transparent);
          }
        }
      }

      @include it('via-pink-950') {
        @include assert {
          @include output {
            @include via-pink-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #500724, transparent);
          }
        }
      }

      @include it('via-rose-50') {
        @include assert {
          @include output {
            @include via-rose-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff1f2, transparent);
          }
        }
      }

      @include it('via-rose-100') {
        @include assert {
          @include output {
            @include via-rose-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ffe4e6, transparent);
          }
        }
      }

      @include it('via-rose-200') {
        @include assert {
          @include output {
            @include via-rose-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fecdd3, transparent);
          }
        }
      }

      @include it('via-rose-300') {
        @include assert {
          @include output {
            @include via-rose-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fda4af, transparent);
          }
        }
      }

      @include it('via-rose-400') {
        @include assert {
          @include output {
            @include via-rose-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fb7185, transparent);
          }
        }
      }

      @include it('via-rose-500') {
        @include assert {
          @include output {
            @include via-rose-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f43f5e, transparent);
          }
        }
      }

      @include it('via-rose-600') {
        @include assert {
          @include output {
            @include via-rose-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e11d48, transparent);
          }
        }
      }

      @include it('via-rose-700') {
        @include assert {
          @include output {
            @include via-rose-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #be123c, transparent);
          }
        }
      }

      @include it('via-rose-800') {
        @include assert {
          @include output {
            @include via-rose-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9f1239, transparent);
          }
        }
      }

      @include it('via-rose-900') {
        @include assert {
          @include output {
            @include via-rose-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #881337, transparent);
          }
        }
      }

      @include it('via-rose-950') {
        @include assert {
          @include output {
            @include via-rose-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4c0519, transparent);
          }
        }
      }

      @include it('via-0\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-0\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 0%,
              transparent
            );
          }
        }
      }

      @include it('via-5\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-5\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 5%,
              transparent
            );
          }
        }
      }

      @include it('via-10\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-10\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 10%,
              transparent
            );
          }
        }
      }

      @include it('via-15\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-15\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 15%,
              transparent
            );
          }
        }
      }

      @include it('via-20\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-20\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 20%,
              transparent
            );
          }
        }
      }

      @include it('via-25\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-25\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 25%,
              transparent
            );
          }
        }
      }

      @include it('via-30\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-30\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 30%,
              transparent
            );
          }
        }
      }

      @include it('via-35\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-35\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 35%,
              transparent
            );
          }
        }
      }

      @include it('via-40\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-40\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 40%,
              transparent
            );
          }
        }
      }

      @include it('via-45\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-45\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 45%,
              transparent
            );
          }
        }
      }

      @include it('via-50\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-50\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 50%,
              transparent
            );
          }
        }
      }

      @include it('via-55\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-55\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 55%,
              transparent
            );
          }
        }
      }

      @include it('via-60\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-60\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 60%,
              transparent
            );
          }
        }
      }

      @include it('via-65\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-65\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 65%,
              transparent
            );
          }
        }
      }

      @include it('via-70\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-70\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 70%,
              transparent
            );
          }
        }
      }

      @include it('via-75\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-75\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 75%,
              transparent
            );
          }
        }
      }

      @include it('via-80\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-80\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 80%,
              transparent
            );
          }
        }
      }

      @include it('via-85\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-85\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 85%,
              transparent
            );
          }
        }
      }

      @include it('via-90\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-90\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 90%,
              transparent
            );
          }
        }
      }

      @include it('via-95\%') {
        @include assert {
          @include output {
            @include via-white;
            @include via-95\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff, transparent);
            background-image: linear-gradient(
              null,
              #fff,
              #fff 95%,
              transparent
            );
          }
        }
      }

      @include it('to-inherit') {
        @include assert {
          @include output {
            @include to-inherit;
            @include reset;
          }

          @include expect {
            background-image: inherit !important;
          }
        }
      }

      @include it('to-current') {
        @include assert {
          @include output {
            @include to-current;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, currentColor);
          }
        }
      }

      @include it('to-transparent') {
        @include assert {
          @include output {
            @include to-transparent;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, transparent);
          }
        }
      }

      @include it('to-slate-100') {
        @include assert {
          @include output {
            @include to-slate-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f1f5f9);
          }
        }
      }

      @include it('to-slate-200') {
        @include assert {
          @include output {
            @include to-slate-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e2e8f0);
          }
        }
      }

      @include it('to-slate-300') {
        @include assert {
          @include output {
            @include to-slate-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #cbd5e1);
          }
        }
      }

      @include it('to-slate-400') {
        @include assert {
          @include output {
            @include to-slate-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #94a3b8);
          }
        }
      }

      @include it('to-slate-500') {
        @include assert {
          @include output {
            @include to-slate-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #64748b);
          }
        }
      }

      @include it('to-slate-600') {
        @include assert {
          @include output {
            @include to-slate-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #475569);
          }
        }
      }

      @include it('to-slate-700') {
        @include assert {
          @include output {
            @include to-slate-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #334155);
          }
        }
      }

      @include it('to-slate-800') {
        @include assert {
          @include output {
            @include to-slate-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e293b);
          }
        }
      }

      @include it('to-slate-900') {
        @include assert {
          @include output {
            @include to-slate-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0f172a);
          }
        }
      }

      @include it('to-slate-950') {
        @include assert {
          @include output {
            @include to-slate-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #020617);
          }
        }
      }

      @include it('to-gray-50') {
        @include assert {
          @include output {
            @include to-gray-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f9fafb);
          }
        }
      }

      @include it('to-gray-100') {
        @include assert {
          @include output {
            @include to-gray-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f3f4f6);
          }
        }
      }

      @include it('to-gray-200') {
        @include assert {
          @include output {
            @include to-gray-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e5e7eb);
          }
        }
      }

      @include it('to-gray-300') {
        @include assert {
          @include output {
            @include to-gray-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d1d5db);
          }
        }
      }

      @include it('to-gray-400') {
        @include assert {
          @include output {
            @include to-gray-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9ca3af);
          }
        }
      }

      @include it('to-gray-500') {
        @include assert {
          @include output {
            @include to-gray-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6b7280);
          }
        }
      }

      @include it('to-gray-600') {
        @include assert {
          @include output {
            @include to-gray-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4b5563);
          }
        }
      }

      @include it('to-gray-700') {
        @include assert {
          @include output {
            @include to-gray-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #374151);
          }
        }
      }

      @include it('to-gray-800') {
        @include assert {
          @include output {
            @include to-gray-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1f2937);
          }
        }
      }

      @include it('to-gray-900') {
        @include assert {
          @include output {
            @include to-gray-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #111827);
          }
        }
      }

      @include it('to-gray-950') {
        @include assert {
          @include output {
            @include to-gray-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #030712);
          }
        }
      }

      @include it('to-zinc-50') {
        @include assert {
          @include output {
            @include to-zinc-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafafa);
          }
        }
      }

      @include it('to-zinc-100') {
        @include assert {
          @include output {
            @include to-zinc-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f4f4f5);
          }
        }
      }

      @include it('to-zinc-200') {
        @include assert {
          @include output {
            @include to-zinc-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e4e4e7);
          }
        }
      }

      @include it('to-zinc-300') {
        @include assert {
          @include output {
            @include to-zinc-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d4d4d8);
          }
        }
      }

      @include it('to-zinc-400') {
        @include assert {
          @include output {
            @include to-zinc-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a1a1aa);
          }
        }
      }

      @include it('to-zinc-500') {
        @include assert {
          @include output {
            @include to-zinc-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #71717a);
          }
        }
      }

      @include it('to-zinc-600') {
        @include assert {
          @include output {
            @include to-zinc-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #52525b);
          }
        }
      }

      @include it('to-zinc-700') {
        @include assert {
          @include output {
            @include to-zinc-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3f3f46);
          }
        }
      }

      @include it('to-zinc-800') {
        @include assert {
          @include output {
            @include to-zinc-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #27272a);
          }
        }
      }

      @include it('to-zinc-900') {
        @include assert {
          @include output {
            @include to-zinc-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #18181b);
          }
        }
      }

      @include it('to-zinc-950') {
        @include assert {
          @include output {
            @include to-zinc-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #09090b);
          }
        }
      }

      @include it('to-neutral-50') {
        @include assert {
          @include output {
            @include to-neutral-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafafa);
          }
        }
      }

      @include it('to-neutral-100') {
        @include assert {
          @include output {
            @include to-neutral-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5f5f5);
          }
        }
      }

      @include it('to-neutral-200') {
        @include assert {
          @include output {
            @include to-neutral-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e5e5e5);
          }
        }
      }

      @include it('to-neutral-300') {
        @include assert {
          @include output {
            @include to-neutral-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d4d4d4);
          }
        }
      }

      @include it('to-neutral-400') {
        @include assert {
          @include output {
            @include to-neutral-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a3a3a3);
          }
        }
      }

      @include it('to-neutral-500') {
        @include assert {
          @include output {
            @include to-neutral-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #737373);
          }
        }
      }

      @include it('to-neutral-600') {
        @include assert {
          @include output {
            @include to-neutral-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #525252);
          }
        }
      }

      @include it('to-neutral-700') {
        @include assert {
          @include output {
            @include to-neutral-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #404040);
          }
        }
      }

      @include it('to-neutral-800') {
        @include assert {
          @include output {
            @include to-neutral-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #262626);
          }
        }
      }

      @include it('to-neutral-900') {
        @include assert {
          @include output {
            @include to-neutral-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #171717);
          }
        }
      }

      @include it('to-neutral-950') {
        @include assert {
          @include output {
            @include to-neutral-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0a0a0a);
          }
        }
      }

      @include it('to-stone-50') {
        @include assert {
          @include output {
            @include to-stone-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fafaf9);
          }
        }
      }

      @include it('to-stone-100') {
        @include assert {
          @include output {
            @include to-stone-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5f5f4);
          }
        }
      }

      @include it('to-stone-200') {
        @include assert {
          @include output {
            @include to-stone-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e7e5e4);
          }
        }
      }

      @include it('to-stone-300') {
        @include assert {
          @include output {
            @include to-stone-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d6d3d1);
          }
        }
      }

      @include it('to-stone-400') {
        @include assert {
          @include output {
            @include to-stone-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a8a29e);
          }
        }
      }

      @include it('to-stone-500') {
        @include assert {
          @include output {
            @include to-stone-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #78716c);
          }
        }
      }

      @include it('to-stone-600') {
        @include assert {
          @include output {
            @include to-stone-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #57534e);
          }
        }
      }

      @include it('to-stone-700') {
        @include assert {
          @include output {
            @include to-stone-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #44403c);
          }
        }
      }

      @include it('to-stone-800') {
        @include assert {
          @include output {
            @include to-stone-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #292524);
          }
        }
      }

      @include it('to-stone-900') {
        @include assert {
          @include output {
            @include to-stone-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1c1917);
          }
        }
      }

      @include it('to-stone-950') {
        @include assert {
          @include output {
            @include to-stone-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0c0a09);
          }
        }
      }

      @include it('to-red-50') {
        @include assert {
          @include output {
            @include to-red-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef2f2);
          }
        }
      }

      @include it('to-red-100') {
        @include assert {
          @include output {
            @include to-red-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fee2e2);
          }
        }
      }

      @include it('to-red-200') {
        @include assert {
          @include output {
            @include to-red-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fecaca);
          }
        }
      }

      @include it('to-red-300') {
        @include assert {
          @include output {
            @include to-red-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fca5a5);
          }
        }
      }

      @include it('to-red-400') {
        @include assert {
          @include output {
            @include to-red-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f87171);
          }
        }
      }

      @include it('to-red-500') {
        @include assert {
          @include output {
            @include to-red-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ef4444);
          }
        }
      }

      @include it('to-red-600') {
        @include assert {
          @include output {
            @include to-red-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dc2626);
          }
        }
      }

      @include it('to-red-700') {
        @include assert {
          @include output {
            @include to-red-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #b91c1c);
          }
        }
      }

      @include it('to-red-800') {
        @include assert {
          @include output {
            @include to-red-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #991b1b);
          }
        }
      }

      @include it('to-red-900') {
        @include assert {
          @include output {
            @include to-red-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7f1d1d);
          }
        }
      }

      @include it('to-red-950') {
        @include assert {
          @include output {
            @include to-red-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #450a0a);
          }
        }
      }

      @include it('to-orange-50') {
        @include assert {
          @include output {
            @include to-orange-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff7ed);
          }
        }
      }

      @include it('to-orange-100') {
        @include assert {
          @include output {
            @include to-orange-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ffedd5);
          }
        }
      }

      @include it('to-orange-200') {
        @include assert {
          @include output {
            @include to-orange-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fed7aa);
          }
        }
      }

      @include it('to-orange-300') {
        @include assert {
          @include output {
            @include to-orange-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdba74);
          }
        }
      }

      @include it('to-orange-400') {
        @include assert {
          @include output {
            @include to-orange-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fb923c);
          }
        }
      }

      @include it('to-orange-500') {
        @include assert {
          @include output {
            @include to-orange-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f97316);
          }
        }
      }

      @include it('to-orange-600') {
        @include assert {
          @include output {
            @include to-orange-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ea580c);
          }
        }
      }

      @include it('to-orange-700') {
        @include assert {
          @include output {
            @include to-orange-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c2410c);
          }
        }
      }

      @include it('to-orange-800') {
        @include assert {
          @include output {
            @include to-orange-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9a3412);
          }
        }
      }

      @include it('to-orange-900') {
        @include assert {
          @include output {
            @include to-orange-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7c2d12);
          }
        }
      }

      @include it('to-orange-950') {
        @include assert {
          @include output {
            @include to-orange-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #431407);
          }
        }
      }

      @include it('to-amber-50') {
        @include assert {
          @include output {
            @include to-amber-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fffbeb);
          }
        }
      }

      @include it('to-amber-100') {
        @include assert {
          @include output {
            @include to-amber-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef3c7);
          }
        }
      }

      @include it('to-amber-200') {
        @include assert {
          @include output {
            @include to-amber-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fde68a);
          }
        }
      }

      @include it('to-amber-300') {
        @include assert {
          @include output {
            @include to-amber-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fcd34d);
          }
        }
      }

      @include it('to-amber-400') {
        @include assert {
          @include output {
            @include to-amber-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fbbf24);
          }
        }
      }

      @include it('to-amber-500') {
        @include assert {
          @include output {
            @include to-amber-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f59e0b);
          }
        }
      }

      @include it('to-amber-600') {
        @include assert {
          @include output {
            @include to-amber-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d97706);
          }
        }
      }

      @include it('to-amber-700') {
        @include assert {
          @include output {
            @include to-amber-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #b45309);
          }
        }
      }

      @include it('to-amber-800') {
        @include assert {
          @include output {
            @include to-amber-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #92400e);
          }
        }
      }

      @include it('to-amber-900') {
        @include assert {
          @include output {
            @include to-amber-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #78350f);
          }
        }
      }

      @include it('to-amber-950') {
        @include assert {
          @include output {
            @include to-amber-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #451a03);
          }
        }
      }

      @include it('to-yellow-50') {
        @include assert {
          @include output {
            @include to-yellow-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fefce8);
          }
        }
      }

      @include it('to-yellow-100') {
        @include assert {
          @include output {
            @include to-yellow-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef9c3);
          }
        }
      }

      @include it('to-yellow-200') {
        @include assert {
          @include output {
            @include to-yellow-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fef08a);
          }
        }
      }

      @include it('to-yellow-300') {
        @include assert {
          @include output {
            @include to-yellow-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fde047);
          }
        }
      }

      @include it('to-yellow-400') {
        @include assert {
          @include output {
            @include to-yellow-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #facc15);
          }
        }
      }

      @include it('to-yellow-500') {
        @include assert {
          @include output {
            @include to-yellow-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eab308);
          }
        }
      }

      @include it('to-yellow-600') {
        @include assert {
          @include output {
            @include to-yellow-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ca8a04);
          }
        }
      }

      @include it('to-yellow-700') {
        @include assert {
          @include output {
            @include to-yellow-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a16207);
          }
        }
      }

      @include it('to-yellow-800') {
        @include assert {
          @include output {
            @include to-yellow-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #854d0e);
          }
        }
      }

      @include it('to-yellow-900') {
        @include assert {
          @include output {
            @include to-yellow-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #713f12);
          }
        }
      }

      @include it('to-yellow-950') {
        @include assert {
          @include output {
            @include to-yellow-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #422006);
          }
        }
      }

      @include it('to-lime-50') {
        @include assert {
          @include output {
            @include to-lime-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f7fee7);
          }
        }
      }

      @include it('to-lime-100') {
        @include assert {
          @include output {
            @include to-lime-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfccb);
          }
        }
      }

      @include it('to-lime-200') {
        @include assert {
          @include output {
            @include to-lime-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d9f99d);
          }
        }
      }

      @include it('to-lime-300') {
        @include assert {
          @include output {
            @include to-lime-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bef264);
          }
        }
      }

      @include it('to-lime-400') {
        @include assert {
          @include output {
            @include to-lime-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a3e635);
          }
        }
      }

      @include it('to-lime-500') {
        @include assert {
          @include output {
            @include to-lime-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #84cc16);
          }
        }
      }

      @include it('to-lime-600') {
        @include assert {
          @include output {
            @include to-lime-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #65a30d);
          }
        }
      }

      @include it('to-lime-700') {
        @include assert {
          @include output {
            @include to-lime-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4d7c0f);
          }
        }
      }

      @include it('to-lime-800') {
        @include assert {
          @include output {
            @include to-lime-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3f6212);
          }
        }
      }

      @include it('to-lime-900') {
        @include assert {
          @include output {
            @include to-lime-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #365314);
          }
        }
      }

      @include it('to-lime-950') {
        @include assert {
          @include output {
            @include to-lime-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1a2e05);
          }
        }
      }

      @include it('to-green-50') {
        @include assert {
          @include output {
            @include to-green-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0fdf4);
          }
        }
      }

      @include it('to-green-100') {
        @include assert {
          @include output {
            @include to-green-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dcfce7);
          }
        }
      }

      @include it('to-green-200') {
        @include assert {
          @include output {
            @include to-green-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bbf7d0);
          }
        }
      }

      @include it('to-green-300') {
        @include assert {
          @include output {
            @include to-green-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #86efac);
          }
        }
      }

      @include it('to-green-400') {
        @include assert {
          @include output {
            @include to-green-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4ade80);
          }
        }
      }

      @include it('to-green-500') {
        @include assert {
          @include output {
            @include to-green-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #22c55e);
          }
        }
      }

      @include it('to-green-600') {
        @include assert {
          @include output {
            @include to-green-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #16a34a);
          }
        }
      }

      @include it('to-green-700') {
        @include assert {
          @include output {
            @include to-green-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #15803d);
          }
        }
      }

      @include it('to-green-800') {
        @include assert {
          @include output {
            @include to-green-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #166534);
          }
        }
      }

      @include it('to-green-900') {
        @include assert {
          @include output {
            @include to-green-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #14532d);
          }
        }
      }

      @include it('to-green-950') {
        @include assert {
          @include output {
            @include to-green-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #052e16);
          }
        }
      }

      @include it('to-emerald-50') {
        @include assert {
          @include output {
            @include to-emerald-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfdf5);
          }
        }
      }

      @include it('to-emerald-100') {
        @include assert {
          @include output {
            @include to-emerald-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d1fae5);
          }
        }
      }

      @include it('to-emerald-200') {
        @include assert {
          @include output {
            @include to-emerald-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a7f3d0);
          }
        }
      }

      @include it('to-emerald-300') {
        @include assert {
          @include output {
            @include to-emerald-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6ee7b7);
          }
        }
      }

      @include it('to-emerald-400') {
        @include assert {
          @include output {
            @include to-emerald-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #34d399);
          }
        }
      }

      @include it('to-emerald-500') {
        @include assert {
          @include output {
            @include to-emerald-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #10b981);
          }
        }
      }

      @include it('to-emerald-600') {
        @include assert {
          @include output {
            @include to-emerald-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #059669);
          }
        }
      }

      @include it('to-emerald-700') {
        @include assert {
          @include output {
            @include to-emerald-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #047857);
          }
        }
      }

      @include it('to-emerald-800') {
        @include assert {
          @include output {
            @include to-emerald-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #065f46);
          }
        }
      }

      @include it('to-emerald-900') {
        @include assert {
          @include output {
            @include to-emerald-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #064e3b);
          }
        }
      }

      @include it('to-emerald-950') {
        @include assert {
          @include output {
            @include to-emerald-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #022c22);
          }
        }
      }

      @include it('to-teal-50') {
        @include assert {
          @include output {
            @include to-teal-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0fdfa);
          }
        }
      }

      @include it('to-teal-100') {
        @include assert {
          @include output {
            @include to-teal-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ccfbf1);
          }
        }
      }

      @include it('to-teal-200') {
        @include assert {
          @include output {
            @include to-teal-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #99f6e4);
          }
        }
      }

      @include it('to-teal-300') {
        @include assert {
          @include output {
            @include to-teal-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #5eead4);
          }
        }
      }

      @include it('to-teal-400') {
        @include assert {
          @include output {
            @include to-teal-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2dd4bf);
          }
        }
      }

      @include it('to-teal-500') {
        @include assert {
          @include output {
            @include to-teal-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #14b8a6);
          }
        }
      }

      @include it('to-teal-600') {
        @include assert {
          @include output {
            @include to-teal-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0d9488);
          }
        }
      }

      @include it('to-teal-700') {
        @include assert {
          @include output {
            @include to-teal-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0f766e);
          }
        }
      }

      @include it('to-teal-800') {
        @include assert {
          @include output {
            @include to-teal-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #115e59);
          }
        }
      }

      @include it('to-teal-900') {
        @include assert {
          @include output {
            @include to-teal-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #134e4a);
          }
        }
      }

      @include it('to-teal-950') {
        @include assert {
          @include output {
            @include to-teal-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #042f2e);
          }
        }
      }

      @include it('to-cyan-50') {
        @include assert {
          @include output {
            @include to-cyan-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ecfeff);
          }
        }
      }

      @include it('to-cyan-100') {
        @include assert {
          @include output {
            @include to-cyan-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #cffafe);
          }
        }
      }

      @include it('to-cyan-200') {
        @include assert {
          @include output {
            @include to-cyan-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a5f3fc);
          }
        }
      }

      @include it('to-cyan-300') {
        @include assert {
          @include output {
            @include to-cyan-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #67e8f9);
          }
        }
      }

      @include it('to-cyan-400') {
        @include assert {
          @include output {
            @include to-cyan-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #22d3ee);
          }
        }
      }

      @include it('to-cyan-500') {
        @include assert {
          @include output {
            @include to-cyan-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #06b6d4);
          }
        }
      }

      @include it('to-cyan-600') {
        @include assert {
          @include output {
            @include to-cyan-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0891b2);
          }
        }
      }

      @include it('to-cyan-700') {
        @include assert {
          @include output {
            @include to-cyan-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0e7490);
          }
        }
      }

      @include it('to-cyan-800') {
        @include assert {
          @include output {
            @include to-cyan-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #155e75);
          }
        }
      }

      @include it('to-cyan-900') {
        @include assert {
          @include output {
            @include to-cyan-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #164e63);
          }
        }
      }

      @include it('to-cyan-950') {
        @include assert {
          @include output {
            @include to-cyan-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #083344);
          }
        }
      }

      @include it('to-sky-50') {
        @include assert {
          @include output {
            @include to-sky-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0f9ff);
          }
        }
      }

      @include it('to-sky-100') {
        @include assert {
          @include output {
            @include to-sky-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e0f2fe);
          }
        }
      }

      @include it('to-sky-200') {
        @include assert {
          @include output {
            @include to-sky-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bae6fd);
          }
        }
      }

      @include it('to-sky-300') {
        @include assert {
          @include output {
            @include to-sky-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7dd3fc);
          }
        }
      }

      @include it('to-sky-400') {
        @include assert {
          @include output {
            @include to-sky-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #38bdf8);
          }
        }
      }

      @include it('to-sky-500') {
        @include assert {
          @include output {
            @include to-sky-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0ea5e9);
          }
        }
      }

      @include it('to-sky-600') {
        @include assert {
          @include output {
            @include to-sky-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0284c7);
          }
        }
      }

      @include it('to-sky-700') {
        @include assert {
          @include output {
            @include to-sky-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0369a1);
          }
        }
      }

      @include it('to-sky-800') {
        @include assert {
          @include output {
            @include to-sky-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #075985);
          }
        }
      }

      @include it('to-sky-900') {
        @include assert {
          @include output {
            @include to-sky-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #0c4a6e);
          }
        }
      }

      @include it('to-sky-950') {
        @include assert {
          @include output {
            @include to-sky-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #082f49);
          }
        }
      }

      @include it('to-blue-50') {
        @include assert {
          @include output {
            @include to-blue-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eff6ff);
          }
        }
      }

      @include it('to-blue-100') {
        @include assert {
          @include output {
            @include to-blue-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #dbeafe);
          }
        }
      }

      @include it('to-blue-200') {
        @include assert {
          @include output {
            @include to-blue-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #bfdbfe);
          }
        }
      }

      @include it('to-blue-300') {
        @include assert {
          @include output {
            @include to-blue-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #93c5fd);
          }
        }
      }

      @include it('to-blue-400') {
        @include assert {
          @include output {
            @include to-blue-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #60a5fa);
          }
        }
      }

      @include it('to-blue-500') {
        @include assert {
          @include output {
            @include to-blue-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3b82f6);
          }
        }
      }

      @include it('to-blue-600') {
        @include assert {
          @include output {
            @include to-blue-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2563eb);
          }
        }
      }

      @include it('to-blue-700') {
        @include assert {
          @include output {
            @include to-blue-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1d4ed8);
          }
        }
      }

      @include it('to-blue-800') {
        @include assert {
          @include output {
            @include to-blue-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e40af);
          }
        }
      }

      @include it('to-blue-900') {
        @include assert {
          @include output {
            @include to-blue-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e3a8a);
          }
        }
      }

      @include it('to-blue-950') {
        @include assert {
          @include output {
            @include to-blue-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #172554);
          }
        }
      }

      @include it('to-indigo-50') {
        @include assert {
          @include output {
            @include to-indigo-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #eef2ff);
          }
        }
      }

      @include it('to-indigo-100') {
        @include assert {
          @include output {
            @include to-indigo-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e0e7ff);
          }
        }
      }

      @include it('to-indigo-200') {
        @include assert {
          @include output {
            @include to-indigo-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c7d2fe);
          }
        }
      }

      @include it('to-indigo-300') {
        @include assert {
          @include output {
            @include to-indigo-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a5b4fc);
          }
        }
      }

      @include it('to-indigo-400') {
        @include assert {
          @include output {
            @include to-indigo-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #818cf8);
          }
        }
      }

      @include it('to-indigo-500') {
        @include assert {
          @include output {
            @include to-indigo-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6366f1);
          }
        }
      }

      @include it('to-indigo-600') {
        @include assert {
          @include output {
            @include to-indigo-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4f46e5);
          }
        }
      }

      @include it('to-indigo-700') {
        @include assert {
          @include output {
            @include to-indigo-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4338ca);
          }
        }
      }

      @include it('to-indigo-800') {
        @include assert {
          @include output {
            @include to-indigo-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3730a3);
          }
        }
      }

      @include it('to-indigo-900') {
        @include assert {
          @include output {
            @include to-indigo-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #312e81);
          }
        }
      }

      @include it('to-indigo-950') {
        @include assert {
          @include output {
            @include to-indigo-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #1e1b4b);
          }
        }
      }

      @include it('to-violet-50') {
        @include assert {
          @include output {
            @include to-violet-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5f3ff);
          }
        }
      }

      @include it('to-violet-100') {
        @include assert {
          @include output {
            @include to-violet-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ede9fe);
          }
        }
      }

      @include it('to-violet-200') {
        @include assert {
          @include output {
            @include to-violet-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ddd6fe);
          }
        }
      }

      @include it('to-violet-300') {
        @include assert {
          @include output {
            @include to-violet-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c4b5fd);
          }
        }
      }

      @include it('to-violet-400') {
        @include assert {
          @include output {
            @include to-violet-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a78bfa);
          }
        }
      }

      @include it('to-violet-500') {
        @include assert {
          @include output {
            @include to-violet-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #8b5cf6);
          }
        }
      }

      @include it('to-violet-600') {
        @include assert {
          @include output {
            @include to-violet-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7c3aed);
          }
        }
      }

      @include it('to-violet-700') {
        @include assert {
          @include output {
            @include to-violet-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6d28d9);
          }
        }
      }

      @include it('to-violet-800') {
        @include assert {
          @include output {
            @include to-violet-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #5b21b6);
          }
        }
      }

      @include it('to-violet-900') {
        @include assert {
          @include output {
            @include to-violet-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4c1d95);
          }
        }
      }

      @include it('to-violet-950') {
        @include assert {
          @include output {
            @include to-violet-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #2e1065);
          }
        }
      }

      @include it('to-purple-50') {
        @include assert {
          @include output {
            @include to-purple-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #faf5ff);
          }
        }
      }

      @include it('to-purple-100') {
        @include assert {
          @include output {
            @include to-purple-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f3e8ff);
          }
        }
      }

      @include it('to-purple-200') {
        @include assert {
          @include output {
            @include to-purple-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e9d5ff);
          }
        }
      }

      @include it('to-purple-300') {
        @include assert {
          @include output {
            @include to-purple-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d8b4fe);
          }
        }
      }

      @include it('to-purple-400') {
        @include assert {
          @include output {
            @include to-purple-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c084fc);
          }
        }
      }

      @include it('to-purple-500') {
        @include assert {
          @include output {
            @include to-purple-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a855f7);
          }
        }
      }

      @include it('to-purple-600') {
        @include assert {
          @include output {
            @include to-purple-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9333ea);
          }
        }
      }

      @include it('to-purple-700') {
        @include assert {
          @include output {
            @include to-purple-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #7e22ce);
          }
        }
      }

      @include it('to-purple-800') {
        @include assert {
          @include output {
            @include to-purple-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #6b21a8);
          }
        }
      }

      @include it('to-purple-900') {
        @include assert {
          @include output {
            @include to-purple-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #581c87);
          }
        }
      }

      @include it('to-purple-950') {
        @include assert {
          @include output {
            @include to-purple-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #3b0764);
          }
        }
      }

      @include it('to-fuchsia-50') {
        @include assert {
          @include output {
            @include to-fuchsia-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdf4ff);
          }
        }
      }

      @include it('to-fuchsia-100') {
        @include assert {
          @include output {
            @include to-fuchsia-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fae8ff);
          }
        }
      }

      @include it('to-fuchsia-200') {
        @include assert {
          @include output {
            @include to-fuchsia-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f5d0fe);
          }
        }
      }

      @include it('to-fuchsia-300') {
        @include assert {
          @include output {
            @include to-fuchsia-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f0abfc);
          }
        }
      }

      @include it('to-fuchsia-400') {
        @include assert {
          @include output {
            @include to-fuchsia-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e879f9);
          }
        }
      }

      @include it('to-fuchsia-500') {
        @include assert {
          @include output {
            @include to-fuchsia-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #d946ef);
          }
        }
      }

      @include it('to-fuchsia-600') {
        @include assert {
          @include output {
            @include to-fuchsia-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #c026d3);
          }
        }
      }

      @include it('to-fuchsia-700') {
        @include assert {
          @include output {
            @include to-fuchsia-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #a21caf);
          }
        }
      }

      @include it('to-fuchsia-800') {
        @include assert {
          @include output {
            @include to-fuchsia-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #86198f);
          }
        }
      }

      @include it('to-fuchsia-900') {
        @include assert {
          @include output {
            @include to-fuchsia-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #701a75);
          }
        }
      }

      @include it('to-fuchsia-950') {
        @include assert {
          @include output {
            @include to-fuchsia-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4a044e);
          }
        }
      }

      @include it('to-pink-50') {
        @include assert {
          @include output {
            @include to-pink-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fdf2f8);
          }
        }
      }

      @include it('to-pink-100') {
        @include assert {
          @include output {
            @include to-pink-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fce7f3);
          }
        }
      }

      @include it('to-pink-200') {
        @include assert {
          @include output {
            @include to-pink-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fbcfe8);
          }
        }
      }

      @include it('to-pink-300') {
        @include assert {
          @include output {
            @include to-pink-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f9a8d4);
          }
        }
      }

      @include it('to-pink-400') {
        @include assert {
          @include output {
            @include to-pink-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f472b6);
          }
        }
      }

      @include it('to-pink-500') {
        @include assert {
          @include output {
            @include to-pink-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ec4899);
          }
        }
      }

      @include it('to-pink-600') {
        @include assert {
          @include output {
            @include to-pink-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #db2777);
          }
        }
      }

      @include it('to-pink-700') {
        @include assert {
          @include output {
            @include to-pink-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #be185d);
          }
        }
      }

      @include it('to-pink-800') {
        @include assert {
          @include output {
            @include to-pink-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9d174d);
          }
        }
      }

      @include it('to-pink-900') {
        @include assert {
          @include output {
            @include to-pink-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #831843);
          }
        }
      }

      @include it('to-pink-950') {
        @include assert {
          @include output {
            @include to-pink-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #500724);
          }
        }
      }

      @include it('to-rose-50') {
        @include assert {
          @include output {
            @include to-rose-50;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff1f2);
          }
        }
      }

      @include it('to-rose-100') {
        @include assert {
          @include output {
            @include to-rose-100;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #ffe4e6);
          }
        }
      }

      @include it('to-rose-200') {
        @include assert {
          @include output {
            @include to-rose-200;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fecdd3);
          }
        }
      }

      @include it('to-rose-300') {
        @include assert {
          @include output {
            @include to-rose-300;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fda4af);
          }
        }
      }

      @include it('to-rose-400') {
        @include assert {
          @include output {
            @include to-rose-400;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fb7185);
          }
        }
      }

      @include it('to-rose-500') {
        @include assert {
          @include output {
            @include to-rose-500;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #f43f5e);
          }
        }
      }

      @include it('to-rose-600') {
        @include assert {
          @include output {
            @include to-rose-600;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #e11d48);
          }
        }
      }

      @include it('to-rose-700') {
        @include assert {
          @include output {
            @include to-rose-700;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #be123c);
          }
        }
      }

      @include it('to-rose-800') {
        @include assert {
          @include output {
            @include to-rose-800;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #9f1239);
          }
        }
      }

      @include it('to-rose-900') {
        @include assert {
          @include output {
            @include to-rose-900;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #881337);
          }
        }
      }

      @include it('to-rose-950') {
        @include assert {
          @include output {
            @include to-rose-950;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #4c0519);
          }
        }
      }

      @include it('to-0\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-0\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 0%);
          }
        }
      }

      @include it('to-5\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-5\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 5%);
          }
        }
      }

      @include it('to-10\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-10\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 10%);
          }
        }
      }

      @include it('to-15\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-15\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 15%);
          }
        }
      }

      @include it('to-20\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-20\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 20%);
          }
        }
      }

      @include it('to-25\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-25\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 25%);
          }
        }
      }

      @include it('to-30\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-30\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 30%);
          }
        }
      }

      @include it('to-35\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-35\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 35%);
          }
        }
      }

      @include it('to-40\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-40\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 40%);
          }
        }
      }

      @include it('to-45\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-45\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 45%);
          }
        }
      }

      @include it('to-50\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-50\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 50%);
          }
        }
      }

      @include it('to-55\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-55\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 55%);
          }
        }
      }

      @include it('to-60\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-60\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 60%);
          }
        }
      }

      @include it('to-65\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-65\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 65%);
          }
        }
      }

      @include it('to-70\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-70\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 70%);
          }
        }
      }

      @include it('to-75\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-75\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 75%);
          }
        }
      }

      @include it('to-80\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-80\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 80%);
          }
        }
      }

      @include it('to-85\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-85\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 85%);
          }
        }
      }

      @include it('to-90\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-90\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 90%);
          }
        }
      }

      @include it('to-95\%') {
        @include assert {
          @include output {
            @include to-white;
            @include to-95\%;
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #fff);
            background-image: linear-gradient(null, #fff, #fff 95%);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:from-inherit') {
        @include assert {
          @include output {
            @include sm\:from-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('sm\:from-current') {
        @include assert {
          @include output {
            @include sm\:from-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:from-transparent') {
        @include assert {
          @include output {
            @include sm\:from-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-100') {
        @include assert {
          @include output {
            @include sm\:from-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-200') {
        @include assert {
          @include output {
            @include sm\:from-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-300') {
        @include assert {
          @include output {
            @include sm\:from-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-400') {
        @include assert {
          @include output {
            @include sm\:from-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-500') {
        @include assert {
          @include output {
            @include sm\:from-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-600') {
        @include assert {
          @include output {
            @include sm\:from-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-700') {
        @include assert {
          @include output {
            @include sm\:from-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-800') {
        @include assert {
          @include output {
            @include sm\:from-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-900') {
        @include assert {
          @include output {
            @include sm\:from-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-slate-950') {
        @include assert {
          @include output {
            @include sm\:from-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-50') {
        @include assert {
          @include output {
            @include sm\:from-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-100') {
        @include assert {
          @include output {
            @include sm\:from-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-200') {
        @include assert {
          @include output {
            @include sm\:from-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-300') {
        @include assert {
          @include output {
            @include sm\:from-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-400') {
        @include assert {
          @include output {
            @include sm\:from-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-500') {
        @include assert {
          @include output {
            @include sm\:from-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-600') {
        @include assert {
          @include output {
            @include sm\:from-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-700') {
        @include assert {
          @include output {
            @include sm\:from-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-800') {
        @include assert {
          @include output {
            @include sm\:from-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-900') {
        @include assert {
          @include output {
            @include sm\:from-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }
      }

      @include it('sm\:from-gray-950') {
        @include assert {
          @include output {
            @include sm\:from-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-50') {
        @include assert {
          @include output {
            @include sm\:from-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-100') {
        @include assert {
          @include output {
            @include sm\:from-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-200') {
        @include assert {
          @include output {
            @include sm\:from-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-300') {
        @include assert {
          @include output {
            @include sm\:from-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-400') {
        @include assert {
          @include output {
            @include sm\:from-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-500') {
        @include assert {
          @include output {
            @include sm\:from-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-600') {
        @include assert {
          @include output {
            @include sm\:from-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-700') {
        @include assert {
          @include output {
            @include sm\:from-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-800') {
        @include assert {
          @include output {
            @include sm\:from-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-900') {
        @include assert {
          @include output {
            @include sm\:from-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-zinc-950') {
        @include assert {
          @include output {
            @include sm\:from-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-50') {
        @include assert {
          @include output {
            @include sm\:from-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-100') {
        @include assert {
          @include output {
            @include sm\:from-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f5f5f5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-200') {
        @include assert {
          @include output {
            @include sm\:from-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-300') {
        @include assert {
          @include output {
            @include sm\:from-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-400') {
        @include assert {
          @include output {
            @include sm\:from-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-500') {
        @include assert {
          @include output {
            @include sm\:from-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-600') {
        @include assert {
          @include output {
            @include sm\:from-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-700') {
        @include assert {
          @include output {
            @include sm\:from-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-800') {
        @include assert {
          @include output {
            @include sm\:from-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-900') {
        @include assert {
          @include output {
            @include sm\:from-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }
      }

      @include it('sm\:from-neutral-950') {
        @include assert {
          @include output {
            @include sm\:from-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-50') {
        @include assert {
          @include output {
            @include sm\:from-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-100') {
        @include assert {
          @include output {
            @include sm\:from-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-200') {
        @include assert {
          @include output {
            @include sm\:from-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-300') {
        @include assert {
          @include output {
            @include sm\:from-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-400') {
        @include assert {
          @include output {
            @include sm\:from-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-500') {
        @include assert {
          @include output {
            @include sm\:from-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-600') {
        @include assert {
          @include output {
            @include sm\:from-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-700') {
        @include assert {
          @include output {
            @include sm\:from-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-800') {
        @include assert {
          @include output {
            @include sm\:from-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-900') {
        @include assert {
          @include output {
            @include sm\:from-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }
      }

      @include it('sm\:from-stone-950') {
        @include assert {
          @include output {
            @include sm\:from-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-50') {
        @include assert {
          @include output {
            @include sm\:from-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-100') {
        @include assert {
          @include output {
            @include sm\:from-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-200') {
        @include assert {
          @include output {
            @include sm\:from-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-300') {
        @include assert {
          @include output {
            @include sm\:from-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-400') {
        @include assert {
          @include output {
            @include sm\:from-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-500') {
        @include assert {
          @include output {
            @include sm\:from-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-600') {
        @include assert {
          @include output {
            @include sm\:from-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-700') {
        @include assert {
          @include output {
            @include sm\:from-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-800') {
        @include assert {
          @include output {
            @include sm\:from-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-900') {
        @include assert {
          @include output {
            @include sm\:from-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-red-950') {
        @include assert {
          @include output {
            @include sm\:from-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-50') {
        @include assert {
          @include output {
            @include sm\:from-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-100') {
        @include assert {
          @include output {
            @include sm\:from-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-200') {
        @include assert {
          @include output {
            @include sm\:from-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-300') {
        @include assert {
          @include output {
            @include sm\:from-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-400') {
        @include assert {
          @include output {
            @include sm\:from-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-500') {
        @include assert {
          @include output {
            @include sm\:from-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-600') {
        @include assert {
          @include output {
            @include sm\:from-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-700') {
        @include assert {
          @include output {
            @include sm\:from-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-800') {
        @include assert {
          @include output {
            @include sm\:from-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-900') {
        @include assert {
          @include output {
            @include sm\:from-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }
      }

      @include it('sm\:from-orange-950') {
        @include assert {
          @include output {
            @include sm\:from-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-50') {
        @include assert {
          @include output {
            @include sm\:from-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-100') {
        @include assert {
          @include output {
            @include sm\:from-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-200') {
        @include assert {
          @include output {
            @include sm\:from-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-300') {
        @include assert {
          @include output {
            @include sm\:from-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-400') {
        @include assert {
          @include output {
            @include sm\:from-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-500') {
        @include assert {
          @include output {
            @include sm\:from-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-600') {
        @include assert {
          @include output {
            @include sm\:from-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-700') {
        @include assert {
          @include output {
            @include sm\:from-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-800') {
        @include assert {
          @include output {
            @include sm\:from-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-900') {
        @include assert {
          @include output {
            @include sm\:from-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }
      }

      @include it('sm\:from-amber-950') {
        @include assert {
          @include output {
            @include sm\:from-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-50') {
        @include assert {
          @include output {
            @include sm\:from-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-100') {
        @include assert {
          @include output {
            @include sm\:from-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-200') {
        @include assert {
          @include output {
            @include sm\:from-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-300') {
        @include assert {
          @include output {
            @include sm\:from-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-400') {
        @include assert {
          @include output {
            @include sm\:from-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-500') {
        @include assert {
          @include output {
            @include sm\:from-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-600') {
        @include assert {
          @include output {
            @include sm\:from-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-700') {
        @include assert {
          @include output {
            @include sm\:from-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-800') {
        @include assert {
          @include output {
            @include sm\:from-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-900') {
        @include assert {
          @include output {
            @include sm\:from-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }
      }

      @include it('sm\:from-yellow-950') {
        @include assert {
          @include output {
            @include sm\:from-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-50') {
        @include assert {
          @include output {
            @include sm\:from-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-100') {
        @include assert {
          @include output {
            @include sm\:from-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-200') {
        @include assert {
          @include output {
            @include sm\:from-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-300') {
        @include assert {
          @include output {
            @include sm\:from-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-400') {
        @include assert {
          @include output {
            @include sm\:from-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-500') {
        @include assert {
          @include output {
            @include sm\:from-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-600') {
        @include assert {
          @include output {
            @include sm\:from-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-700') {
        @include assert {
          @include output {
            @include sm\:from-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-800') {
        @include assert {
          @include output {
            @include sm\:from-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-900') {
        @include assert {
          @include output {
            @include sm\:from-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }
      }

      @include it('sm\:from-lime-950') {
        @include assert {
          @include output {
            @include sm\:from-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-50') {
        @include assert {
          @include output {
            @include sm\:from-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-100') {
        @include assert {
          @include output {
            @include sm\:from-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-200') {
        @include assert {
          @include output {
            @include sm\:from-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-300') {
        @include assert {
          @include output {
            @include sm\:from-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-400') {
        @include assert {
          @include output {
            @include sm\:from-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-500') {
        @include assert {
          @include output {
            @include sm\:from-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-600') {
        @include assert {
          @include output {
            @include sm\:from-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-700') {
        @include assert {
          @include output {
            @include sm\:from-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-800') {
        @include assert {
          @include output {
            @include sm\:from-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-900') {
        @include assert {
          @include output {
            @include sm\:from-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-green-950') {
        @include assert {
          @include output {
            @include sm\:from-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-50') {
        @include assert {
          @include output {
            @include sm\:from-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-100') {
        @include assert {
          @include output {
            @include sm\:from-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-200') {
        @include assert {
          @include output {
            @include sm\:from-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-300') {
        @include assert {
          @include output {
            @include sm\:from-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-400') {
        @include assert {
          @include output {
            @include sm\:from-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-500') {
        @include assert {
          @include output {
            @include sm\:from-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-600') {
        @include assert {
          @include output {
            @include sm\:from-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-700') {
        @include assert {
          @include output {
            @include sm\:from-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-800') {
        @include assert {
          @include output {
            @include sm\:from-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-900') {
        @include assert {
          @include output {
            @include sm\:from-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-emerald-950') {
        @include assert {
          @include output {
            @include sm\:from-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-50') {
        @include assert {
          @include output {
            @include sm\:from-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-100') {
        @include assert {
          @include output {
            @include sm\:from-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-200') {
        @include assert {
          @include output {
            @include sm\:from-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-300') {
        @include assert {
          @include output {
            @include sm\:from-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-400') {
        @include assert {
          @include output {
            @include sm\:from-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-500') {
        @include assert {
          @include output {
            @include sm\:from-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-600') {
        @include assert {
          @include output {
            @include sm\:from-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-700') {
        @include assert {
          @include output {
            @include sm\:from-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-800') {
        @include assert {
          @include output {
            @include sm\:from-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-900') {
        @include assert {
          @include output {
            @include sm\:from-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-teal-950') {
        @include assert {
          @include output {
            @include sm\:from-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-50') {
        @include assert {
          @include output {
            @include sm\:from-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-100') {
        @include assert {
          @include output {
            @include sm\:from-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-200') {
        @include assert {
          @include output {
            @include sm\:from-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-300') {
        @include assert {
          @include output {
            @include sm\:from-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-400') {
        @include assert {
          @include output {
            @include sm\:from-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-500') {
        @include assert {
          @include output {
            @include sm\:from-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-600') {
        @include assert {
          @include output {
            @include sm\:from-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-700') {
        @include assert {
          @include output {
            @include sm\:from-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-800') {
        @include assert {
          @include output {
            @include sm\:from-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-900') {
        @include assert {
          @include output {
            @include sm\:from-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }
      }

      @include it('sm\:from-cyan-950') {
        @include assert {
          @include output {
            @include sm\:from-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-50') {
        @include assert {
          @include output {
            @include sm\:from-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-100') {
        @include assert {
          @include output {
            @include sm\:from-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-200') {
        @include assert {
          @include output {
            @include sm\:from-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-300') {
        @include assert {
          @include output {
            @include sm\:from-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-400') {
        @include assert {
          @include output {
            @include sm\:from-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-500') {
        @include assert {
          @include output {
            @include sm\:from-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-600') {
        @include assert {
          @include output {
            @include sm\:from-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-700') {
        @include assert {
          @include output {
            @include sm\:from-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-800') {
        @include assert {
          @include output {
            @include sm\:from-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-900') {
        @include assert {
          @include output {
            @include sm\:from-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-sky-950') {
        @include assert {
          @include output {
            @include sm\:from-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-50') {
        @include assert {
          @include output {
            @include sm\:from-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-100') {
        @include assert {
          @include output {
            @include sm\:from-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-200') {
        @include assert {
          @include output {
            @include sm\:from-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-300') {
        @include assert {
          @include output {
            @include sm\:from-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-400') {
        @include assert {
          @include output {
            @include sm\:from-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-500') {
        @include assert {
          @include output {
            @include sm\:from-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-600') {
        @include assert {
          @include output {
            @include sm\:from-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-700') {
        @include assert {
          @include output {
            @include sm\:from-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-800') {
        @include assert {
          @include output {
            @include sm\:from-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-900') {
        @include assert {
          @include output {
            @include sm\:from-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }
      }

      @include it('sm\:from-blue-950') {
        @include assert {
          @include output {
            @include sm\:from-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-50') {
        @include assert {
          @include output {
            @include sm\:from-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-100') {
        @include assert {
          @include output {
            @include sm\:from-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-200') {
        @include assert {
          @include output {
            @include sm\:from-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-300') {
        @include assert {
          @include output {
            @include sm\:from-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-400') {
        @include assert {
          @include output {
            @include sm\:from-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-500') {
        @include assert {
          @include output {
            @include sm\:from-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-600') {
        @include assert {
          @include output {
            @include sm\:from-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-700') {
        @include assert {
          @include output {
            @include sm\:from-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-800') {
        @include assert {
          @include output {
            @include sm\:from-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-900') {
        @include assert {
          @include output {
            @include sm\:from-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }
      }

      @include it('sm\:from-indigo-950') {
        @include assert {
          @include output {
            @include sm\:from-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-50') {
        @include assert {
          @include output {
            @include sm\:from-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-100') {
        @include assert {
          @include output {
            @include sm\:from-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-200') {
        @include assert {
          @include output {
            @include sm\:from-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-300') {
        @include assert {
          @include output {
            @include sm\:from-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-400') {
        @include assert {
          @include output {
            @include sm\:from-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-500') {
        @include assert {
          @include output {
            @include sm\:from-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-600') {
        @include assert {
          @include output {
            @include sm\:from-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-700') {
        @include assert {
          @include output {
            @include sm\:from-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-800') {
        @include assert {
          @include output {
            @include sm\:from-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-900') {
        @include assert {
          @include output {
            @include sm\:from-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }
      }

      @include it('sm\:from-violet-950') {
        @include assert {
          @include output {
            @include sm\:from-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-50') {
        @include assert {
          @include output {
            @include sm\:from-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-100') {
        @include assert {
          @include output {
            @include sm\:from-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-200') {
        @include assert {
          @include output {
            @include sm\:from-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-300') {
        @include assert {
          @include output {
            @include sm\:from-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-400') {
        @include assert {
          @include output {
            @include sm\:from-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-500') {
        @include assert {
          @include output {
            @include sm\:from-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-600') {
        @include assert {
          @include output {
            @include sm\:from-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-700') {
        @include assert {
          @include output {
            @include sm\:from-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-800') {
        @include assert {
          @include output {
            @include sm\:from-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-900') {
        @include assert {
          @include output {
            @include sm\:from-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }
      }

      @include it('sm\:from-purple-950') {
        @include assert {
          @include output {
            @include sm\:from-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }
      }

      @include it('sm\:from-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:from-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-50') {
        @include assert {
          @include output {
            @include sm\:from-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-100') {
        @include assert {
          @include output {
            @include sm\:from-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-200') {
        @include assert {
          @include output {
            @include sm\:from-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-300') {
        @include assert {
          @include output {
            @include sm\:from-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-400') {
        @include assert {
          @include output {
            @include sm\:from-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-500') {
        @include assert {
          @include output {
            @include sm\:from-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-600') {
        @include assert {
          @include output {
            @include sm\:from-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-700') {
        @include assert {
          @include output {
            @include sm\:from-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-800') {
        @include assert {
          @include output {
            @include sm\:from-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-900') {
        @include assert {
          @include output {
            @include sm\:from-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }
      }

      @include it('sm\:from-pink-950') {
        @include assert {
          @include output {
            @include sm\:from-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-50') {
        @include assert {
          @include output {
            @include sm\:from-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-100') {
        @include assert {
          @include output {
            @include sm\:from-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-200') {
        @include assert {
          @include output {
            @include sm\:from-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-300') {
        @include assert {
          @include output {
            @include sm\:from-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-400') {
        @include assert {
          @include output {
            @include sm\:from-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-500') {
        @include assert {
          @include output {
            @include sm\:from-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-600') {
        @include assert {
          @include output {
            @include sm\:from-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-700') {
        @include assert {
          @include output {
            @include sm\:from-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-800') {
        @include assert {
          @include output {
            @include sm\:from-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-900') {
        @include assert {
          @include output {
            @include sm\:from-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }
      }

      @include it('sm\:from-rose-950') {
        @include assert {
          @include output {
            @include sm\:from-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }
      }

      @include it('sm\:from-0\%') {
        @include assert {
          @include output {
            @include sm\:from-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-5\%') {
        @include assert {
          @include output {
            @include sm\:from-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-10\%') {
        @include assert {
          @include output {
            @include sm\:from-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-15\%') {
        @include assert {
          @include output {
            @include sm\:from-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-20\%') {
        @include assert {
          @include output {
            @include sm\:from-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-25\%') {
        @include assert {
          @include output {
            @include sm\:from-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-30\%') {
        @include assert {
          @include output {
            @include sm\:from-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-35\%') {
        @include assert {
          @include output {
            @include sm\:from-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-40\%') {
        @include assert {
          @include output {
            @include sm\:from-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-45\%') {
        @include assert {
          @include output {
            @include sm\:from-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-50\%') {
        @include assert {
          @include output {
            @include sm\:from-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-55\%') {
        @include assert {
          @include output {
            @include sm\:from-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-60\%') {
        @include assert {
          @include output {
            @include sm\:from-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-65\%') {
        @include assert {
          @include output {
            @include sm\:from-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-70\%') {
        @include assert {
          @include output {
            @include sm\:from-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-75\%') {
        @include assert {
          @include output {
            @include sm\:from-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-80\%') {
        @include assert {
          @include output {
            @include sm\:from-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-85\%') {
        @include assert {
          @include output {
            @include sm\:from-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-90\%') {
        @include assert {
          @include output {
            @include sm\:from-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }
      }

      @include it('sm\:from-95\%') {
        @include assert {
          @include output {
            @include sm\:from-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }
      }

      @include it('sm\:via-inherit') {
        @include assert {
          @include output {
            @include sm\:via-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('sm\:via-current') {
        @include assert {
          @include output {
            @include sm\:via-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-transparent') {
        @include assert {
          @include output {
            @include sm\:via-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                transparent,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-100') {
        @include assert {
          @include output {
            @include sm\:via-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f1f5f9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-200') {
        @include assert {
          @include output {
            @include sm\:via-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e2e8f0,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-300') {
        @include assert {
          @include output {
            @include sm\:via-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #cbd5e1,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-400') {
        @include assert {
          @include output {
            @include sm\:via-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #94a3b8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-500') {
        @include assert {
          @include output {
            @include sm\:via-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #64748b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-600') {
        @include assert {
          @include output {
            @include sm\:via-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #475569,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-700') {
        @include assert {
          @include output {
            @include sm\:via-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #334155,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-800') {
        @include assert {
          @include output {
            @include sm\:via-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e293b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-900') {
        @include assert {
          @include output {
            @include sm\:via-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f172a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-slate-950') {
        @include assert {
          @include output {
            @include sm\:via-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #020617,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-50') {
        @include assert {
          @include output {
            @include sm\:via-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9fafb,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-100') {
        @include assert {
          @include output {
            @include sm\:via-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3f4f6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-200') {
        @include assert {
          @include output {
            @include sm\:via-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e7eb,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-300') {
        @include assert {
          @include output {
            @include sm\:via-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1d5db,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-400') {
        @include assert {
          @include output {
            @include sm\:via-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #9ca3af,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-500') {
        @include assert {
          @include output {
            @include sm\:via-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b7280,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-600') {
        @include assert {
          @include output {
            @include sm\:via-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4b5563,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-700') {
        @include assert {
          @include output {
            @include sm\:via-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #374151,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-800') {
        @include assert {
          @include output {
            @include sm\:via-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1f2937,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-900') {
        @include assert {
          @include output {
            @include sm\:via-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #111827,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-gray-950') {
        @include assert {
          @include output {
            @include sm\:via-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #030712,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-50') {
        @include assert {
          @include output {
            @include sm\:via-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-100') {
        @include assert {
          @include output {
            @include sm\:via-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f4f4f5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-200') {
        @include assert {
          @include output {
            @include sm\:via-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e4e4e7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-300') {
        @include assert {
          @include output {
            @include sm\:via-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-400') {
        @include assert {
          @include output {
            @include sm\:via-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a1a1aa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-500') {
        @include assert {
          @include output {
            @include sm\:via-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #71717a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-600') {
        @include assert {
          @include output {
            @include sm\:via-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #52525b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-700') {
        @include assert {
          @include output {
            @include sm\:via-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f3f46,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-800') {
        @include assert {
          @include output {
            @include sm\:via-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #27272a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-900') {
        @include assert {
          @include output {
            @include sm\:via-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #18181b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-zinc-950') {
        @include assert {
          @include output {
            @include sm\:via-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #09090b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-50') {
        @include assert {
          @include output {
            @include sm\:via-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-100') {
        @include assert {
          @include output {
            @include sm\:via-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-200') {
        @include assert {
          @include output {
            @include sm\:via-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e5e5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-300') {
        @include assert {
          @include output {
            @include sm\:via-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-400') {
        @include assert {
          @include output {
            @include sm\:via-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3a3a3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-500') {
        @include assert {
          @include output {
            @include sm\:via-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #737373,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-600') {
        @include assert {
          @include output {
            @include sm\:via-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #525252,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-700') {
        @include assert {
          @include output {
            @include sm\:via-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #404040,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-800') {
        @include assert {
          @include output {
            @include sm\:via-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #262626,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-900') {
        @include assert {
          @include output {
            @include sm\:via-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #171717,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-neutral-950') {
        @include assert {
          @include output {
            @include sm\:via-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0a0a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-50') {
        @include assert {
          @include output {
            @include sm\:via-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafaf9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-100') {
        @include assert {
          @include output {
            @include sm\:via-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-200') {
        @include assert {
          @include output {
            @include sm\:via-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e7e5e4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-300') {
        @include assert {
          @include output {
            @include sm\:via-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d6d3d1,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-400') {
        @include assert {
          @include output {
            @include sm\:via-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a8a29e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-500') {
        @include assert {
          @include output {
            @include sm\:via-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #78716c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-600') {
        @include assert {
          @include output {
            @include sm\:via-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #57534e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-700') {
        @include assert {
          @include output {
            @include sm\:via-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #44403c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-800') {
        @include assert {
          @include output {
            @include sm\:via-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #292524,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-900') {
        @include assert {
          @include output {
            @include sm\:via-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1c1917,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-stone-950') {
        @include assert {
          @include output {
            @include sm\:via-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c0a09,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-50') {
        @include assert {
          @include output {
            @include sm\:via-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef2f2,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-100') {
        @include assert {
          @include output {
            @include sm\:via-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fee2e2,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-200') {
        @include assert {
          @include output {
            @include sm\:via-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecaca,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-300') {
        @include assert {
          @include output {
            @include sm\:via-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fca5a5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-400') {
        @include assert {
          @include output {
            @include sm\:via-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f87171,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-500') {
        @include assert {
          @include output {
            @include sm\:via-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ef4444,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-600') {
        @include assert {
          @include output {
            @include sm\:via-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #dc2626,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-700') {
        @include assert {
          @include output {
            @include sm\:via-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #b91c1c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-800') {
        @include assert {
          @include output {
            @include sm\:via-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #991b1b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-900') {
        @include assert {
          @include output {
            @include sm\:via-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #7f1d1d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-red-950') {
        @include assert {
          @include output {
            @include sm\:via-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #450a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-50') {
        @include assert {
          @include output {
            @include sm\:via-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff7ed,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-100') {
        @include assert {
          @include output {
            @include sm\:via-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffedd5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-200') {
        @include assert {
          @include output {
            @include sm\:via-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fed7aa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-300') {
        @include assert {
          @include output {
            @include sm\:via-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdba74,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-400') {
        @include assert {
          @include output {
            @include sm\:via-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb923c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-500') {
        @include assert {
          @include output {
            @include sm\:via-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f97316,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-600') {
        @include assert {
          @include output {
            @include sm\:via-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ea580c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-700') {
        @include assert {
          @include output {
            @include sm\:via-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #c2410c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-800') {
        @include assert {
          @include output {
            @include sm\:via-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #9a3412,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-900') {
        @include assert {
          @include output {
            @include sm\:via-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c2d12,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-orange-950') {
        @include assert {
          @include output {
            @include sm\:via-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #431407,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-50') {
        @include assert {
          @include output {
            @include sm\:via-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fffbeb,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-100') {
        @include assert {
          @include output {
            @include sm\:via-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef3c7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-200') {
        @include assert {
          @include output {
            @include sm\:via-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde68a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-300') {
        @include assert {
          @include output {
            @include sm\:via-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fcd34d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-400') {
        @include assert {
          @include output {
            @include sm\:via-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbbf24,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-500') {
        @include assert {
          @include output {
            @include sm\:via-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f59e0b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-600') {
        @include assert {
          @include output {
            @include sm\:via-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d97706,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-700') {
        @include assert {
          @include output {
            @include sm\:via-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #b45309,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-800') {
        @include assert {
          @include output {
            @include sm\:via-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #92400e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-900') {
        @include assert {
          @include output {
            @include sm\:via-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #78350f,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-amber-950') {
        @include assert {
          @include output {
            @include sm\:via-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #451a03,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-50') {
        @include assert {
          @include output {
            @include sm\:via-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fefce8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-100') {
        @include assert {
          @include output {
            @include sm\:via-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef9c3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-200') {
        @include assert {
          @include output {
            @include sm\:via-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef08a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-300') {
        @include assert {
          @include output {
            @include sm\:via-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde047,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-400') {
        @include assert {
          @include output {
            @include sm\:via-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #facc15,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-500') {
        @include assert {
          @include output {
            @include sm\:via-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #eab308,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-600') {
        @include assert {
          @include output {
            @include sm\:via-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ca8a04,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-700') {
        @include assert {
          @include output {
            @include sm\:via-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a16207,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-800') {
        @include assert {
          @include output {
            @include sm\:via-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #854d0e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-900') {
        @include assert {
          @include output {
            @include sm\:via-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #713f12,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-yellow-950') {
        @include assert {
          @include output {
            @include sm\:via-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #422006,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-50') {
        @include assert {
          @include output {
            @include sm\:via-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f7fee7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-100') {
        @include assert {
          @include output {
            @include sm\:via-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfccb,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-200') {
        @include assert {
          @include output {
            @include sm\:via-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d9f99d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-300') {
        @include assert {
          @include output {
            @include sm\:via-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #bef264,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-400') {
        @include assert {
          @include output {
            @include sm\:via-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3e635,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-500') {
        @include assert {
          @include output {
            @include sm\:via-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #84cc16,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-600') {
        @include assert {
          @include output {
            @include sm\:via-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #65a30d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-700') {
        @include assert {
          @include output {
            @include sm\:via-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4d7c0f,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-800') {
        @include assert {
          @include output {
            @include sm\:via-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f6212,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-900') {
        @include assert {
          @include output {
            @include sm\:via-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #365314,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-lime-950') {
        @include assert {
          @include output {
            @include sm\:via-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1a2e05,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-50') {
        @include assert {
          @include output {
            @include sm\:via-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdf4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-100') {
        @include assert {
          @include output {
            @include sm\:via-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #dcfce7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-200') {
        @include assert {
          @include output {
            @include sm\:via-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #bbf7d0,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-300') {
        @include assert {
          @include output {
            @include sm\:via-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #86efac,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-400') {
        @include assert {
          @include output {
            @include sm\:via-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4ade80,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-500') {
        @include assert {
          @include output {
            @include sm\:via-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #22c55e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-600') {
        @include assert {
          @include output {
            @include sm\:via-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #16a34a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-700') {
        @include assert {
          @include output {
            @include sm\:via-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #15803d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-800') {
        @include assert {
          @include output {
            @include sm\:via-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #166534,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-900') {
        @include assert {
          @include output {
            @include sm\:via-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #14532d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-green-950') {
        @include assert {
          @include output {
            @include sm\:via-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #052e16,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-50') {
        @include assert {
          @include output {
            @include sm\:via-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfdf5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-100') {
        @include assert {
          @include output {
            @include sm\:via-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1fae5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-200') {
        @include assert {
          @include output {
            @include sm\:via-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a7f3d0,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-300') {
        @include assert {
          @include output {
            @include sm\:via-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #6ee7b7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-400') {
        @include assert {
          @include output {
            @include sm\:via-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #34d399,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-500') {
        @include assert {
          @include output {
            @include sm\:via-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #10b981,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-600') {
        @include assert {
          @include output {
            @include sm\:via-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #059669,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-700') {
        @include assert {
          @include output {
            @include sm\:via-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #047857,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-800') {
        @include assert {
          @include output {
            @include sm\:via-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #065f46,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-900') {
        @include assert {
          @include output {
            @include sm\:via-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #064e3b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-emerald-950') {
        @include assert {
          @include output {
            @include sm\:via-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #022c22,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-50') {
        @include assert {
          @include output {
            @include sm\:via-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdfa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-100') {
        @include assert {
          @include output {
            @include sm\:via-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ccfbf1,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-200') {
        @include assert {
          @include output {
            @include sm\:via-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #99f6e4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-300') {
        @include assert {
          @include output {
            @include sm\:via-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #5eead4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-400') {
        @include assert {
          @include output {
            @include sm\:via-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #2dd4bf,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-500') {
        @include assert {
          @include output {
            @include sm\:via-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #14b8a6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-600') {
        @include assert {
          @include output {
            @include sm\:via-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0d9488,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-700') {
        @include assert {
          @include output {
            @include sm\:via-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f766e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-800') {
        @include assert {
          @include output {
            @include sm\:via-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #115e59,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-900') {
        @include assert {
          @include output {
            @include sm\:via-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #134e4a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-teal-950') {
        @include assert {
          @include output {
            @include sm\:via-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #042f2e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-50') {
        @include assert {
          @include output {
            @include sm\:via-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfeff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-100') {
        @include assert {
          @include output {
            @include sm\:via-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #cffafe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-200') {
        @include assert {
          @include output {
            @include sm\:via-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5f3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-300') {
        @include assert {
          @include output {
            @include sm\:via-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #67e8f9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-400') {
        @include assert {
          @include output {
            @include sm\:via-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #22d3ee,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-500') {
        @include assert {
          @include output {
            @include sm\:via-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #06b6d4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-600') {
        @include assert {
          @include output {
            @include sm\:via-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0891b2,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-700') {
        @include assert {
          @include output {
            @include sm\:via-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0e7490,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-800') {
        @include assert {
          @include output {
            @include sm\:via-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #155e75,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-900') {
        @include assert {
          @include output {
            @include sm\:via-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #164e63,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-cyan-950') {
        @include assert {
          @include output {
            @include sm\:via-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #083344,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-50') {
        @include assert {
          @include output {
            @include sm\:via-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0f9ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-100') {
        @include assert {
          @include output {
            @include sm\:via-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0f2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-200') {
        @include assert {
          @include output {
            @include sm\:via-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #bae6fd,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-300') {
        @include assert {
          @include output {
            @include sm\:via-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #7dd3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-400') {
        @include assert {
          @include output {
            @include sm\:via-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #38bdf8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-500') {
        @include assert {
          @include output {
            @include sm\:via-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0ea5e9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-600') {
        @include assert {
          @include output {
            @include sm\:via-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0284c7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-700') {
        @include assert {
          @include output {
            @include sm\:via-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0369a1,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-800') {
        @include assert {
          @include output {
            @include sm\:via-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #075985,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-900') {
        @include assert {
          @include output {
            @include sm\:via-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c4a6e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-sky-950') {
        @include assert {
          @include output {
            @include sm\:via-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #082f49,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-50') {
        @include assert {
          @include output {
            @include sm\:via-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #eff6ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-100') {
        @include assert {
          @include output {
            @include sm\:via-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #dbeafe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-200') {
        @include assert {
          @include output {
            @include sm\:via-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #bfdbfe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-300') {
        @include assert {
          @include output {
            @include sm\:via-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #93c5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-400') {
        @include assert {
          @include output {
            @include sm\:via-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #60a5fa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-500') {
        @include assert {
          @include output {
            @include sm\:via-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b82f6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-600') {
        @include assert {
          @include output {
            @include sm\:via-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #2563eb,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-700') {
        @include assert {
          @include output {
            @include sm\:via-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1d4ed8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-800') {
        @include assert {
          @include output {
            @include sm\:via-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e40af,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-900') {
        @include assert {
          @include output {
            @include sm\:via-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e3a8a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-blue-950') {
        @include assert {
          @include output {
            @include sm\:via-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #172554,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-50') {
        @include assert {
          @include output {
            @include sm\:via-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #eef2ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-100') {
        @include assert {
          @include output {
            @include sm\:via-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0e7ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-200') {
        @include assert {
          @include output {
            @include sm\:via-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #c7d2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-300') {
        @include assert {
          @include output {
            @include sm\:via-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5b4fc,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-400') {
        @include assert {
          @include output {
            @include sm\:via-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #818cf8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-500') {
        @include assert {
          @include output {
            @include sm\:via-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #6366f1,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-600') {
        @include assert {
          @include output {
            @include sm\:via-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4f46e5,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-700') {
        @include assert {
          @include output {
            @include sm\:via-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4338ca,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-800') {
        @include assert {
          @include output {
            @include sm\:via-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #3730a3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-900') {
        @include assert {
          @include output {
            @include sm\:via-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #312e81,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-indigo-950') {
        @include assert {
          @include output {
            @include sm\:via-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e1b4b,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-50') {
        @include assert {
          @include output {
            @include sm\:via-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f3ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-100') {
        @include assert {
          @include output {
            @include sm\:via-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ede9fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-200') {
        @include assert {
          @include output {
            @include sm\:via-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ddd6fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-300') {
        @include assert {
          @include output {
            @include sm\:via-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #c4b5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-400') {
        @include assert {
          @include output {
            @include sm\:via-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a78bfa,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-500') {
        @include assert {
          @include output {
            @include sm\:via-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #8b5cf6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-600') {
        @include assert {
          @include output {
            @include sm\:via-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c3aed,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-700') {
        @include assert {
          @include output {
            @include sm\:via-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #6d28d9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-800') {
        @include assert {
          @include output {
            @include sm\:via-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #5b21b6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-900') {
        @include assert {
          @include output {
            @include sm\:via-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c1d95,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-violet-950') {
        @include assert {
          @include output {
            @include sm\:via-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #2e1065,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-50') {
        @include assert {
          @include output {
            @include sm\:via-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #faf5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-100') {
        @include assert {
          @include output {
            @include sm\:via-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3e8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-200') {
        @include assert {
          @include output {
            @include sm\:via-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e9d5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-300') {
        @include assert {
          @include output {
            @include sm\:via-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d8b4fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-400') {
        @include assert {
          @include output {
            @include sm\:via-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #c084fc,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-500') {
        @include assert {
          @include output {
            @include sm\:via-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a855f7,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-600') {
        @include assert {
          @include output {
            @include sm\:via-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #9333ea,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-700') {
        @include assert {
          @include output {
            @include sm\:via-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #7e22ce,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-800') {
        @include assert {
          @include output {
            @include sm\:via-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b21a8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-900') {
        @include assert {
          @include output {
            @include sm\:via-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #581c87,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-purple-950') {
        @include assert {
          @include output {
            @include sm\:via-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b0764,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf4ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fae8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5d0fe,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0abfc,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e879f9,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #d946ef,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #c026d3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #a21caf,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #86198f,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #701a75,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:via-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4a044e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-50') {
        @include assert {
          @include output {
            @include sm\:via-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf2f8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-100') {
        @include assert {
          @include output {
            @include sm\:via-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fce7f3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-200') {
        @include assert {
          @include output {
            @include sm\:via-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbcfe8,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-300') {
        @include assert {
          @include output {
            @include sm\:via-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9a8d4,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-400') {
        @include assert {
          @include output {
            @include sm\:via-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f472b6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-500') {
        @include assert {
          @include output {
            @include sm\:via-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ec4899,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-600') {
        @include assert {
          @include output {
            @include sm\:via-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #db2777,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-700') {
        @include assert {
          @include output {
            @include sm\:via-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #be185d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-800') {
        @include assert {
          @include output {
            @include sm\:via-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #9d174d,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-900') {
        @include assert {
          @include output {
            @include sm\:via-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #831843,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-pink-950') {
        @include assert {
          @include output {
            @include sm\:via-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #500724,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-50') {
        @include assert {
          @include output {
            @include sm\:via-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff1f2,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-100') {
        @include assert {
          @include output {
            @include sm\:via-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffe4e6,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-200') {
        @include assert {
          @include output {
            @include sm\:via-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecdd3,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-300') {
        @include assert {
          @include output {
            @include sm\:via-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fda4af,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-400') {
        @include assert {
          @include output {
            @include sm\:via-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb7185,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-500') {
        @include assert {
          @include output {
            @include sm\:via-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #f43f5e,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-600') {
        @include assert {
          @include output {
            @include sm\:via-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #e11d48,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-700') {
        @include assert {
          @include output {
            @include sm\:via-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #be123c,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-800') {
        @include assert {
          @include output {
            @include sm\:via-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #9f1239,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-900') {
        @include assert {
          @include output {
            @include sm\:via-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #881337,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-rose-950') {
        @include assert {
          @include output {
            @include sm\:via-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c0519,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-0\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 0%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-5\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 5%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-10\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 10%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-15\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 15%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-20\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 20%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-25\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 25%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-30\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 30%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-35\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 35%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-40\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 40%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-45\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 45%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-50\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 50%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-55\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 55%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-60\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 60%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-65\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 65%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-70\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 70%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-75\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 75%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-80\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 80%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-85\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 85%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-90\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 90%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:via-95\%') {
        @include assert {
          @include output {
            @include sm\:via-white;
            @include sm\:via-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 95%,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:to-inherit') {
        @include assert {
          @include output {
            @include sm\:to-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('sm\:to-current') {
        @include assert {
          @include output {
            @include sm\:to-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }
      }

      @include it('sm\:to-transparent') {
        @include assert {
          @include output {
            @include sm\:to-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }
      }

      @include it('sm\:to-slate-100') {
        @include assert {
          @include output {
            @include sm\:to-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }
      }

      @include it('sm\:to-slate-200') {
        @include assert {
          @include output {
            @include sm\:to-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }
      }

      @include it('sm\:to-slate-300') {
        @include assert {
          @include output {
            @include sm\:to-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }
      }

      @include it('sm\:to-slate-400') {
        @include assert {
          @include output {
            @include sm\:to-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }
      }

      @include it('sm\:to-slate-500') {
        @include assert {
          @include output {
            @include sm\:to-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }
      }

      @include it('sm\:to-slate-600') {
        @include assert {
          @include output {
            @include sm\:to-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }
      }

      @include it('sm\:to-slate-700') {
        @include assert {
          @include output {
            @include sm\:to-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }
      }

      @include it('sm\:to-slate-800') {
        @include assert {
          @include output {
            @include sm\:to-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }
      }

      @include it('sm\:to-slate-900') {
        @include assert {
          @include output {
            @include sm\:to-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }
      }

      @include it('sm\:to-slate-950') {
        @include assert {
          @include output {
            @include sm\:to-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }
      }

      @include it('sm\:to-gray-50') {
        @include assert {
          @include output {
            @include sm\:to-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }
      }

      @include it('sm\:to-gray-100') {
        @include assert {
          @include output {
            @include sm\:to-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }
      }

      @include it('sm\:to-gray-200') {
        @include assert {
          @include output {
            @include sm\:to-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }
      }

      @include it('sm\:to-gray-300') {
        @include assert {
          @include output {
            @include sm\:to-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }
      }

      @include it('sm\:to-gray-400') {
        @include assert {
          @include output {
            @include sm\:to-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }
      }

      @include it('sm\:to-gray-500') {
        @include assert {
          @include output {
            @include sm\:to-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }
      }

      @include it('sm\:to-gray-600') {
        @include assert {
          @include output {
            @include sm\:to-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }
      }

      @include it('sm\:to-gray-700') {
        @include assert {
          @include output {
            @include sm\:to-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }
      }

      @include it('sm\:to-gray-800') {
        @include assert {
          @include output {
            @include sm\:to-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }
      }

      @include it('sm\:to-gray-900') {
        @include assert {
          @include output {
            @include sm\:to-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }
      }

      @include it('sm\:to-gray-950') {
        @include assert {
          @include output {
            @include sm\:to-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }
      }

      @include it('sm\:to-zinc-50') {
        @include assert {
          @include output {
            @include sm\:to-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('sm\:to-zinc-100') {
        @include assert {
          @include output {
            @include sm\:to-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }
      }

      @include it('sm\:to-zinc-200') {
        @include assert {
          @include output {
            @include sm\:to-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }
      }

      @include it('sm\:to-zinc-300') {
        @include assert {
          @include output {
            @include sm\:to-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }
      }

      @include it('sm\:to-zinc-400') {
        @include assert {
          @include output {
            @include sm\:to-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }
      }

      @include it('sm\:to-zinc-500') {
        @include assert {
          @include output {
            @include sm\:to-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }
      }

      @include it('sm\:to-zinc-600') {
        @include assert {
          @include output {
            @include sm\:to-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }
      }

      @include it('sm\:to-zinc-700') {
        @include assert {
          @include output {
            @include sm\:to-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }
      }

      @include it('sm\:to-zinc-800') {
        @include assert {
          @include output {
            @include sm\:to-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }
      }

      @include it('sm\:to-zinc-900') {
        @include assert {
          @include output {
            @include sm\:to-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }
      }

      @include it('sm\:to-zinc-950') {
        @include assert {
          @include output {
            @include sm\:to-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }
      }

      @include it('sm\:to-neutral-50') {
        @include assert {
          @include output {
            @include sm\:to-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('sm\:to-neutral-100') {
        @include assert {
          @include output {
            @include sm\:to-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f5f5f5);
            }
          }
        }
      }

      @include it('sm\:to-neutral-200') {
        @include assert {
          @include output {
            @include sm\:to-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }
      }

      @include it('sm\:to-neutral-300') {
        @include assert {
          @include output {
            @include sm\:to-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }
      }

      @include it('sm\:to-neutral-400') {
        @include assert {
          @include output {
            @include sm\:to-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }
      }

      @include it('sm\:to-neutral-500') {
        @include assert {
          @include output {
            @include sm\:to-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }
      }

      @include it('sm\:to-neutral-600') {
        @include assert {
          @include output {
            @include sm\:to-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }
      }

      @include it('sm\:to-neutral-700') {
        @include assert {
          @include output {
            @include sm\:to-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }
      }

      @include it('sm\:to-neutral-800') {
        @include assert {
          @include output {
            @include sm\:to-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }
      }

      @include it('sm\:to-neutral-900') {
        @include assert {
          @include output {
            @include sm\:to-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }
      }

      @include it('sm\:to-neutral-950') {
        @include assert {
          @include output {
            @include sm\:to-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }
      }

      @include it('sm\:to-stone-50') {
        @include assert {
          @include output {
            @include sm\:to-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }
      }

      @include it('sm\:to-stone-100') {
        @include assert {
          @include output {
            @include sm\:to-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }
      }

      @include it('sm\:to-stone-200') {
        @include assert {
          @include output {
            @include sm\:to-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }
      }

      @include it('sm\:to-stone-300') {
        @include assert {
          @include output {
            @include sm\:to-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }
      }

      @include it('sm\:to-stone-400') {
        @include assert {
          @include output {
            @include sm\:to-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }
      }

      @include it('sm\:to-stone-500') {
        @include assert {
          @include output {
            @include sm\:to-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }
      }

      @include it('sm\:to-stone-600') {
        @include assert {
          @include output {
            @include sm\:to-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }
      }

      @include it('sm\:to-stone-700') {
        @include assert {
          @include output {
            @include sm\:to-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }
      }

      @include it('sm\:to-stone-800') {
        @include assert {
          @include output {
            @include sm\:to-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }
      }

      @include it('sm\:to-stone-900') {
        @include assert {
          @include output {
            @include sm\:to-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }
      }

      @include it('sm\:to-stone-950') {
        @include assert {
          @include output {
            @include sm\:to-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }
      }

      @include it('sm\:to-red-50') {
        @include assert {
          @include output {
            @include sm\:to-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }
      }

      @include it('sm\:to-red-100') {
        @include assert {
          @include output {
            @include sm\:to-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }
      }

      @include it('sm\:to-red-200') {
        @include assert {
          @include output {
            @include sm\:to-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }
      }

      @include it('sm\:to-red-300') {
        @include assert {
          @include output {
            @include sm\:to-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }
      }

      @include it('sm\:to-red-400') {
        @include assert {
          @include output {
            @include sm\:to-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }
      }

      @include it('sm\:to-red-500') {
        @include assert {
          @include output {
            @include sm\:to-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }
      }

      @include it('sm\:to-red-600') {
        @include assert {
          @include output {
            @include sm\:to-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }
      }

      @include it('sm\:to-red-700') {
        @include assert {
          @include output {
            @include sm\:to-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }
      }

      @include it('sm\:to-red-800') {
        @include assert {
          @include output {
            @include sm\:to-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }
      }

      @include it('sm\:to-red-900') {
        @include assert {
          @include output {
            @include sm\:to-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }
      }

      @include it('sm\:to-red-950') {
        @include assert {
          @include output {
            @include sm\:to-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }
      }

      @include it('sm\:to-orange-50') {
        @include assert {
          @include output {
            @include sm\:to-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }
      }

      @include it('sm\:to-orange-100') {
        @include assert {
          @include output {
            @include sm\:to-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }
      }

      @include it('sm\:to-orange-200') {
        @include assert {
          @include output {
            @include sm\:to-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }
      }

      @include it('sm\:to-orange-300') {
        @include assert {
          @include output {
            @include sm\:to-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }
      }

      @include it('sm\:to-orange-400') {
        @include assert {
          @include output {
            @include sm\:to-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }
      }

      @include it('sm\:to-orange-500') {
        @include assert {
          @include output {
            @include sm\:to-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }
      }

      @include it('sm\:to-orange-600') {
        @include assert {
          @include output {
            @include sm\:to-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }
      }

      @include it('sm\:to-orange-700') {
        @include assert {
          @include output {
            @include sm\:to-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }
      }

      @include it('sm\:to-orange-800') {
        @include assert {
          @include output {
            @include sm\:to-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }
      }

      @include it('sm\:to-orange-900') {
        @include assert {
          @include output {
            @include sm\:to-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }
      }

      @include it('sm\:to-orange-950') {
        @include assert {
          @include output {
            @include sm\:to-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }
      }

      @include it('sm\:to-amber-50') {
        @include assert {
          @include output {
            @include sm\:to-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }
      }

      @include it('sm\:to-amber-100') {
        @include assert {
          @include output {
            @include sm\:to-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }
      }

      @include it('sm\:to-amber-200') {
        @include assert {
          @include output {
            @include sm\:to-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }
      }

      @include it('sm\:to-amber-300') {
        @include assert {
          @include output {
            @include sm\:to-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }
      }

      @include it('sm\:to-amber-400') {
        @include assert {
          @include output {
            @include sm\:to-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }
      }

      @include it('sm\:to-amber-500') {
        @include assert {
          @include output {
            @include sm\:to-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }
      }

      @include it('sm\:to-amber-600') {
        @include assert {
          @include output {
            @include sm\:to-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }
      }

      @include it('sm\:to-amber-700') {
        @include assert {
          @include output {
            @include sm\:to-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }
      }

      @include it('sm\:to-amber-800') {
        @include assert {
          @include output {
            @include sm\:to-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }
      }

      @include it('sm\:to-amber-900') {
        @include assert {
          @include output {
            @include sm\:to-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }
      }

      @include it('sm\:to-amber-950') {
        @include assert {
          @include output {
            @include sm\:to-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }
      }

      @include it('sm\:to-yellow-50') {
        @include assert {
          @include output {
            @include sm\:to-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }
      }

      @include it('sm\:to-yellow-100') {
        @include assert {
          @include output {
            @include sm\:to-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }
      }

      @include it('sm\:to-yellow-200') {
        @include assert {
          @include output {
            @include sm\:to-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }
      }

      @include it('sm\:to-yellow-300') {
        @include assert {
          @include output {
            @include sm\:to-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }
      }

      @include it('sm\:to-yellow-400') {
        @include assert {
          @include output {
            @include sm\:to-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }
      }

      @include it('sm\:to-yellow-500') {
        @include assert {
          @include output {
            @include sm\:to-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }
      }

      @include it('sm\:to-yellow-600') {
        @include assert {
          @include output {
            @include sm\:to-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }
      }

      @include it('sm\:to-yellow-700') {
        @include assert {
          @include output {
            @include sm\:to-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }
      }

      @include it('sm\:to-yellow-800') {
        @include assert {
          @include output {
            @include sm\:to-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }
      }

      @include it('sm\:to-yellow-900') {
        @include assert {
          @include output {
            @include sm\:to-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }
      }

      @include it('sm\:to-yellow-950') {
        @include assert {
          @include output {
            @include sm\:to-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }
      }

      @include it('sm\:to-lime-50') {
        @include assert {
          @include output {
            @include sm\:to-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }
      }

      @include it('sm\:to-lime-100') {
        @include assert {
          @include output {
            @include sm\:to-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }
      }

      @include it('sm\:to-lime-200') {
        @include assert {
          @include output {
            @include sm\:to-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }
      }

      @include it('sm\:to-lime-300') {
        @include assert {
          @include output {
            @include sm\:to-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }
      }

      @include it('sm\:to-lime-400') {
        @include assert {
          @include output {
            @include sm\:to-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }
      }

      @include it('sm\:to-lime-500') {
        @include assert {
          @include output {
            @include sm\:to-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }
      }

      @include it('sm\:to-lime-600') {
        @include assert {
          @include output {
            @include sm\:to-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }
      }

      @include it('sm\:to-lime-700') {
        @include assert {
          @include output {
            @include sm\:to-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }
      }

      @include it('sm\:to-lime-800') {
        @include assert {
          @include output {
            @include sm\:to-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }
      }

      @include it('sm\:to-lime-900') {
        @include assert {
          @include output {
            @include sm\:to-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }
      }

      @include it('sm\:to-lime-950') {
        @include assert {
          @include output {
            @include sm\:to-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }
      }

      @include it('sm\:to-green-50') {
        @include assert {
          @include output {
            @include sm\:to-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }
      }

      @include it('sm\:to-green-100') {
        @include assert {
          @include output {
            @include sm\:to-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }
      }

      @include it('sm\:to-green-200') {
        @include assert {
          @include output {
            @include sm\:to-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }
      }

      @include it('sm\:to-green-300') {
        @include assert {
          @include output {
            @include sm\:to-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }
      }

      @include it('sm\:to-green-400') {
        @include assert {
          @include output {
            @include sm\:to-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }
      }

      @include it('sm\:to-green-500') {
        @include assert {
          @include output {
            @include sm\:to-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }
      }

      @include it('sm\:to-green-600') {
        @include assert {
          @include output {
            @include sm\:to-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }
      }

      @include it('sm\:to-green-700') {
        @include assert {
          @include output {
            @include sm\:to-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }
      }

      @include it('sm\:to-green-800') {
        @include assert {
          @include output {
            @include sm\:to-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }
      }

      @include it('sm\:to-green-900') {
        @include assert {
          @include output {
            @include sm\:to-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }
      }

      @include it('sm\:to-green-950') {
        @include assert {
          @include output {
            @include sm\:to-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }
      }

      @include it('sm\:to-emerald-50') {
        @include assert {
          @include output {
            @include sm\:to-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }
      }

      @include it('sm\:to-emerald-100') {
        @include assert {
          @include output {
            @include sm\:to-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }
      }

      @include it('sm\:to-emerald-200') {
        @include assert {
          @include output {
            @include sm\:to-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }
      }

      @include it('sm\:to-emerald-300') {
        @include assert {
          @include output {
            @include sm\:to-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }
      }

      @include it('sm\:to-emerald-400') {
        @include assert {
          @include output {
            @include sm\:to-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }
      }

      @include it('sm\:to-emerald-500') {
        @include assert {
          @include output {
            @include sm\:to-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }
      }

      @include it('sm\:to-emerald-600') {
        @include assert {
          @include output {
            @include sm\:to-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }
      }

      @include it('sm\:to-emerald-700') {
        @include assert {
          @include output {
            @include sm\:to-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }
      }

      @include it('sm\:to-emerald-800') {
        @include assert {
          @include output {
            @include sm\:to-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }
      }

      @include it('sm\:to-emerald-900') {
        @include assert {
          @include output {
            @include sm\:to-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }
      }

      @include it('sm\:to-emerald-950') {
        @include assert {
          @include output {
            @include sm\:to-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }
      }

      @include it('sm\:to-teal-50') {
        @include assert {
          @include output {
            @include sm\:to-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }
      }

      @include it('sm\:to-teal-100') {
        @include assert {
          @include output {
            @include sm\:to-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }
      }

      @include it('sm\:to-teal-200') {
        @include assert {
          @include output {
            @include sm\:to-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }
      }

      @include it('sm\:to-teal-300') {
        @include assert {
          @include output {
            @include sm\:to-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }
      }

      @include it('sm\:to-teal-400') {
        @include assert {
          @include output {
            @include sm\:to-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }
      }

      @include it('sm\:to-teal-500') {
        @include assert {
          @include output {
            @include sm\:to-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }
      }

      @include it('sm\:to-teal-600') {
        @include assert {
          @include output {
            @include sm\:to-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }
      }

      @include it('sm\:to-teal-700') {
        @include assert {
          @include output {
            @include sm\:to-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }
      }

      @include it('sm\:to-teal-800') {
        @include assert {
          @include output {
            @include sm\:to-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }
      }

      @include it('sm\:to-teal-900') {
        @include assert {
          @include output {
            @include sm\:to-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }
      }

      @include it('sm\:to-teal-950') {
        @include assert {
          @include output {
            @include sm\:to-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }
      }

      @include it('sm\:to-cyan-50') {
        @include assert {
          @include output {
            @include sm\:to-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }
      }

      @include it('sm\:to-cyan-100') {
        @include assert {
          @include output {
            @include sm\:to-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }
      }

      @include it('sm\:to-cyan-200') {
        @include assert {
          @include output {
            @include sm\:to-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }
      }

      @include it('sm\:to-cyan-300') {
        @include assert {
          @include output {
            @include sm\:to-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }
      }

      @include it('sm\:to-cyan-400') {
        @include assert {
          @include output {
            @include sm\:to-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }
      }

      @include it('sm\:to-cyan-500') {
        @include assert {
          @include output {
            @include sm\:to-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }
      }

      @include it('sm\:to-cyan-600') {
        @include assert {
          @include output {
            @include sm\:to-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }
      }

      @include it('sm\:to-cyan-700') {
        @include assert {
          @include output {
            @include sm\:to-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }
      }

      @include it('sm\:to-cyan-800') {
        @include assert {
          @include output {
            @include sm\:to-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }
      }

      @include it('sm\:to-cyan-900') {
        @include assert {
          @include output {
            @include sm\:to-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }
      }

      @include it('sm\:to-cyan-950') {
        @include assert {
          @include output {
            @include sm\:to-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }
      }

      @include it('sm\:to-sky-50') {
        @include assert {
          @include output {
            @include sm\:to-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }
      }

      @include it('sm\:to-sky-100') {
        @include assert {
          @include output {
            @include sm\:to-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }
      }

      @include it('sm\:to-sky-200') {
        @include assert {
          @include output {
            @include sm\:to-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }
      }

      @include it('sm\:to-sky-300') {
        @include assert {
          @include output {
            @include sm\:to-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }
      }

      @include it('sm\:to-sky-400') {
        @include assert {
          @include output {
            @include sm\:to-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }
      }

      @include it('sm\:to-sky-500') {
        @include assert {
          @include output {
            @include sm\:to-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }
      }

      @include it('sm\:to-sky-600') {
        @include assert {
          @include output {
            @include sm\:to-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }
      }

      @include it('sm\:to-sky-700') {
        @include assert {
          @include output {
            @include sm\:to-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }
      }

      @include it('sm\:to-sky-800') {
        @include assert {
          @include output {
            @include sm\:to-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }
      }

      @include it('sm\:to-sky-900') {
        @include assert {
          @include output {
            @include sm\:to-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }
      }

      @include it('sm\:to-sky-950') {
        @include assert {
          @include output {
            @include sm\:to-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }
      }

      @include it('sm\:to-blue-50') {
        @include assert {
          @include output {
            @include sm\:to-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }
      }

      @include it('sm\:to-blue-100') {
        @include assert {
          @include output {
            @include sm\:to-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }
      }

      @include it('sm\:to-blue-200') {
        @include assert {
          @include output {
            @include sm\:to-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }
      }

      @include it('sm\:to-blue-300') {
        @include assert {
          @include output {
            @include sm\:to-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }
      }

      @include it('sm\:to-blue-400') {
        @include assert {
          @include output {
            @include sm\:to-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }
      }

      @include it('sm\:to-blue-500') {
        @include assert {
          @include output {
            @include sm\:to-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }
      }

      @include it('sm\:to-blue-600') {
        @include assert {
          @include output {
            @include sm\:to-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }
      }

      @include it('sm\:to-blue-700') {
        @include assert {
          @include output {
            @include sm\:to-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }
      }

      @include it('sm\:to-blue-800') {
        @include assert {
          @include output {
            @include sm\:to-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }
      }

      @include it('sm\:to-blue-900') {
        @include assert {
          @include output {
            @include sm\:to-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }
      }

      @include it('sm\:to-blue-950') {
        @include assert {
          @include output {
            @include sm\:to-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }
      }

      @include it('sm\:to-indigo-50') {
        @include assert {
          @include output {
            @include sm\:to-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }
      }

      @include it('sm\:to-indigo-100') {
        @include assert {
          @include output {
            @include sm\:to-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }
      }

      @include it('sm\:to-indigo-200') {
        @include assert {
          @include output {
            @include sm\:to-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }
      }

      @include it('sm\:to-indigo-300') {
        @include assert {
          @include output {
            @include sm\:to-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }
      }

      @include it('sm\:to-indigo-400') {
        @include assert {
          @include output {
            @include sm\:to-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }
      }

      @include it('sm\:to-indigo-500') {
        @include assert {
          @include output {
            @include sm\:to-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }
      }

      @include it('sm\:to-indigo-600') {
        @include assert {
          @include output {
            @include sm\:to-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }
      }

      @include it('sm\:to-indigo-700') {
        @include assert {
          @include output {
            @include sm\:to-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }
      }

      @include it('sm\:to-indigo-800') {
        @include assert {
          @include output {
            @include sm\:to-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }
      }

      @include it('sm\:to-indigo-900') {
        @include assert {
          @include output {
            @include sm\:to-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }
      }

      @include it('sm\:to-indigo-950') {
        @include assert {
          @include output {
            @include sm\:to-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }
      }

      @include it('sm\:to-violet-50') {
        @include assert {
          @include output {
            @include sm\:to-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }
      }

      @include it('sm\:to-violet-100') {
        @include assert {
          @include output {
            @include sm\:to-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }
      }

      @include it('sm\:to-violet-200') {
        @include assert {
          @include output {
            @include sm\:to-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }
      }

      @include it('sm\:to-violet-300') {
        @include assert {
          @include output {
            @include sm\:to-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }
      }

      @include it('sm\:to-violet-400') {
        @include assert {
          @include output {
            @include sm\:to-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }
      }

      @include it('sm\:to-violet-500') {
        @include assert {
          @include output {
            @include sm\:to-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }
      }

      @include it('sm\:to-violet-600') {
        @include assert {
          @include output {
            @include sm\:to-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }
      }

      @include it('sm\:to-violet-700') {
        @include assert {
          @include output {
            @include sm\:to-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }
      }

      @include it('sm\:to-violet-800') {
        @include assert {
          @include output {
            @include sm\:to-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }
      }

      @include it('sm\:to-violet-900') {
        @include assert {
          @include output {
            @include sm\:to-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }
      }

      @include it('sm\:to-violet-950') {
        @include assert {
          @include output {
            @include sm\:to-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }
      }

      @include it('sm\:to-purple-50') {
        @include assert {
          @include output {
            @include sm\:to-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }
      }

      @include it('sm\:to-purple-100') {
        @include assert {
          @include output {
            @include sm\:to-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }
      }

      @include it('sm\:to-purple-200') {
        @include assert {
          @include output {
            @include sm\:to-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }
      }

      @include it('sm\:to-purple-300') {
        @include assert {
          @include output {
            @include sm\:to-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }
      }

      @include it('sm\:to-purple-400') {
        @include assert {
          @include output {
            @include sm\:to-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }
      }

      @include it('sm\:to-purple-500') {
        @include assert {
          @include output {
            @include sm\:to-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }
      }

      @include it('sm\:to-purple-600') {
        @include assert {
          @include output {
            @include sm\:to-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }
      }

      @include it('sm\:to-purple-700') {
        @include assert {
          @include output {
            @include sm\:to-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }
      }

      @include it('sm\:to-purple-800') {
        @include assert {
          @include output {
            @include sm\:to-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }
      }

      @include it('sm\:to-purple-900') {
        @include assert {
          @include output {
            @include sm\:to-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }
      }

      @include it('sm\:to-purple-950') {
        @include assert {
          @include output {
            @include sm\:to-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }
      }

      @include it('sm\:to-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:to-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }
      }

      @include it('sm\:to-pink-50') {
        @include assert {
          @include output {
            @include sm\:to-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }
      }

      @include it('sm\:to-pink-100') {
        @include assert {
          @include output {
            @include sm\:to-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }
      }

      @include it('sm\:to-pink-200') {
        @include assert {
          @include output {
            @include sm\:to-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }
      }

      @include it('sm\:to-pink-300') {
        @include assert {
          @include output {
            @include sm\:to-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }
      }

      @include it('sm\:to-pink-400') {
        @include assert {
          @include output {
            @include sm\:to-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }
      }

      @include it('sm\:to-pink-500') {
        @include assert {
          @include output {
            @include sm\:to-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }
      }

      @include it('sm\:to-pink-600') {
        @include assert {
          @include output {
            @include sm\:to-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }
      }

      @include it('sm\:to-pink-700') {
        @include assert {
          @include output {
            @include sm\:to-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }
      }

      @include it('sm\:to-pink-800') {
        @include assert {
          @include output {
            @include sm\:to-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }
      }

      @include it('sm\:to-pink-900') {
        @include assert {
          @include output {
            @include sm\:to-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }
      }

      @include it('sm\:to-pink-950') {
        @include assert {
          @include output {
            @include sm\:to-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }
      }

      @include it('sm\:to-rose-50') {
        @include assert {
          @include output {
            @include sm\:to-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }
      }

      @include it('sm\:to-rose-100') {
        @include assert {
          @include output {
            @include sm\:to-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }
      }

      @include it('sm\:to-rose-200') {
        @include assert {
          @include output {
            @include sm\:to-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }
      }

      @include it('sm\:to-rose-300') {
        @include assert {
          @include output {
            @include sm\:to-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }
      }

      @include it('sm\:to-rose-400') {
        @include assert {
          @include output {
            @include sm\:to-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }
      }

      @include it('sm\:to-rose-500') {
        @include assert {
          @include output {
            @include sm\:to-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }
      }

      @include it('sm\:to-rose-600') {
        @include assert {
          @include output {
            @include sm\:to-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }
      }

      @include it('sm\:to-rose-700') {
        @include assert {
          @include output {
            @include sm\:to-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }
      }

      @include it('sm\:to-rose-800') {
        @include assert {
          @include output {
            @include sm\:to-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }
      }

      @include it('sm\:to-rose-900') {
        @include assert {
          @include output {
            @include sm\:to-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }
      }

      @include it('sm\:to-rose-950') {
        @include assert {
          @include output {
            @include sm\:to-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }
      }

      @include it('sm\:to-0\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 0%);
            }
          }
        }
      }

      @include it('sm\:to-5\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 5%);
            }
          }
        }
      }

      @include it('sm\:to-10\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 10%);
            }
          }
        }
      }

      @include it('sm\:to-15\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 15%);
            }
          }
        }
      }

      @include it('sm\:to-20\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 20%);
            }
          }
        }
      }

      @include it('sm\:to-25\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 25%);
            }
          }
        }
      }

      @include it('sm\:to-30\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 30%);
            }
          }
        }
      }

      @include it('sm\:to-35\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 35%);
            }
          }
        }
      }

      @include it('sm\:to-40\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 40%);
            }
          }
        }
      }

      @include it('sm\:to-45\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 45%);
            }
          }
        }
      }

      @include it('sm\:to-50\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 50%);
            }
          }
        }
      }

      @include it('sm\:to-55\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 55%);
            }
          }
        }
      }

      @include it('sm\:to-60\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 60%);
            }
          }
        }
      }

      @include it('sm\:to-65\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 65%);
            }
          }
        }
      }

      @include it('sm\:to-70\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 70%);
            }
          }
        }
      }

      @include it('sm\:to-75\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 75%);
            }
          }
        }
      }

      @include it('sm\:to-80\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 80%);
            }
          }
        }
      }

      @include it('sm\:to-85\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 85%);
            }
          }
        }
      }

      @include it('sm\:to-90\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 90%);
            }
          }
        }
      }

      @include it('sm\:to-95\%') {
        @include assert {
          @include output {
            @include sm\:to-white;
            @include sm\:to-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #fff 95%);
            }
          }
        }
      }

      @include it('md\:from-inherit') {
        @include assert {
          @include output {
            @include md\:from-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('md\:from-current') {
        @include assert {
          @include output {
            @include md\:from-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:from-transparent') {
        @include assert {
          @include output {
            @include md\:from-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-100') {
        @include assert {
          @include output {
            @include md\:from-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-200') {
        @include assert {
          @include output {
            @include md\:from-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-300') {
        @include assert {
          @include output {
            @include md\:from-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-400') {
        @include assert {
          @include output {
            @include md\:from-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-500') {
        @include assert {
          @include output {
            @include md\:from-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-600') {
        @include assert {
          @include output {
            @include md\:from-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-700') {
        @include assert {
          @include output {
            @include md\:from-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-800') {
        @include assert {
          @include output {
            @include md\:from-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-900') {
        @include assert {
          @include output {
            @include md\:from-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }
      }

      @include it('md\:from-slate-950') {
        @include assert {
          @include output {
            @include md\:from-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-50') {
        @include assert {
          @include output {
            @include md\:from-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-100') {
        @include assert {
          @include output {
            @include md\:from-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-200') {
        @include assert {
          @include output {
            @include md\:from-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-300') {
        @include assert {
          @include output {
            @include md\:from-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-400') {
        @include assert {
          @include output {
            @include md\:from-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-500') {
        @include assert {
          @include output {
            @include md\:from-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-600') {
        @include assert {
          @include output {
            @include md\:from-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-700') {
        @include assert {
          @include output {
            @include md\:from-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-800') {
        @include assert {
          @include output {
            @include md\:from-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-900') {
        @include assert {
          @include output {
            @include md\:from-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }
      }

      @include it('md\:from-gray-950') {
        @include assert {
          @include output {
            @include md\:from-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-50') {
        @include assert {
          @include output {
            @include md\:from-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-100') {
        @include assert {
          @include output {
            @include md\:from-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-200') {
        @include assert {
          @include output {
            @include md\:from-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-300') {
        @include assert {
          @include output {
            @include md\:from-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-400') {
        @include assert {
          @include output {
            @include md\:from-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-500') {
        @include assert {
          @include output {
            @include md\:from-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-600') {
        @include assert {
          @include output {
            @include md\:from-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-700') {
        @include assert {
          @include output {
            @include md\:from-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-800') {
        @include assert {
          @include output {
            @include md\:from-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-900') {
        @include assert {
          @include output {
            @include md\:from-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }
      }

      @include it('md\:from-zinc-950') {
        @include assert {
          @include output {
            @include md\:from-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-50') {
        @include assert {
          @include output {
            @include md\:from-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-100') {
        @include assert {
          @include output {
            @include md\:from-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f5f5f5, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-200') {
        @include assert {
          @include output {
            @include md\:from-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-300') {
        @include assert {
          @include output {
            @include md\:from-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-400') {
        @include assert {
          @include output {
            @include md\:from-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-500') {
        @include assert {
          @include output {
            @include md\:from-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-600') {
        @include assert {
          @include output {
            @include md\:from-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-700') {
        @include assert {
          @include output {
            @include md\:from-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-800') {
        @include assert {
          @include output {
            @include md\:from-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-900') {
        @include assert {
          @include output {
            @include md\:from-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }
      }

      @include it('md\:from-neutral-950') {
        @include assert {
          @include output {
            @include md\:from-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-50') {
        @include assert {
          @include output {
            @include md\:from-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-100') {
        @include assert {
          @include output {
            @include md\:from-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-200') {
        @include assert {
          @include output {
            @include md\:from-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-300') {
        @include assert {
          @include output {
            @include md\:from-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-400') {
        @include assert {
          @include output {
            @include md\:from-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-500') {
        @include assert {
          @include output {
            @include md\:from-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-600') {
        @include assert {
          @include output {
            @include md\:from-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-700') {
        @include assert {
          @include output {
            @include md\:from-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-800') {
        @include assert {
          @include output {
            @include md\:from-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-900') {
        @include assert {
          @include output {
            @include md\:from-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }
      }

      @include it('md\:from-stone-950') {
        @include assert {
          @include output {
            @include md\:from-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-50') {
        @include assert {
          @include output {
            @include md\:from-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-100') {
        @include assert {
          @include output {
            @include md\:from-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-200') {
        @include assert {
          @include output {
            @include md\:from-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-300') {
        @include assert {
          @include output {
            @include md\:from-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-400') {
        @include assert {
          @include output {
            @include md\:from-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-500') {
        @include assert {
          @include output {
            @include md\:from-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-600') {
        @include assert {
          @include output {
            @include md\:from-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-700') {
        @include assert {
          @include output {
            @include md\:from-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-800') {
        @include assert {
          @include output {
            @include md\:from-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-900') {
        @include assert {
          @include output {
            @include md\:from-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }
      }

      @include it('md\:from-red-950') {
        @include assert {
          @include output {
            @include md\:from-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-50') {
        @include assert {
          @include output {
            @include md\:from-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-100') {
        @include assert {
          @include output {
            @include md\:from-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-200') {
        @include assert {
          @include output {
            @include md\:from-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-300') {
        @include assert {
          @include output {
            @include md\:from-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-400') {
        @include assert {
          @include output {
            @include md\:from-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-500') {
        @include assert {
          @include output {
            @include md\:from-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-600') {
        @include assert {
          @include output {
            @include md\:from-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-700') {
        @include assert {
          @include output {
            @include md\:from-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-800') {
        @include assert {
          @include output {
            @include md\:from-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-900') {
        @include assert {
          @include output {
            @include md\:from-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }
      }

      @include it('md\:from-orange-950') {
        @include assert {
          @include output {
            @include md\:from-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-50') {
        @include assert {
          @include output {
            @include md\:from-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-100') {
        @include assert {
          @include output {
            @include md\:from-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-200') {
        @include assert {
          @include output {
            @include md\:from-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-300') {
        @include assert {
          @include output {
            @include md\:from-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-400') {
        @include assert {
          @include output {
            @include md\:from-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-500') {
        @include assert {
          @include output {
            @include md\:from-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-600') {
        @include assert {
          @include output {
            @include md\:from-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-700') {
        @include assert {
          @include output {
            @include md\:from-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-800') {
        @include assert {
          @include output {
            @include md\:from-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-900') {
        @include assert {
          @include output {
            @include md\:from-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }
      }

      @include it('md\:from-amber-950') {
        @include assert {
          @include output {
            @include md\:from-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-50') {
        @include assert {
          @include output {
            @include md\:from-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-100') {
        @include assert {
          @include output {
            @include md\:from-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-200') {
        @include assert {
          @include output {
            @include md\:from-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-300') {
        @include assert {
          @include output {
            @include md\:from-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-400') {
        @include assert {
          @include output {
            @include md\:from-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-500') {
        @include assert {
          @include output {
            @include md\:from-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-600') {
        @include assert {
          @include output {
            @include md\:from-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-700') {
        @include assert {
          @include output {
            @include md\:from-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-800') {
        @include assert {
          @include output {
            @include md\:from-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-900') {
        @include assert {
          @include output {
            @include md\:from-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }
      }

      @include it('md\:from-yellow-950') {
        @include assert {
          @include output {
            @include md\:from-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-50') {
        @include assert {
          @include output {
            @include md\:from-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-100') {
        @include assert {
          @include output {
            @include md\:from-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-200') {
        @include assert {
          @include output {
            @include md\:from-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-300') {
        @include assert {
          @include output {
            @include md\:from-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-400') {
        @include assert {
          @include output {
            @include md\:from-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-500') {
        @include assert {
          @include output {
            @include md\:from-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-600') {
        @include assert {
          @include output {
            @include md\:from-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-700') {
        @include assert {
          @include output {
            @include md\:from-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-800') {
        @include assert {
          @include output {
            @include md\:from-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-900') {
        @include assert {
          @include output {
            @include md\:from-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }
      }

      @include it('md\:from-lime-950') {
        @include assert {
          @include output {
            @include md\:from-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-50') {
        @include assert {
          @include output {
            @include md\:from-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-100') {
        @include assert {
          @include output {
            @include md\:from-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-200') {
        @include assert {
          @include output {
            @include md\:from-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-300') {
        @include assert {
          @include output {
            @include md\:from-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-400') {
        @include assert {
          @include output {
            @include md\:from-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-500') {
        @include assert {
          @include output {
            @include md\:from-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-600') {
        @include assert {
          @include output {
            @include md\:from-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-700') {
        @include assert {
          @include output {
            @include md\:from-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-800') {
        @include assert {
          @include output {
            @include md\:from-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-900') {
        @include assert {
          @include output {
            @include md\:from-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }
      }

      @include it('md\:from-green-950') {
        @include assert {
          @include output {
            @include md\:from-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-50') {
        @include assert {
          @include output {
            @include md\:from-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-100') {
        @include assert {
          @include output {
            @include md\:from-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-200') {
        @include assert {
          @include output {
            @include md\:from-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-300') {
        @include assert {
          @include output {
            @include md\:from-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-400') {
        @include assert {
          @include output {
            @include md\:from-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-500') {
        @include assert {
          @include output {
            @include md\:from-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-600') {
        @include assert {
          @include output {
            @include md\:from-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-700') {
        @include assert {
          @include output {
            @include md\:from-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-800') {
        @include assert {
          @include output {
            @include md\:from-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-900') {
        @include assert {
          @include output {
            @include md\:from-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }
      }

      @include it('md\:from-emerald-950') {
        @include assert {
          @include output {
            @include md\:from-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-50') {
        @include assert {
          @include output {
            @include md\:from-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-100') {
        @include assert {
          @include output {
            @include md\:from-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-200') {
        @include assert {
          @include output {
            @include md\:from-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-300') {
        @include assert {
          @include output {
            @include md\:from-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-400') {
        @include assert {
          @include output {
            @include md\:from-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-500') {
        @include assert {
          @include output {
            @include md\:from-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-600') {
        @include assert {
          @include output {
            @include md\:from-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-700') {
        @include assert {
          @include output {
            @include md\:from-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-800') {
        @include assert {
          @include output {
            @include md\:from-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-900') {
        @include assert {
          @include output {
            @include md\:from-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }
      }

      @include it('md\:from-teal-950') {
        @include assert {
          @include output {
            @include md\:from-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-50') {
        @include assert {
          @include output {
            @include md\:from-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-100') {
        @include assert {
          @include output {
            @include md\:from-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-200') {
        @include assert {
          @include output {
            @include md\:from-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-300') {
        @include assert {
          @include output {
            @include md\:from-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-400') {
        @include assert {
          @include output {
            @include md\:from-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-500') {
        @include assert {
          @include output {
            @include md\:from-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-600') {
        @include assert {
          @include output {
            @include md\:from-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-700') {
        @include assert {
          @include output {
            @include md\:from-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-800') {
        @include assert {
          @include output {
            @include md\:from-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-900') {
        @include assert {
          @include output {
            @include md\:from-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }
      }

      @include it('md\:from-cyan-950') {
        @include assert {
          @include output {
            @include md\:from-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-50') {
        @include assert {
          @include output {
            @include md\:from-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-100') {
        @include assert {
          @include output {
            @include md\:from-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-200') {
        @include assert {
          @include output {
            @include md\:from-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-300') {
        @include assert {
          @include output {
            @include md\:from-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-400') {
        @include assert {
          @include output {
            @include md\:from-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-500') {
        @include assert {
          @include output {
            @include md\:from-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-600') {
        @include assert {
          @include output {
            @include md\:from-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-700') {
        @include assert {
          @include output {
            @include md\:from-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-800') {
        @include assert {
          @include output {
            @include md\:from-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-900') {
        @include assert {
          @include output {
            @include md\:from-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }
      }

      @include it('md\:from-sky-950') {
        @include assert {
          @include output {
            @include md\:from-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-50') {
        @include assert {
          @include output {
            @include md\:from-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-100') {
        @include assert {
          @include output {
            @include md\:from-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-200') {
        @include assert {
          @include output {
            @include md\:from-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-300') {
        @include assert {
          @include output {
            @include md\:from-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-400') {
        @include assert {
          @include output {
            @include md\:from-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-500') {
        @include assert {
          @include output {
            @include md\:from-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-600') {
        @include assert {
          @include output {
            @include md\:from-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-700') {
        @include assert {
          @include output {
            @include md\:from-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-800') {
        @include assert {
          @include output {
            @include md\:from-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-900') {
        @include assert {
          @include output {
            @include md\:from-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }
      }

      @include it('md\:from-blue-950') {
        @include assert {
          @include output {
            @include md\:from-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-50') {
        @include assert {
          @include output {
            @include md\:from-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-100') {
        @include assert {
          @include output {
            @include md\:from-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-200') {
        @include assert {
          @include output {
            @include md\:from-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-300') {
        @include assert {
          @include output {
            @include md\:from-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-400') {
        @include assert {
          @include output {
            @include md\:from-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-500') {
        @include assert {
          @include output {
            @include md\:from-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-600') {
        @include assert {
          @include output {
            @include md\:from-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-700') {
        @include assert {
          @include output {
            @include md\:from-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-800') {
        @include assert {
          @include output {
            @include md\:from-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-900') {
        @include assert {
          @include output {
            @include md\:from-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }
      }

      @include it('md\:from-indigo-950') {
        @include assert {
          @include output {
            @include md\:from-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-50') {
        @include assert {
          @include output {
            @include md\:from-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-100') {
        @include assert {
          @include output {
            @include md\:from-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-200') {
        @include assert {
          @include output {
            @include md\:from-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-300') {
        @include assert {
          @include output {
            @include md\:from-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-400') {
        @include assert {
          @include output {
            @include md\:from-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-500') {
        @include assert {
          @include output {
            @include md\:from-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-600') {
        @include assert {
          @include output {
            @include md\:from-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-700') {
        @include assert {
          @include output {
            @include md\:from-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-800') {
        @include assert {
          @include output {
            @include md\:from-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-900') {
        @include assert {
          @include output {
            @include md\:from-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }
      }

      @include it('md\:from-violet-950') {
        @include assert {
          @include output {
            @include md\:from-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-50') {
        @include assert {
          @include output {
            @include md\:from-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-100') {
        @include assert {
          @include output {
            @include md\:from-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-200') {
        @include assert {
          @include output {
            @include md\:from-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-300') {
        @include assert {
          @include output {
            @include md\:from-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-400') {
        @include assert {
          @include output {
            @include md\:from-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-500') {
        @include assert {
          @include output {
            @include md\:from-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-600') {
        @include assert {
          @include output {
            @include md\:from-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-700') {
        @include assert {
          @include output {
            @include md\:from-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-800') {
        @include assert {
          @include output {
            @include md\:from-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-900') {
        @include assert {
          @include output {
            @include md\:from-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }
      }

      @include it('md\:from-purple-950') {
        @include assert {
          @include output {
            @include md\:from-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }
      }

      @include it('md\:from-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:from-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-50') {
        @include assert {
          @include output {
            @include md\:from-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-100') {
        @include assert {
          @include output {
            @include md\:from-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-200') {
        @include assert {
          @include output {
            @include md\:from-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-300') {
        @include assert {
          @include output {
            @include md\:from-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-400') {
        @include assert {
          @include output {
            @include md\:from-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-500') {
        @include assert {
          @include output {
            @include md\:from-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-600') {
        @include assert {
          @include output {
            @include md\:from-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-700') {
        @include assert {
          @include output {
            @include md\:from-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-800') {
        @include assert {
          @include output {
            @include md\:from-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-900') {
        @include assert {
          @include output {
            @include md\:from-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }
      }

      @include it('md\:from-pink-950') {
        @include assert {
          @include output {
            @include md\:from-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-50') {
        @include assert {
          @include output {
            @include md\:from-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-100') {
        @include assert {
          @include output {
            @include md\:from-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-200') {
        @include assert {
          @include output {
            @include md\:from-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-300') {
        @include assert {
          @include output {
            @include md\:from-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-400') {
        @include assert {
          @include output {
            @include md\:from-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-500') {
        @include assert {
          @include output {
            @include md\:from-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-600') {
        @include assert {
          @include output {
            @include md\:from-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-700') {
        @include assert {
          @include output {
            @include md\:from-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-800') {
        @include assert {
          @include output {
            @include md\:from-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-900') {
        @include assert {
          @include output {
            @include md\:from-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }
      }

      @include it('md\:from-rose-950') {
        @include assert {
          @include output {
            @include md\:from-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }
      }

      @include it('md\:from-0\%') {
        @include assert {
          @include output {
            @include md\:from-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }
      }

      @include it('md\:from-5\%') {
        @include assert {
          @include output {
            @include md\:from-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }
      }

      @include it('md\:from-10\%') {
        @include assert {
          @include output {
            @include md\:from-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }
      }

      @include it('md\:from-15\%') {
        @include assert {
          @include output {
            @include md\:from-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }
      }

      @include it('md\:from-20\%') {
        @include assert {
          @include output {
            @include md\:from-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }
      }

      @include it('md\:from-25\%') {
        @include assert {
          @include output {
            @include md\:from-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }
      }

      @include it('md\:from-30\%') {
        @include assert {
          @include output {
            @include md\:from-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }
      }

      @include it('md\:from-35\%') {
        @include assert {
          @include output {
            @include md\:from-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }
      }

      @include it('md\:from-40\%') {
        @include assert {
          @include output {
            @include md\:from-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }
      }

      @include it('md\:from-45\%') {
        @include assert {
          @include output {
            @include md\:from-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }
      }

      @include it('md\:from-50\%') {
        @include assert {
          @include output {
            @include md\:from-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }
      }

      @include it('md\:from-55\%') {
        @include assert {
          @include output {
            @include md\:from-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }
      }

      @include it('md\:from-60\%') {
        @include assert {
          @include output {
            @include md\:from-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }
      }

      @include it('md\:from-65\%') {
        @include assert {
          @include output {
            @include md\:from-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }
      }

      @include it('md\:from-70\%') {
        @include assert {
          @include output {
            @include md\:from-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }
      }

      @include it('md\:from-75\%') {
        @include assert {
          @include output {
            @include md\:from-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }
      }

      @include it('md\:from-80\%') {
        @include assert {
          @include output {
            @include md\:from-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }
      }

      @include it('md\:from-85\%') {
        @include assert {
          @include output {
            @include md\:from-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }
      }

      @include it('md\:from-90\%') {
        @include assert {
          @include output {
            @include md\:from-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }
      }

      @include it('md\:from-95\%') {
        @include assert {
          @include output {
            @include md\:from-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }
      }

      @include it('md\:via-inherit') {
        @include assert {
          @include output {
            @include md\:via-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('md\:via-current') {
        @include assert {
          @include output {
            @include md\:via-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-transparent') {
        @include assert {
          @include output {
            @include md\:via-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                transparent,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-100') {
        @include assert {
          @include output {
            @include md\:via-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f1f5f9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-200') {
        @include assert {
          @include output {
            @include md\:via-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e2e8f0,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-300') {
        @include assert {
          @include output {
            @include md\:via-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #cbd5e1,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-400') {
        @include assert {
          @include output {
            @include md\:via-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #94a3b8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-500') {
        @include assert {
          @include output {
            @include md\:via-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #64748b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-600') {
        @include assert {
          @include output {
            @include md\:via-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #475569,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-700') {
        @include assert {
          @include output {
            @include md\:via-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #334155,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-800') {
        @include assert {
          @include output {
            @include md\:via-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e293b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-900') {
        @include assert {
          @include output {
            @include md\:via-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f172a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-slate-950') {
        @include assert {
          @include output {
            @include md\:via-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #020617,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-50') {
        @include assert {
          @include output {
            @include md\:via-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9fafb,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-100') {
        @include assert {
          @include output {
            @include md\:via-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3f4f6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-200') {
        @include assert {
          @include output {
            @include md\:via-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e7eb,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-300') {
        @include assert {
          @include output {
            @include md\:via-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1d5db,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-400') {
        @include assert {
          @include output {
            @include md\:via-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #9ca3af,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-500') {
        @include assert {
          @include output {
            @include md\:via-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b7280,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-600') {
        @include assert {
          @include output {
            @include md\:via-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4b5563,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-700') {
        @include assert {
          @include output {
            @include md\:via-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #374151,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-800') {
        @include assert {
          @include output {
            @include md\:via-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1f2937,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-900') {
        @include assert {
          @include output {
            @include md\:via-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #111827,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-gray-950') {
        @include assert {
          @include output {
            @include md\:via-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #030712,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-50') {
        @include assert {
          @include output {
            @include md\:via-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-100') {
        @include assert {
          @include output {
            @include md\:via-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f4f4f5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-200') {
        @include assert {
          @include output {
            @include md\:via-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e4e4e7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-300') {
        @include assert {
          @include output {
            @include md\:via-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-400') {
        @include assert {
          @include output {
            @include md\:via-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a1a1aa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-500') {
        @include assert {
          @include output {
            @include md\:via-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #71717a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-600') {
        @include assert {
          @include output {
            @include md\:via-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #52525b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-700') {
        @include assert {
          @include output {
            @include md\:via-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f3f46,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-800') {
        @include assert {
          @include output {
            @include md\:via-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #27272a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-900') {
        @include assert {
          @include output {
            @include md\:via-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #18181b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-zinc-950') {
        @include assert {
          @include output {
            @include md\:via-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #09090b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-50') {
        @include assert {
          @include output {
            @include md\:via-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-100') {
        @include assert {
          @include output {
            @include md\:via-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-200') {
        @include assert {
          @include output {
            @include md\:via-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e5e5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-300') {
        @include assert {
          @include output {
            @include md\:via-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-400') {
        @include assert {
          @include output {
            @include md\:via-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3a3a3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-500') {
        @include assert {
          @include output {
            @include md\:via-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #737373,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-600') {
        @include assert {
          @include output {
            @include md\:via-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #525252,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-700') {
        @include assert {
          @include output {
            @include md\:via-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #404040,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-800') {
        @include assert {
          @include output {
            @include md\:via-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #262626,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-900') {
        @include assert {
          @include output {
            @include md\:via-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #171717,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-neutral-950') {
        @include assert {
          @include output {
            @include md\:via-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0a0a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-50') {
        @include assert {
          @include output {
            @include md\:via-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafaf9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-100') {
        @include assert {
          @include output {
            @include md\:via-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-200') {
        @include assert {
          @include output {
            @include md\:via-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e7e5e4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-300') {
        @include assert {
          @include output {
            @include md\:via-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d6d3d1,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-400') {
        @include assert {
          @include output {
            @include md\:via-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a8a29e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-500') {
        @include assert {
          @include output {
            @include md\:via-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #78716c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-600') {
        @include assert {
          @include output {
            @include md\:via-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #57534e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-700') {
        @include assert {
          @include output {
            @include md\:via-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #44403c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-800') {
        @include assert {
          @include output {
            @include md\:via-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #292524,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-900') {
        @include assert {
          @include output {
            @include md\:via-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1c1917,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-stone-950') {
        @include assert {
          @include output {
            @include md\:via-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c0a09,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-50') {
        @include assert {
          @include output {
            @include md\:via-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef2f2,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-100') {
        @include assert {
          @include output {
            @include md\:via-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fee2e2,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-200') {
        @include assert {
          @include output {
            @include md\:via-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecaca,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-300') {
        @include assert {
          @include output {
            @include md\:via-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fca5a5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-400') {
        @include assert {
          @include output {
            @include md\:via-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f87171,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-500') {
        @include assert {
          @include output {
            @include md\:via-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ef4444,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-600') {
        @include assert {
          @include output {
            @include md\:via-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #dc2626,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-700') {
        @include assert {
          @include output {
            @include md\:via-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #b91c1c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-800') {
        @include assert {
          @include output {
            @include md\:via-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #991b1b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-900') {
        @include assert {
          @include output {
            @include md\:via-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #7f1d1d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-red-950') {
        @include assert {
          @include output {
            @include md\:via-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #450a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-50') {
        @include assert {
          @include output {
            @include md\:via-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff7ed,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-100') {
        @include assert {
          @include output {
            @include md\:via-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffedd5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-200') {
        @include assert {
          @include output {
            @include md\:via-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fed7aa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-300') {
        @include assert {
          @include output {
            @include md\:via-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdba74,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-400') {
        @include assert {
          @include output {
            @include md\:via-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb923c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-500') {
        @include assert {
          @include output {
            @include md\:via-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f97316,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-600') {
        @include assert {
          @include output {
            @include md\:via-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ea580c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-700') {
        @include assert {
          @include output {
            @include md\:via-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #c2410c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-800') {
        @include assert {
          @include output {
            @include md\:via-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #9a3412,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-900') {
        @include assert {
          @include output {
            @include md\:via-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c2d12,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-orange-950') {
        @include assert {
          @include output {
            @include md\:via-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #431407,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-50') {
        @include assert {
          @include output {
            @include md\:via-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fffbeb,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-100') {
        @include assert {
          @include output {
            @include md\:via-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef3c7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-200') {
        @include assert {
          @include output {
            @include md\:via-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde68a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-300') {
        @include assert {
          @include output {
            @include md\:via-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fcd34d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-400') {
        @include assert {
          @include output {
            @include md\:via-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbbf24,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-500') {
        @include assert {
          @include output {
            @include md\:via-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f59e0b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-600') {
        @include assert {
          @include output {
            @include md\:via-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d97706,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-700') {
        @include assert {
          @include output {
            @include md\:via-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #b45309,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-800') {
        @include assert {
          @include output {
            @include md\:via-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #92400e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-900') {
        @include assert {
          @include output {
            @include md\:via-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #78350f,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-amber-950') {
        @include assert {
          @include output {
            @include md\:via-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #451a03,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-50') {
        @include assert {
          @include output {
            @include md\:via-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fefce8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-100') {
        @include assert {
          @include output {
            @include md\:via-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef9c3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-200') {
        @include assert {
          @include output {
            @include md\:via-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef08a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-300') {
        @include assert {
          @include output {
            @include md\:via-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde047,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-400') {
        @include assert {
          @include output {
            @include md\:via-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #facc15,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-500') {
        @include assert {
          @include output {
            @include md\:via-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #eab308,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-600') {
        @include assert {
          @include output {
            @include md\:via-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ca8a04,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-700') {
        @include assert {
          @include output {
            @include md\:via-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a16207,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-800') {
        @include assert {
          @include output {
            @include md\:via-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #854d0e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-900') {
        @include assert {
          @include output {
            @include md\:via-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #713f12,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-yellow-950') {
        @include assert {
          @include output {
            @include md\:via-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #422006,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-50') {
        @include assert {
          @include output {
            @include md\:via-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f7fee7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-100') {
        @include assert {
          @include output {
            @include md\:via-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfccb,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-200') {
        @include assert {
          @include output {
            @include md\:via-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d9f99d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-300') {
        @include assert {
          @include output {
            @include md\:via-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #bef264,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-400') {
        @include assert {
          @include output {
            @include md\:via-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3e635,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-500') {
        @include assert {
          @include output {
            @include md\:via-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #84cc16,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-600') {
        @include assert {
          @include output {
            @include md\:via-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #65a30d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-700') {
        @include assert {
          @include output {
            @include md\:via-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4d7c0f,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-800') {
        @include assert {
          @include output {
            @include md\:via-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f6212,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-900') {
        @include assert {
          @include output {
            @include md\:via-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #365314,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-lime-950') {
        @include assert {
          @include output {
            @include md\:via-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1a2e05,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-50') {
        @include assert {
          @include output {
            @include md\:via-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdf4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-100') {
        @include assert {
          @include output {
            @include md\:via-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #dcfce7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-200') {
        @include assert {
          @include output {
            @include md\:via-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #bbf7d0,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-300') {
        @include assert {
          @include output {
            @include md\:via-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #86efac,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-400') {
        @include assert {
          @include output {
            @include md\:via-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4ade80,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-500') {
        @include assert {
          @include output {
            @include md\:via-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #22c55e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-600') {
        @include assert {
          @include output {
            @include md\:via-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #16a34a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-700') {
        @include assert {
          @include output {
            @include md\:via-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #15803d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-800') {
        @include assert {
          @include output {
            @include md\:via-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #166534,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-900') {
        @include assert {
          @include output {
            @include md\:via-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #14532d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-green-950') {
        @include assert {
          @include output {
            @include md\:via-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #052e16,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-50') {
        @include assert {
          @include output {
            @include md\:via-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfdf5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-100') {
        @include assert {
          @include output {
            @include md\:via-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1fae5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-200') {
        @include assert {
          @include output {
            @include md\:via-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a7f3d0,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-300') {
        @include assert {
          @include output {
            @include md\:via-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #6ee7b7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-400') {
        @include assert {
          @include output {
            @include md\:via-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #34d399,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-500') {
        @include assert {
          @include output {
            @include md\:via-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #10b981,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-600') {
        @include assert {
          @include output {
            @include md\:via-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #059669,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-700') {
        @include assert {
          @include output {
            @include md\:via-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #047857,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-800') {
        @include assert {
          @include output {
            @include md\:via-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #065f46,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-900') {
        @include assert {
          @include output {
            @include md\:via-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #064e3b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-emerald-950') {
        @include assert {
          @include output {
            @include md\:via-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #022c22,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-50') {
        @include assert {
          @include output {
            @include md\:via-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdfa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-100') {
        @include assert {
          @include output {
            @include md\:via-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ccfbf1,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-200') {
        @include assert {
          @include output {
            @include md\:via-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #99f6e4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-300') {
        @include assert {
          @include output {
            @include md\:via-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #5eead4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-400') {
        @include assert {
          @include output {
            @include md\:via-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #2dd4bf,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-500') {
        @include assert {
          @include output {
            @include md\:via-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #14b8a6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-600') {
        @include assert {
          @include output {
            @include md\:via-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0d9488,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-700') {
        @include assert {
          @include output {
            @include md\:via-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f766e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-800') {
        @include assert {
          @include output {
            @include md\:via-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #115e59,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-900') {
        @include assert {
          @include output {
            @include md\:via-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #134e4a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-teal-950') {
        @include assert {
          @include output {
            @include md\:via-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #042f2e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-50') {
        @include assert {
          @include output {
            @include md\:via-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfeff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-100') {
        @include assert {
          @include output {
            @include md\:via-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #cffafe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-200') {
        @include assert {
          @include output {
            @include md\:via-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5f3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-300') {
        @include assert {
          @include output {
            @include md\:via-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #67e8f9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-400') {
        @include assert {
          @include output {
            @include md\:via-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #22d3ee,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-500') {
        @include assert {
          @include output {
            @include md\:via-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #06b6d4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-600') {
        @include assert {
          @include output {
            @include md\:via-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0891b2,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-700') {
        @include assert {
          @include output {
            @include md\:via-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0e7490,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-800') {
        @include assert {
          @include output {
            @include md\:via-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #155e75,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-900') {
        @include assert {
          @include output {
            @include md\:via-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #164e63,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-cyan-950') {
        @include assert {
          @include output {
            @include md\:via-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #083344,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-50') {
        @include assert {
          @include output {
            @include md\:via-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0f9ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-100') {
        @include assert {
          @include output {
            @include md\:via-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0f2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-200') {
        @include assert {
          @include output {
            @include md\:via-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #bae6fd,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-300') {
        @include assert {
          @include output {
            @include md\:via-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #7dd3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-400') {
        @include assert {
          @include output {
            @include md\:via-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #38bdf8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-500') {
        @include assert {
          @include output {
            @include md\:via-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0ea5e9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-600') {
        @include assert {
          @include output {
            @include md\:via-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0284c7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-700') {
        @include assert {
          @include output {
            @include md\:via-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0369a1,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-800') {
        @include assert {
          @include output {
            @include md\:via-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #075985,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-900') {
        @include assert {
          @include output {
            @include md\:via-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c4a6e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-sky-950') {
        @include assert {
          @include output {
            @include md\:via-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #082f49,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-50') {
        @include assert {
          @include output {
            @include md\:via-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #eff6ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-100') {
        @include assert {
          @include output {
            @include md\:via-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #dbeafe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-200') {
        @include assert {
          @include output {
            @include md\:via-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #bfdbfe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-300') {
        @include assert {
          @include output {
            @include md\:via-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #93c5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-400') {
        @include assert {
          @include output {
            @include md\:via-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #60a5fa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-500') {
        @include assert {
          @include output {
            @include md\:via-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b82f6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-600') {
        @include assert {
          @include output {
            @include md\:via-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #2563eb,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-700') {
        @include assert {
          @include output {
            @include md\:via-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1d4ed8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-800') {
        @include assert {
          @include output {
            @include md\:via-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e40af,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-900') {
        @include assert {
          @include output {
            @include md\:via-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e3a8a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-blue-950') {
        @include assert {
          @include output {
            @include md\:via-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #172554,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-50') {
        @include assert {
          @include output {
            @include md\:via-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #eef2ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-100') {
        @include assert {
          @include output {
            @include md\:via-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0e7ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-200') {
        @include assert {
          @include output {
            @include md\:via-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #c7d2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-300') {
        @include assert {
          @include output {
            @include md\:via-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5b4fc,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-400') {
        @include assert {
          @include output {
            @include md\:via-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #818cf8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-500') {
        @include assert {
          @include output {
            @include md\:via-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #6366f1,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-600') {
        @include assert {
          @include output {
            @include md\:via-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4f46e5,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-700') {
        @include assert {
          @include output {
            @include md\:via-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4338ca,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-800') {
        @include assert {
          @include output {
            @include md\:via-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #3730a3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-900') {
        @include assert {
          @include output {
            @include md\:via-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #312e81,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-indigo-950') {
        @include assert {
          @include output {
            @include md\:via-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e1b4b,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-50') {
        @include assert {
          @include output {
            @include md\:via-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f3ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-100') {
        @include assert {
          @include output {
            @include md\:via-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ede9fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-200') {
        @include assert {
          @include output {
            @include md\:via-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ddd6fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-300') {
        @include assert {
          @include output {
            @include md\:via-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #c4b5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-400') {
        @include assert {
          @include output {
            @include md\:via-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a78bfa,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-500') {
        @include assert {
          @include output {
            @include md\:via-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #8b5cf6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-600') {
        @include assert {
          @include output {
            @include md\:via-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c3aed,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-700') {
        @include assert {
          @include output {
            @include md\:via-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #6d28d9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-800') {
        @include assert {
          @include output {
            @include md\:via-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #5b21b6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-900') {
        @include assert {
          @include output {
            @include md\:via-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c1d95,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-violet-950') {
        @include assert {
          @include output {
            @include md\:via-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #2e1065,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-50') {
        @include assert {
          @include output {
            @include md\:via-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #faf5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-100') {
        @include assert {
          @include output {
            @include md\:via-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3e8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-200') {
        @include assert {
          @include output {
            @include md\:via-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e9d5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-300') {
        @include assert {
          @include output {
            @include md\:via-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d8b4fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-400') {
        @include assert {
          @include output {
            @include md\:via-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #c084fc,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-500') {
        @include assert {
          @include output {
            @include md\:via-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a855f7,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-600') {
        @include assert {
          @include output {
            @include md\:via-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #9333ea,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-700') {
        @include assert {
          @include output {
            @include md\:via-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #7e22ce,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-800') {
        @include assert {
          @include output {
            @include md\:via-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b21a8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-900') {
        @include assert {
          @include output {
            @include md\:via-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #581c87,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-purple-950') {
        @include assert {
          @include output {
            @include md\:via-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b0764,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf4ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fae8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5d0fe,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0abfc,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e879f9,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #d946ef,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #c026d3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #a21caf,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #86198f,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #701a75,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:via-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4a044e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-50') {
        @include assert {
          @include output {
            @include md\:via-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf2f8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-100') {
        @include assert {
          @include output {
            @include md\:via-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fce7f3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-200') {
        @include assert {
          @include output {
            @include md\:via-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbcfe8,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-300') {
        @include assert {
          @include output {
            @include md\:via-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9a8d4,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-400') {
        @include assert {
          @include output {
            @include md\:via-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f472b6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-500') {
        @include assert {
          @include output {
            @include md\:via-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ec4899,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-600') {
        @include assert {
          @include output {
            @include md\:via-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #db2777,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-700') {
        @include assert {
          @include output {
            @include md\:via-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #be185d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-800') {
        @include assert {
          @include output {
            @include md\:via-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #9d174d,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-900') {
        @include assert {
          @include output {
            @include md\:via-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #831843,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-pink-950') {
        @include assert {
          @include output {
            @include md\:via-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #500724,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-50') {
        @include assert {
          @include output {
            @include md\:via-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff1f2,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-100') {
        @include assert {
          @include output {
            @include md\:via-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffe4e6,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-200') {
        @include assert {
          @include output {
            @include md\:via-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecdd3,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-300') {
        @include assert {
          @include output {
            @include md\:via-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fda4af,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-400') {
        @include assert {
          @include output {
            @include md\:via-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb7185,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-500') {
        @include assert {
          @include output {
            @include md\:via-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #f43f5e,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-600') {
        @include assert {
          @include output {
            @include md\:via-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #e11d48,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-700') {
        @include assert {
          @include output {
            @include md\:via-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #be123c,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-800') {
        @include assert {
          @include output {
            @include md\:via-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #9f1239,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-900') {
        @include assert {
          @include output {
            @include md\:via-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #881337,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-rose-950') {
        @include assert {
          @include output {
            @include md\:via-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c0519,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-0\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 0%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-5\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 5%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-10\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 10%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-15\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 15%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-20\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 20%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-25\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 25%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-30\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 30%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-35\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 35%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-40\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 40%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-45\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 45%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-50\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 50%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-55\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 55%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-60\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 60%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-65\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 65%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-70\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 70%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-75\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 75%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-80\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 80%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-85\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 85%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-90\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 90%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:via-95\%') {
        @include assert {
          @include output {
            @include md\:via-white;
            @include md\:via-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 95%,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:to-inherit') {
        @include assert {
          @include output {
            @include md\:to-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('md\:to-current') {
        @include assert {
          @include output {
            @include md\:to-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }
      }

      @include it('md\:to-transparent') {
        @include assert {
          @include output {
            @include md\:to-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }
      }

      @include it('md\:to-slate-100') {
        @include assert {
          @include output {
            @include md\:to-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }
      }

      @include it('md\:to-slate-200') {
        @include assert {
          @include output {
            @include md\:to-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }
      }

      @include it('md\:to-slate-300') {
        @include assert {
          @include output {
            @include md\:to-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }
      }

      @include it('md\:to-slate-400') {
        @include assert {
          @include output {
            @include md\:to-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }
      }

      @include it('md\:to-slate-500') {
        @include assert {
          @include output {
            @include md\:to-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }
      }

      @include it('md\:to-slate-600') {
        @include assert {
          @include output {
            @include md\:to-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }
      }

      @include it('md\:to-slate-700') {
        @include assert {
          @include output {
            @include md\:to-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }
      }

      @include it('md\:to-slate-800') {
        @include assert {
          @include output {
            @include md\:to-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }
      }

      @include it('md\:to-slate-900') {
        @include assert {
          @include output {
            @include md\:to-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }
      }

      @include it('md\:to-slate-950') {
        @include assert {
          @include output {
            @include md\:to-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }
      }

      @include it('md\:to-gray-50') {
        @include assert {
          @include output {
            @include md\:to-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }
      }

      @include it('md\:to-gray-100') {
        @include assert {
          @include output {
            @include md\:to-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }
      }

      @include it('md\:to-gray-200') {
        @include assert {
          @include output {
            @include md\:to-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }
      }

      @include it('md\:to-gray-300') {
        @include assert {
          @include output {
            @include md\:to-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }
      }

      @include it('md\:to-gray-400') {
        @include assert {
          @include output {
            @include md\:to-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }
      }

      @include it('md\:to-gray-500') {
        @include assert {
          @include output {
            @include md\:to-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }
      }

      @include it('md\:to-gray-600') {
        @include assert {
          @include output {
            @include md\:to-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }
      }

      @include it('md\:to-gray-700') {
        @include assert {
          @include output {
            @include md\:to-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }
      }

      @include it('md\:to-gray-800') {
        @include assert {
          @include output {
            @include md\:to-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }
      }

      @include it('md\:to-gray-900') {
        @include assert {
          @include output {
            @include md\:to-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }
      }

      @include it('md\:to-gray-950') {
        @include assert {
          @include output {
            @include md\:to-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }
      }

      @include it('md\:to-zinc-50') {
        @include assert {
          @include output {
            @include md\:to-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('md\:to-zinc-100') {
        @include assert {
          @include output {
            @include md\:to-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }
      }

      @include it('md\:to-zinc-200') {
        @include assert {
          @include output {
            @include md\:to-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }
      }

      @include it('md\:to-zinc-300') {
        @include assert {
          @include output {
            @include md\:to-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }
      }

      @include it('md\:to-zinc-400') {
        @include assert {
          @include output {
            @include md\:to-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }
      }

      @include it('md\:to-zinc-500') {
        @include assert {
          @include output {
            @include md\:to-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }
      }

      @include it('md\:to-zinc-600') {
        @include assert {
          @include output {
            @include md\:to-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }
      }

      @include it('md\:to-zinc-700') {
        @include assert {
          @include output {
            @include md\:to-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }
      }

      @include it('md\:to-zinc-800') {
        @include assert {
          @include output {
            @include md\:to-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }
      }

      @include it('md\:to-zinc-900') {
        @include assert {
          @include output {
            @include md\:to-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }
      }

      @include it('md\:to-zinc-950') {
        @include assert {
          @include output {
            @include md\:to-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }
      }

      @include it('md\:to-neutral-50') {
        @include assert {
          @include output {
            @include md\:to-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('md\:to-neutral-100') {
        @include assert {
          @include output {
            @include md\:to-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f5f5f5);
            }
          }
        }
      }

      @include it('md\:to-neutral-200') {
        @include assert {
          @include output {
            @include md\:to-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }
      }

      @include it('md\:to-neutral-300') {
        @include assert {
          @include output {
            @include md\:to-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }
      }

      @include it('md\:to-neutral-400') {
        @include assert {
          @include output {
            @include md\:to-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }
      }

      @include it('md\:to-neutral-500') {
        @include assert {
          @include output {
            @include md\:to-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }
      }

      @include it('md\:to-neutral-600') {
        @include assert {
          @include output {
            @include md\:to-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }
      }

      @include it('md\:to-neutral-700') {
        @include assert {
          @include output {
            @include md\:to-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }
      }

      @include it('md\:to-neutral-800') {
        @include assert {
          @include output {
            @include md\:to-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }
      }

      @include it('md\:to-neutral-900') {
        @include assert {
          @include output {
            @include md\:to-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }
      }

      @include it('md\:to-neutral-950') {
        @include assert {
          @include output {
            @include md\:to-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }
      }

      @include it('md\:to-stone-50') {
        @include assert {
          @include output {
            @include md\:to-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }
      }

      @include it('md\:to-stone-100') {
        @include assert {
          @include output {
            @include md\:to-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }
      }

      @include it('md\:to-stone-200') {
        @include assert {
          @include output {
            @include md\:to-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }
      }

      @include it('md\:to-stone-300') {
        @include assert {
          @include output {
            @include md\:to-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }
      }

      @include it('md\:to-stone-400') {
        @include assert {
          @include output {
            @include md\:to-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }
      }

      @include it('md\:to-stone-500') {
        @include assert {
          @include output {
            @include md\:to-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }
      }

      @include it('md\:to-stone-600') {
        @include assert {
          @include output {
            @include md\:to-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }
      }

      @include it('md\:to-stone-700') {
        @include assert {
          @include output {
            @include md\:to-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }
      }

      @include it('md\:to-stone-800') {
        @include assert {
          @include output {
            @include md\:to-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }
      }

      @include it('md\:to-stone-900') {
        @include assert {
          @include output {
            @include md\:to-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }
      }

      @include it('md\:to-stone-950') {
        @include assert {
          @include output {
            @include md\:to-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }
      }

      @include it('md\:to-red-50') {
        @include assert {
          @include output {
            @include md\:to-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }
      }

      @include it('md\:to-red-100') {
        @include assert {
          @include output {
            @include md\:to-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }
      }

      @include it('md\:to-red-200') {
        @include assert {
          @include output {
            @include md\:to-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }
      }

      @include it('md\:to-red-300') {
        @include assert {
          @include output {
            @include md\:to-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }
      }

      @include it('md\:to-red-400') {
        @include assert {
          @include output {
            @include md\:to-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }
      }

      @include it('md\:to-red-500') {
        @include assert {
          @include output {
            @include md\:to-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }
      }

      @include it('md\:to-red-600') {
        @include assert {
          @include output {
            @include md\:to-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }
      }

      @include it('md\:to-red-700') {
        @include assert {
          @include output {
            @include md\:to-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }
      }

      @include it('md\:to-red-800') {
        @include assert {
          @include output {
            @include md\:to-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }
      }

      @include it('md\:to-red-900') {
        @include assert {
          @include output {
            @include md\:to-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }
      }

      @include it('md\:to-red-950') {
        @include assert {
          @include output {
            @include md\:to-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }
      }

      @include it('md\:to-orange-50') {
        @include assert {
          @include output {
            @include md\:to-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }
      }

      @include it('md\:to-orange-100') {
        @include assert {
          @include output {
            @include md\:to-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }
      }

      @include it('md\:to-orange-200') {
        @include assert {
          @include output {
            @include md\:to-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }
      }

      @include it('md\:to-orange-300') {
        @include assert {
          @include output {
            @include md\:to-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }
      }

      @include it('md\:to-orange-400') {
        @include assert {
          @include output {
            @include md\:to-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }
      }

      @include it('md\:to-orange-500') {
        @include assert {
          @include output {
            @include md\:to-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }
      }

      @include it('md\:to-orange-600') {
        @include assert {
          @include output {
            @include md\:to-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }
      }

      @include it('md\:to-orange-700') {
        @include assert {
          @include output {
            @include md\:to-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }
      }

      @include it('md\:to-orange-800') {
        @include assert {
          @include output {
            @include md\:to-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }
      }

      @include it('md\:to-orange-900') {
        @include assert {
          @include output {
            @include md\:to-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }
      }

      @include it('md\:to-orange-950') {
        @include assert {
          @include output {
            @include md\:to-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }
      }

      @include it('md\:to-amber-50') {
        @include assert {
          @include output {
            @include md\:to-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }
      }

      @include it('md\:to-amber-100') {
        @include assert {
          @include output {
            @include md\:to-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }
      }

      @include it('md\:to-amber-200') {
        @include assert {
          @include output {
            @include md\:to-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }
      }

      @include it('md\:to-amber-300') {
        @include assert {
          @include output {
            @include md\:to-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }
      }

      @include it('md\:to-amber-400') {
        @include assert {
          @include output {
            @include md\:to-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }
      }

      @include it('md\:to-amber-500') {
        @include assert {
          @include output {
            @include md\:to-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }
      }

      @include it('md\:to-amber-600') {
        @include assert {
          @include output {
            @include md\:to-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }
      }

      @include it('md\:to-amber-700') {
        @include assert {
          @include output {
            @include md\:to-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }
      }

      @include it('md\:to-amber-800') {
        @include assert {
          @include output {
            @include md\:to-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }
      }

      @include it('md\:to-amber-900') {
        @include assert {
          @include output {
            @include md\:to-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }
      }

      @include it('md\:to-amber-950') {
        @include assert {
          @include output {
            @include md\:to-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }
      }

      @include it('md\:to-yellow-50') {
        @include assert {
          @include output {
            @include md\:to-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }
      }

      @include it('md\:to-yellow-100') {
        @include assert {
          @include output {
            @include md\:to-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }
      }

      @include it('md\:to-yellow-200') {
        @include assert {
          @include output {
            @include md\:to-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }
      }

      @include it('md\:to-yellow-300') {
        @include assert {
          @include output {
            @include md\:to-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }
      }

      @include it('md\:to-yellow-400') {
        @include assert {
          @include output {
            @include md\:to-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }
      }

      @include it('md\:to-yellow-500') {
        @include assert {
          @include output {
            @include md\:to-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }
      }

      @include it('md\:to-yellow-600') {
        @include assert {
          @include output {
            @include md\:to-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }
      }

      @include it('md\:to-yellow-700') {
        @include assert {
          @include output {
            @include md\:to-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }
      }

      @include it('md\:to-yellow-800') {
        @include assert {
          @include output {
            @include md\:to-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }
      }

      @include it('md\:to-yellow-900') {
        @include assert {
          @include output {
            @include md\:to-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }
      }

      @include it('md\:to-yellow-950') {
        @include assert {
          @include output {
            @include md\:to-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }
      }

      @include it('md\:to-lime-50') {
        @include assert {
          @include output {
            @include md\:to-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }
      }

      @include it('md\:to-lime-100') {
        @include assert {
          @include output {
            @include md\:to-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }
      }

      @include it('md\:to-lime-200') {
        @include assert {
          @include output {
            @include md\:to-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }
      }

      @include it('md\:to-lime-300') {
        @include assert {
          @include output {
            @include md\:to-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }
      }

      @include it('md\:to-lime-400') {
        @include assert {
          @include output {
            @include md\:to-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }
      }

      @include it('md\:to-lime-500') {
        @include assert {
          @include output {
            @include md\:to-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }
      }

      @include it('md\:to-lime-600') {
        @include assert {
          @include output {
            @include md\:to-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }
      }

      @include it('md\:to-lime-700') {
        @include assert {
          @include output {
            @include md\:to-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }
      }

      @include it('md\:to-lime-800') {
        @include assert {
          @include output {
            @include md\:to-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }
      }

      @include it('md\:to-lime-900') {
        @include assert {
          @include output {
            @include md\:to-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }
      }

      @include it('md\:to-lime-950') {
        @include assert {
          @include output {
            @include md\:to-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }
      }

      @include it('md\:to-green-50') {
        @include assert {
          @include output {
            @include md\:to-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }
      }

      @include it('md\:to-green-100') {
        @include assert {
          @include output {
            @include md\:to-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }
      }

      @include it('md\:to-green-200') {
        @include assert {
          @include output {
            @include md\:to-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }
      }

      @include it('md\:to-green-300') {
        @include assert {
          @include output {
            @include md\:to-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }
      }

      @include it('md\:to-green-400') {
        @include assert {
          @include output {
            @include md\:to-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }
      }

      @include it('md\:to-green-500') {
        @include assert {
          @include output {
            @include md\:to-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }
      }

      @include it('md\:to-green-600') {
        @include assert {
          @include output {
            @include md\:to-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }
      }

      @include it('md\:to-green-700') {
        @include assert {
          @include output {
            @include md\:to-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }
      }

      @include it('md\:to-green-800') {
        @include assert {
          @include output {
            @include md\:to-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }
      }

      @include it('md\:to-green-900') {
        @include assert {
          @include output {
            @include md\:to-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }
      }

      @include it('md\:to-green-950') {
        @include assert {
          @include output {
            @include md\:to-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }
      }

      @include it('md\:to-emerald-50') {
        @include assert {
          @include output {
            @include md\:to-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }
      }

      @include it('md\:to-emerald-100') {
        @include assert {
          @include output {
            @include md\:to-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }
      }

      @include it('md\:to-emerald-200') {
        @include assert {
          @include output {
            @include md\:to-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }
      }

      @include it('md\:to-emerald-300') {
        @include assert {
          @include output {
            @include md\:to-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }
      }

      @include it('md\:to-emerald-400') {
        @include assert {
          @include output {
            @include md\:to-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }
      }

      @include it('md\:to-emerald-500') {
        @include assert {
          @include output {
            @include md\:to-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }
      }

      @include it('md\:to-emerald-600') {
        @include assert {
          @include output {
            @include md\:to-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }
      }

      @include it('md\:to-emerald-700') {
        @include assert {
          @include output {
            @include md\:to-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }
      }

      @include it('md\:to-emerald-800') {
        @include assert {
          @include output {
            @include md\:to-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }
      }

      @include it('md\:to-emerald-900') {
        @include assert {
          @include output {
            @include md\:to-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }
      }

      @include it('md\:to-emerald-950') {
        @include assert {
          @include output {
            @include md\:to-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }
      }

      @include it('md\:to-teal-50') {
        @include assert {
          @include output {
            @include md\:to-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }
      }

      @include it('md\:to-teal-100') {
        @include assert {
          @include output {
            @include md\:to-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }
      }

      @include it('md\:to-teal-200') {
        @include assert {
          @include output {
            @include md\:to-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }
      }

      @include it('md\:to-teal-300') {
        @include assert {
          @include output {
            @include md\:to-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }
      }

      @include it('md\:to-teal-400') {
        @include assert {
          @include output {
            @include md\:to-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }
      }

      @include it('md\:to-teal-500') {
        @include assert {
          @include output {
            @include md\:to-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }
      }

      @include it('md\:to-teal-600') {
        @include assert {
          @include output {
            @include md\:to-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }
      }

      @include it('md\:to-teal-700') {
        @include assert {
          @include output {
            @include md\:to-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }
      }

      @include it('md\:to-teal-800') {
        @include assert {
          @include output {
            @include md\:to-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }
      }

      @include it('md\:to-teal-900') {
        @include assert {
          @include output {
            @include md\:to-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }
      }

      @include it('md\:to-teal-950') {
        @include assert {
          @include output {
            @include md\:to-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }
      }

      @include it('md\:to-cyan-50') {
        @include assert {
          @include output {
            @include md\:to-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }
      }

      @include it('md\:to-cyan-100') {
        @include assert {
          @include output {
            @include md\:to-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }
      }

      @include it('md\:to-cyan-200') {
        @include assert {
          @include output {
            @include md\:to-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }
      }

      @include it('md\:to-cyan-300') {
        @include assert {
          @include output {
            @include md\:to-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }
      }

      @include it('md\:to-cyan-400') {
        @include assert {
          @include output {
            @include md\:to-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }
      }

      @include it('md\:to-cyan-500') {
        @include assert {
          @include output {
            @include md\:to-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }
      }

      @include it('md\:to-cyan-600') {
        @include assert {
          @include output {
            @include md\:to-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }
      }

      @include it('md\:to-cyan-700') {
        @include assert {
          @include output {
            @include md\:to-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }
      }

      @include it('md\:to-cyan-800') {
        @include assert {
          @include output {
            @include md\:to-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }
      }

      @include it('md\:to-cyan-900') {
        @include assert {
          @include output {
            @include md\:to-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }
      }

      @include it('md\:to-cyan-950') {
        @include assert {
          @include output {
            @include md\:to-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }
      }

      @include it('md\:to-sky-50') {
        @include assert {
          @include output {
            @include md\:to-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }
      }

      @include it('md\:to-sky-100') {
        @include assert {
          @include output {
            @include md\:to-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }
      }

      @include it('md\:to-sky-200') {
        @include assert {
          @include output {
            @include md\:to-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }
      }

      @include it('md\:to-sky-300') {
        @include assert {
          @include output {
            @include md\:to-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }
      }

      @include it('md\:to-sky-400') {
        @include assert {
          @include output {
            @include md\:to-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }
      }

      @include it('md\:to-sky-500') {
        @include assert {
          @include output {
            @include md\:to-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }
      }

      @include it('md\:to-sky-600') {
        @include assert {
          @include output {
            @include md\:to-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }
      }

      @include it('md\:to-sky-700') {
        @include assert {
          @include output {
            @include md\:to-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }
      }

      @include it('md\:to-sky-800') {
        @include assert {
          @include output {
            @include md\:to-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }
      }

      @include it('md\:to-sky-900') {
        @include assert {
          @include output {
            @include md\:to-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }
      }

      @include it('md\:to-sky-950') {
        @include assert {
          @include output {
            @include md\:to-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }
      }

      @include it('md\:to-blue-50') {
        @include assert {
          @include output {
            @include md\:to-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }
      }

      @include it('md\:to-blue-100') {
        @include assert {
          @include output {
            @include md\:to-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }
      }

      @include it('md\:to-blue-200') {
        @include assert {
          @include output {
            @include md\:to-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }
      }

      @include it('md\:to-blue-300') {
        @include assert {
          @include output {
            @include md\:to-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }
      }

      @include it('md\:to-blue-400') {
        @include assert {
          @include output {
            @include md\:to-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }
      }

      @include it('md\:to-blue-500') {
        @include assert {
          @include output {
            @include md\:to-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }
      }

      @include it('md\:to-blue-600') {
        @include assert {
          @include output {
            @include md\:to-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }
      }

      @include it('md\:to-blue-700') {
        @include assert {
          @include output {
            @include md\:to-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }
      }

      @include it('md\:to-blue-800') {
        @include assert {
          @include output {
            @include md\:to-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }
      }

      @include it('md\:to-blue-900') {
        @include assert {
          @include output {
            @include md\:to-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }
      }

      @include it('md\:to-blue-950') {
        @include assert {
          @include output {
            @include md\:to-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }
      }

      @include it('md\:to-indigo-50') {
        @include assert {
          @include output {
            @include md\:to-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }
      }

      @include it('md\:to-indigo-100') {
        @include assert {
          @include output {
            @include md\:to-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }
      }

      @include it('md\:to-indigo-200') {
        @include assert {
          @include output {
            @include md\:to-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }
      }

      @include it('md\:to-indigo-300') {
        @include assert {
          @include output {
            @include md\:to-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }
      }

      @include it('md\:to-indigo-400') {
        @include assert {
          @include output {
            @include md\:to-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }
      }

      @include it('md\:to-indigo-500') {
        @include assert {
          @include output {
            @include md\:to-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }
      }

      @include it('md\:to-indigo-600') {
        @include assert {
          @include output {
            @include md\:to-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }
      }

      @include it('md\:to-indigo-700') {
        @include assert {
          @include output {
            @include md\:to-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }
      }

      @include it('md\:to-indigo-800') {
        @include assert {
          @include output {
            @include md\:to-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }
      }

      @include it('md\:to-indigo-900') {
        @include assert {
          @include output {
            @include md\:to-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }
      }

      @include it('md\:to-indigo-950') {
        @include assert {
          @include output {
            @include md\:to-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }
      }

      @include it('md\:to-violet-50') {
        @include assert {
          @include output {
            @include md\:to-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }
      }

      @include it('md\:to-violet-100') {
        @include assert {
          @include output {
            @include md\:to-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }
      }

      @include it('md\:to-violet-200') {
        @include assert {
          @include output {
            @include md\:to-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }
      }

      @include it('md\:to-violet-300') {
        @include assert {
          @include output {
            @include md\:to-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }
      }

      @include it('md\:to-violet-400') {
        @include assert {
          @include output {
            @include md\:to-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }
      }

      @include it('md\:to-violet-500') {
        @include assert {
          @include output {
            @include md\:to-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }
      }

      @include it('md\:to-violet-600') {
        @include assert {
          @include output {
            @include md\:to-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }
      }

      @include it('md\:to-violet-700') {
        @include assert {
          @include output {
            @include md\:to-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }
      }

      @include it('md\:to-violet-800') {
        @include assert {
          @include output {
            @include md\:to-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }
      }

      @include it('md\:to-violet-900') {
        @include assert {
          @include output {
            @include md\:to-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }
      }

      @include it('md\:to-violet-950') {
        @include assert {
          @include output {
            @include md\:to-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }
      }

      @include it('md\:to-purple-50') {
        @include assert {
          @include output {
            @include md\:to-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }
      }

      @include it('md\:to-purple-100') {
        @include assert {
          @include output {
            @include md\:to-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }
      }

      @include it('md\:to-purple-200') {
        @include assert {
          @include output {
            @include md\:to-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }
      }

      @include it('md\:to-purple-300') {
        @include assert {
          @include output {
            @include md\:to-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }
      }

      @include it('md\:to-purple-400') {
        @include assert {
          @include output {
            @include md\:to-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }
      }

      @include it('md\:to-purple-500') {
        @include assert {
          @include output {
            @include md\:to-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }
      }

      @include it('md\:to-purple-600') {
        @include assert {
          @include output {
            @include md\:to-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }
      }

      @include it('md\:to-purple-700') {
        @include assert {
          @include output {
            @include md\:to-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }
      }

      @include it('md\:to-purple-800') {
        @include assert {
          @include output {
            @include md\:to-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }
      }

      @include it('md\:to-purple-900') {
        @include assert {
          @include output {
            @include md\:to-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }
      }

      @include it('md\:to-purple-950') {
        @include assert {
          @include output {
            @include md\:to-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }
      }

      @include it('md\:to-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:to-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }
      }

      @include it('md\:to-pink-50') {
        @include assert {
          @include output {
            @include md\:to-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }
      }

      @include it('md\:to-pink-100') {
        @include assert {
          @include output {
            @include md\:to-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }
      }

      @include it('md\:to-pink-200') {
        @include assert {
          @include output {
            @include md\:to-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }
      }

      @include it('md\:to-pink-300') {
        @include assert {
          @include output {
            @include md\:to-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }
      }

      @include it('md\:to-pink-400') {
        @include assert {
          @include output {
            @include md\:to-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }
      }

      @include it('md\:to-pink-500') {
        @include assert {
          @include output {
            @include md\:to-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }
      }

      @include it('md\:to-pink-600') {
        @include assert {
          @include output {
            @include md\:to-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }
      }

      @include it('md\:to-pink-700') {
        @include assert {
          @include output {
            @include md\:to-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }
      }

      @include it('md\:to-pink-800') {
        @include assert {
          @include output {
            @include md\:to-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }
      }

      @include it('md\:to-pink-900') {
        @include assert {
          @include output {
            @include md\:to-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }
      }

      @include it('md\:to-pink-950') {
        @include assert {
          @include output {
            @include md\:to-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }
      }

      @include it('md\:to-rose-50') {
        @include assert {
          @include output {
            @include md\:to-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }
      }

      @include it('md\:to-rose-100') {
        @include assert {
          @include output {
            @include md\:to-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }
      }

      @include it('md\:to-rose-200') {
        @include assert {
          @include output {
            @include md\:to-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }
      }

      @include it('md\:to-rose-300') {
        @include assert {
          @include output {
            @include md\:to-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }
      }

      @include it('md\:to-rose-400') {
        @include assert {
          @include output {
            @include md\:to-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }
      }

      @include it('md\:to-rose-500') {
        @include assert {
          @include output {
            @include md\:to-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }
      }

      @include it('md\:to-rose-600') {
        @include assert {
          @include output {
            @include md\:to-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }
      }

      @include it('md\:to-rose-700') {
        @include assert {
          @include output {
            @include md\:to-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }
      }

      @include it('md\:to-rose-800') {
        @include assert {
          @include output {
            @include md\:to-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }
      }

      @include it('md\:to-rose-900') {
        @include assert {
          @include output {
            @include md\:to-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }
      }

      @include it('md\:to-rose-950') {
        @include assert {
          @include output {
            @include md\:to-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }
      }

      @include it('md\:to-0\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 0%);
            }
          }
        }
      }

      @include it('md\:to-5\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 5%);
            }
          }
        }
      }

      @include it('md\:to-10\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 10%);
            }
          }
        }
      }

      @include it('md\:to-15\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 15%);
            }
          }
        }
      }

      @include it('md\:to-20\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 20%);
            }
          }
        }
      }

      @include it('md\:to-25\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 25%);
            }
          }
        }
      }

      @include it('md\:to-30\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 30%);
            }
          }
        }
      }

      @include it('md\:to-35\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 35%);
            }
          }
        }
      }

      @include it('md\:to-40\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 40%);
            }
          }
        }
      }

      @include it('md\:to-45\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 45%);
            }
          }
        }
      }

      @include it('md\:to-50\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 50%);
            }
          }
        }
      }

      @include it('md\:to-55\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 55%);
            }
          }
        }
      }

      @include it('md\:to-60\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 60%);
            }
          }
        }
      }

      @include it('md\:to-65\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 65%);
            }
          }
        }
      }

      @include it('md\:to-70\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 70%);
            }
          }
        }
      }

      @include it('md\:to-75\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 75%);
            }
          }
        }
      }

      @include it('md\:to-80\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 80%);
            }
          }
        }
      }

      @include it('md\:to-85\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 85%);
            }
          }
        }
      }

      @include it('md\:to-90\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 90%);
            }
          }
        }
      }

      @include it('md\:to-95\%') {
        @include assert {
          @include output {
            @include md\:to-white;
            @include md\:to-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #fff 95%);
            }
          }
        }
      }

      @include it('lg\:from-inherit') {
        @include assert {
          @include output {
            @include lg\:from-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('lg\:from-current') {
        @include assert {
          @include output {
            @include lg\:from-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:from-transparent') {
        @include assert {
          @include output {
            @include lg\:from-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-100') {
        @include assert {
          @include output {
            @include lg\:from-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-200') {
        @include assert {
          @include output {
            @include lg\:from-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-300') {
        @include assert {
          @include output {
            @include lg\:from-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-400') {
        @include assert {
          @include output {
            @include lg\:from-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-500') {
        @include assert {
          @include output {
            @include lg\:from-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-600') {
        @include assert {
          @include output {
            @include lg\:from-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-700') {
        @include assert {
          @include output {
            @include lg\:from-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-800') {
        @include assert {
          @include output {
            @include lg\:from-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-900') {
        @include assert {
          @include output {
            @include lg\:from-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-slate-950') {
        @include assert {
          @include output {
            @include lg\:from-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-50') {
        @include assert {
          @include output {
            @include lg\:from-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-100') {
        @include assert {
          @include output {
            @include lg\:from-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-200') {
        @include assert {
          @include output {
            @include lg\:from-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-300') {
        @include assert {
          @include output {
            @include lg\:from-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-400') {
        @include assert {
          @include output {
            @include lg\:from-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-500') {
        @include assert {
          @include output {
            @include lg\:from-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-600') {
        @include assert {
          @include output {
            @include lg\:from-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-700') {
        @include assert {
          @include output {
            @include lg\:from-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-800') {
        @include assert {
          @include output {
            @include lg\:from-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-900') {
        @include assert {
          @include output {
            @include lg\:from-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }
      }

      @include it('lg\:from-gray-950') {
        @include assert {
          @include output {
            @include lg\:from-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-50') {
        @include assert {
          @include output {
            @include lg\:from-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-100') {
        @include assert {
          @include output {
            @include lg\:from-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-200') {
        @include assert {
          @include output {
            @include lg\:from-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-300') {
        @include assert {
          @include output {
            @include lg\:from-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-400') {
        @include assert {
          @include output {
            @include lg\:from-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-500') {
        @include assert {
          @include output {
            @include lg\:from-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-600') {
        @include assert {
          @include output {
            @include lg\:from-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-700') {
        @include assert {
          @include output {
            @include lg\:from-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-800') {
        @include assert {
          @include output {
            @include lg\:from-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-900') {
        @include assert {
          @include output {
            @include lg\:from-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-zinc-950') {
        @include assert {
          @include output {
            @include lg\:from-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-50') {
        @include assert {
          @include output {
            @include lg\:from-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-100') {
        @include assert {
          @include output {
            @include lg\:from-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f5f5f5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-200') {
        @include assert {
          @include output {
            @include lg\:from-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-300') {
        @include assert {
          @include output {
            @include lg\:from-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-400') {
        @include assert {
          @include output {
            @include lg\:from-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-500') {
        @include assert {
          @include output {
            @include lg\:from-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-600') {
        @include assert {
          @include output {
            @include lg\:from-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-700') {
        @include assert {
          @include output {
            @include lg\:from-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-800') {
        @include assert {
          @include output {
            @include lg\:from-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-900') {
        @include assert {
          @include output {
            @include lg\:from-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }
      }

      @include it('lg\:from-neutral-950') {
        @include assert {
          @include output {
            @include lg\:from-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-50') {
        @include assert {
          @include output {
            @include lg\:from-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-100') {
        @include assert {
          @include output {
            @include lg\:from-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-200') {
        @include assert {
          @include output {
            @include lg\:from-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-300') {
        @include assert {
          @include output {
            @include lg\:from-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-400') {
        @include assert {
          @include output {
            @include lg\:from-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-500') {
        @include assert {
          @include output {
            @include lg\:from-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-600') {
        @include assert {
          @include output {
            @include lg\:from-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-700') {
        @include assert {
          @include output {
            @include lg\:from-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-800') {
        @include assert {
          @include output {
            @include lg\:from-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-900') {
        @include assert {
          @include output {
            @include lg\:from-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }
      }

      @include it('lg\:from-stone-950') {
        @include assert {
          @include output {
            @include lg\:from-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-50') {
        @include assert {
          @include output {
            @include lg\:from-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-100') {
        @include assert {
          @include output {
            @include lg\:from-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-200') {
        @include assert {
          @include output {
            @include lg\:from-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-300') {
        @include assert {
          @include output {
            @include lg\:from-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-400') {
        @include assert {
          @include output {
            @include lg\:from-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-500') {
        @include assert {
          @include output {
            @include lg\:from-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-600') {
        @include assert {
          @include output {
            @include lg\:from-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-700') {
        @include assert {
          @include output {
            @include lg\:from-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-800') {
        @include assert {
          @include output {
            @include lg\:from-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-900') {
        @include assert {
          @include output {
            @include lg\:from-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-red-950') {
        @include assert {
          @include output {
            @include lg\:from-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-50') {
        @include assert {
          @include output {
            @include lg\:from-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-100') {
        @include assert {
          @include output {
            @include lg\:from-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-200') {
        @include assert {
          @include output {
            @include lg\:from-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-300') {
        @include assert {
          @include output {
            @include lg\:from-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-400') {
        @include assert {
          @include output {
            @include lg\:from-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-500') {
        @include assert {
          @include output {
            @include lg\:from-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-600') {
        @include assert {
          @include output {
            @include lg\:from-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-700') {
        @include assert {
          @include output {
            @include lg\:from-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-800') {
        @include assert {
          @include output {
            @include lg\:from-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-900') {
        @include assert {
          @include output {
            @include lg\:from-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }
      }

      @include it('lg\:from-orange-950') {
        @include assert {
          @include output {
            @include lg\:from-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-50') {
        @include assert {
          @include output {
            @include lg\:from-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-100') {
        @include assert {
          @include output {
            @include lg\:from-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-200') {
        @include assert {
          @include output {
            @include lg\:from-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-300') {
        @include assert {
          @include output {
            @include lg\:from-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-400') {
        @include assert {
          @include output {
            @include lg\:from-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-500') {
        @include assert {
          @include output {
            @include lg\:from-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-600') {
        @include assert {
          @include output {
            @include lg\:from-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-700') {
        @include assert {
          @include output {
            @include lg\:from-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-800') {
        @include assert {
          @include output {
            @include lg\:from-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-900') {
        @include assert {
          @include output {
            @include lg\:from-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }
      }

      @include it('lg\:from-amber-950') {
        @include assert {
          @include output {
            @include lg\:from-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-50') {
        @include assert {
          @include output {
            @include lg\:from-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-100') {
        @include assert {
          @include output {
            @include lg\:from-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-200') {
        @include assert {
          @include output {
            @include lg\:from-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-300') {
        @include assert {
          @include output {
            @include lg\:from-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-400') {
        @include assert {
          @include output {
            @include lg\:from-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-500') {
        @include assert {
          @include output {
            @include lg\:from-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-600') {
        @include assert {
          @include output {
            @include lg\:from-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-700') {
        @include assert {
          @include output {
            @include lg\:from-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-800') {
        @include assert {
          @include output {
            @include lg\:from-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-900') {
        @include assert {
          @include output {
            @include lg\:from-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }
      }

      @include it('lg\:from-yellow-950') {
        @include assert {
          @include output {
            @include lg\:from-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-50') {
        @include assert {
          @include output {
            @include lg\:from-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-100') {
        @include assert {
          @include output {
            @include lg\:from-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-200') {
        @include assert {
          @include output {
            @include lg\:from-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-300') {
        @include assert {
          @include output {
            @include lg\:from-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-400') {
        @include assert {
          @include output {
            @include lg\:from-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-500') {
        @include assert {
          @include output {
            @include lg\:from-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-600') {
        @include assert {
          @include output {
            @include lg\:from-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-700') {
        @include assert {
          @include output {
            @include lg\:from-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-800') {
        @include assert {
          @include output {
            @include lg\:from-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-900') {
        @include assert {
          @include output {
            @include lg\:from-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }
      }

      @include it('lg\:from-lime-950') {
        @include assert {
          @include output {
            @include lg\:from-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-50') {
        @include assert {
          @include output {
            @include lg\:from-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-100') {
        @include assert {
          @include output {
            @include lg\:from-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-200') {
        @include assert {
          @include output {
            @include lg\:from-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-300') {
        @include assert {
          @include output {
            @include lg\:from-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-400') {
        @include assert {
          @include output {
            @include lg\:from-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-500') {
        @include assert {
          @include output {
            @include lg\:from-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-600') {
        @include assert {
          @include output {
            @include lg\:from-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-700') {
        @include assert {
          @include output {
            @include lg\:from-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-800') {
        @include assert {
          @include output {
            @include lg\:from-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-900') {
        @include assert {
          @include output {
            @include lg\:from-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-green-950') {
        @include assert {
          @include output {
            @include lg\:from-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-50') {
        @include assert {
          @include output {
            @include lg\:from-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-100') {
        @include assert {
          @include output {
            @include lg\:from-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-200') {
        @include assert {
          @include output {
            @include lg\:from-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-300') {
        @include assert {
          @include output {
            @include lg\:from-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-400') {
        @include assert {
          @include output {
            @include lg\:from-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-500') {
        @include assert {
          @include output {
            @include lg\:from-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-600') {
        @include assert {
          @include output {
            @include lg\:from-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-700') {
        @include assert {
          @include output {
            @include lg\:from-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-800') {
        @include assert {
          @include output {
            @include lg\:from-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-900') {
        @include assert {
          @include output {
            @include lg\:from-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-emerald-950') {
        @include assert {
          @include output {
            @include lg\:from-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-50') {
        @include assert {
          @include output {
            @include lg\:from-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-100') {
        @include assert {
          @include output {
            @include lg\:from-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-200') {
        @include assert {
          @include output {
            @include lg\:from-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-300') {
        @include assert {
          @include output {
            @include lg\:from-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-400') {
        @include assert {
          @include output {
            @include lg\:from-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-500') {
        @include assert {
          @include output {
            @include lg\:from-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-600') {
        @include assert {
          @include output {
            @include lg\:from-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-700') {
        @include assert {
          @include output {
            @include lg\:from-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-800') {
        @include assert {
          @include output {
            @include lg\:from-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-900') {
        @include assert {
          @include output {
            @include lg\:from-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-teal-950') {
        @include assert {
          @include output {
            @include lg\:from-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-50') {
        @include assert {
          @include output {
            @include lg\:from-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-100') {
        @include assert {
          @include output {
            @include lg\:from-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-200') {
        @include assert {
          @include output {
            @include lg\:from-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-300') {
        @include assert {
          @include output {
            @include lg\:from-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-400') {
        @include assert {
          @include output {
            @include lg\:from-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-500') {
        @include assert {
          @include output {
            @include lg\:from-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-600') {
        @include assert {
          @include output {
            @include lg\:from-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-700') {
        @include assert {
          @include output {
            @include lg\:from-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-800') {
        @include assert {
          @include output {
            @include lg\:from-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-900') {
        @include assert {
          @include output {
            @include lg\:from-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }
      }

      @include it('lg\:from-cyan-950') {
        @include assert {
          @include output {
            @include lg\:from-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-50') {
        @include assert {
          @include output {
            @include lg\:from-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-100') {
        @include assert {
          @include output {
            @include lg\:from-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-200') {
        @include assert {
          @include output {
            @include lg\:from-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-300') {
        @include assert {
          @include output {
            @include lg\:from-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-400') {
        @include assert {
          @include output {
            @include lg\:from-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-500') {
        @include assert {
          @include output {
            @include lg\:from-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-600') {
        @include assert {
          @include output {
            @include lg\:from-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-700') {
        @include assert {
          @include output {
            @include lg\:from-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-800') {
        @include assert {
          @include output {
            @include lg\:from-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-900') {
        @include assert {
          @include output {
            @include lg\:from-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-sky-950') {
        @include assert {
          @include output {
            @include lg\:from-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-50') {
        @include assert {
          @include output {
            @include lg\:from-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-100') {
        @include assert {
          @include output {
            @include lg\:from-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-200') {
        @include assert {
          @include output {
            @include lg\:from-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-300') {
        @include assert {
          @include output {
            @include lg\:from-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-400') {
        @include assert {
          @include output {
            @include lg\:from-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-500') {
        @include assert {
          @include output {
            @include lg\:from-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-600') {
        @include assert {
          @include output {
            @include lg\:from-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-700') {
        @include assert {
          @include output {
            @include lg\:from-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-800') {
        @include assert {
          @include output {
            @include lg\:from-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-900') {
        @include assert {
          @include output {
            @include lg\:from-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }
      }

      @include it('lg\:from-blue-950') {
        @include assert {
          @include output {
            @include lg\:from-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-50') {
        @include assert {
          @include output {
            @include lg\:from-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-100') {
        @include assert {
          @include output {
            @include lg\:from-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-200') {
        @include assert {
          @include output {
            @include lg\:from-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-300') {
        @include assert {
          @include output {
            @include lg\:from-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-400') {
        @include assert {
          @include output {
            @include lg\:from-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-500') {
        @include assert {
          @include output {
            @include lg\:from-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-600') {
        @include assert {
          @include output {
            @include lg\:from-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-700') {
        @include assert {
          @include output {
            @include lg\:from-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-800') {
        @include assert {
          @include output {
            @include lg\:from-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-900') {
        @include assert {
          @include output {
            @include lg\:from-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }
      }

      @include it('lg\:from-indigo-950') {
        @include assert {
          @include output {
            @include lg\:from-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-50') {
        @include assert {
          @include output {
            @include lg\:from-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-100') {
        @include assert {
          @include output {
            @include lg\:from-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-200') {
        @include assert {
          @include output {
            @include lg\:from-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-300') {
        @include assert {
          @include output {
            @include lg\:from-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-400') {
        @include assert {
          @include output {
            @include lg\:from-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-500') {
        @include assert {
          @include output {
            @include lg\:from-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-600') {
        @include assert {
          @include output {
            @include lg\:from-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-700') {
        @include assert {
          @include output {
            @include lg\:from-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-800') {
        @include assert {
          @include output {
            @include lg\:from-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-900') {
        @include assert {
          @include output {
            @include lg\:from-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }
      }

      @include it('lg\:from-violet-950') {
        @include assert {
          @include output {
            @include lg\:from-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-50') {
        @include assert {
          @include output {
            @include lg\:from-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-100') {
        @include assert {
          @include output {
            @include lg\:from-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-200') {
        @include assert {
          @include output {
            @include lg\:from-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-300') {
        @include assert {
          @include output {
            @include lg\:from-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-400') {
        @include assert {
          @include output {
            @include lg\:from-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-500') {
        @include assert {
          @include output {
            @include lg\:from-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-600') {
        @include assert {
          @include output {
            @include lg\:from-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-700') {
        @include assert {
          @include output {
            @include lg\:from-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-800') {
        @include assert {
          @include output {
            @include lg\:from-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-900') {
        @include assert {
          @include output {
            @include lg\:from-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }
      }

      @include it('lg\:from-purple-950') {
        @include assert {
          @include output {
            @include lg\:from-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }
      }

      @include it('lg\:from-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:from-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-50') {
        @include assert {
          @include output {
            @include lg\:from-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-100') {
        @include assert {
          @include output {
            @include lg\:from-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-200') {
        @include assert {
          @include output {
            @include lg\:from-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-300') {
        @include assert {
          @include output {
            @include lg\:from-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-400') {
        @include assert {
          @include output {
            @include lg\:from-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-500') {
        @include assert {
          @include output {
            @include lg\:from-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-600') {
        @include assert {
          @include output {
            @include lg\:from-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-700') {
        @include assert {
          @include output {
            @include lg\:from-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-800') {
        @include assert {
          @include output {
            @include lg\:from-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-900') {
        @include assert {
          @include output {
            @include lg\:from-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }
      }

      @include it('lg\:from-pink-950') {
        @include assert {
          @include output {
            @include lg\:from-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-50') {
        @include assert {
          @include output {
            @include lg\:from-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-100') {
        @include assert {
          @include output {
            @include lg\:from-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-200') {
        @include assert {
          @include output {
            @include lg\:from-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-300') {
        @include assert {
          @include output {
            @include lg\:from-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-400') {
        @include assert {
          @include output {
            @include lg\:from-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-500') {
        @include assert {
          @include output {
            @include lg\:from-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-600') {
        @include assert {
          @include output {
            @include lg\:from-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-700') {
        @include assert {
          @include output {
            @include lg\:from-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-800') {
        @include assert {
          @include output {
            @include lg\:from-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-900') {
        @include assert {
          @include output {
            @include lg\:from-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }
      }

      @include it('lg\:from-rose-950') {
        @include assert {
          @include output {
            @include lg\:from-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }
      }

      @include it('lg\:from-0\%') {
        @include assert {
          @include output {
            @include lg\:from-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-5\%') {
        @include assert {
          @include output {
            @include lg\:from-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-10\%') {
        @include assert {
          @include output {
            @include lg\:from-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-15\%') {
        @include assert {
          @include output {
            @include lg\:from-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-20\%') {
        @include assert {
          @include output {
            @include lg\:from-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-25\%') {
        @include assert {
          @include output {
            @include lg\:from-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-30\%') {
        @include assert {
          @include output {
            @include lg\:from-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-35\%') {
        @include assert {
          @include output {
            @include lg\:from-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-40\%') {
        @include assert {
          @include output {
            @include lg\:from-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-45\%') {
        @include assert {
          @include output {
            @include lg\:from-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-50\%') {
        @include assert {
          @include output {
            @include lg\:from-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-55\%') {
        @include assert {
          @include output {
            @include lg\:from-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-60\%') {
        @include assert {
          @include output {
            @include lg\:from-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-65\%') {
        @include assert {
          @include output {
            @include lg\:from-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-70\%') {
        @include assert {
          @include output {
            @include lg\:from-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-75\%') {
        @include assert {
          @include output {
            @include lg\:from-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-80\%') {
        @include assert {
          @include output {
            @include lg\:from-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-85\%') {
        @include assert {
          @include output {
            @include lg\:from-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-90\%') {
        @include assert {
          @include output {
            @include lg\:from-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }
      }

      @include it('lg\:from-95\%') {
        @include assert {
          @include output {
            @include lg\:from-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }
      }

      @include it('lg\:via-inherit') {
        @include assert {
          @include output {
            @include lg\:via-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('lg\:via-current') {
        @include assert {
          @include output {
            @include lg\:via-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-transparent') {
        @include assert {
          @include output {
            @include lg\:via-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                transparent,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-100') {
        @include assert {
          @include output {
            @include lg\:via-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f1f5f9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-200') {
        @include assert {
          @include output {
            @include lg\:via-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e2e8f0,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-300') {
        @include assert {
          @include output {
            @include lg\:via-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #cbd5e1,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-400') {
        @include assert {
          @include output {
            @include lg\:via-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #94a3b8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-500') {
        @include assert {
          @include output {
            @include lg\:via-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #64748b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-600') {
        @include assert {
          @include output {
            @include lg\:via-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #475569,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-700') {
        @include assert {
          @include output {
            @include lg\:via-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #334155,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-800') {
        @include assert {
          @include output {
            @include lg\:via-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e293b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-900') {
        @include assert {
          @include output {
            @include lg\:via-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f172a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-slate-950') {
        @include assert {
          @include output {
            @include lg\:via-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #020617,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-50') {
        @include assert {
          @include output {
            @include lg\:via-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9fafb,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-100') {
        @include assert {
          @include output {
            @include lg\:via-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3f4f6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-200') {
        @include assert {
          @include output {
            @include lg\:via-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e7eb,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-300') {
        @include assert {
          @include output {
            @include lg\:via-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1d5db,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-400') {
        @include assert {
          @include output {
            @include lg\:via-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #9ca3af,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-500') {
        @include assert {
          @include output {
            @include lg\:via-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b7280,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-600') {
        @include assert {
          @include output {
            @include lg\:via-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4b5563,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-700') {
        @include assert {
          @include output {
            @include lg\:via-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #374151,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-800') {
        @include assert {
          @include output {
            @include lg\:via-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1f2937,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-900') {
        @include assert {
          @include output {
            @include lg\:via-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #111827,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-gray-950') {
        @include assert {
          @include output {
            @include lg\:via-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #030712,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-50') {
        @include assert {
          @include output {
            @include lg\:via-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-100') {
        @include assert {
          @include output {
            @include lg\:via-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f4f4f5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-200') {
        @include assert {
          @include output {
            @include lg\:via-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e4e4e7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-300') {
        @include assert {
          @include output {
            @include lg\:via-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-400') {
        @include assert {
          @include output {
            @include lg\:via-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a1a1aa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-500') {
        @include assert {
          @include output {
            @include lg\:via-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #71717a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-600') {
        @include assert {
          @include output {
            @include lg\:via-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #52525b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-700') {
        @include assert {
          @include output {
            @include lg\:via-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f3f46,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-800') {
        @include assert {
          @include output {
            @include lg\:via-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #27272a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-900') {
        @include assert {
          @include output {
            @include lg\:via-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #18181b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-zinc-950') {
        @include assert {
          @include output {
            @include lg\:via-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #09090b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-50') {
        @include assert {
          @include output {
            @include lg\:via-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-100') {
        @include assert {
          @include output {
            @include lg\:via-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-200') {
        @include assert {
          @include output {
            @include lg\:via-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e5e5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-300') {
        @include assert {
          @include output {
            @include lg\:via-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-400') {
        @include assert {
          @include output {
            @include lg\:via-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3a3a3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-500') {
        @include assert {
          @include output {
            @include lg\:via-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #737373,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-600') {
        @include assert {
          @include output {
            @include lg\:via-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #525252,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-700') {
        @include assert {
          @include output {
            @include lg\:via-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #404040,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-800') {
        @include assert {
          @include output {
            @include lg\:via-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #262626,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-900') {
        @include assert {
          @include output {
            @include lg\:via-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #171717,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-neutral-950') {
        @include assert {
          @include output {
            @include lg\:via-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0a0a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-50') {
        @include assert {
          @include output {
            @include lg\:via-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafaf9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-100') {
        @include assert {
          @include output {
            @include lg\:via-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-200') {
        @include assert {
          @include output {
            @include lg\:via-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e7e5e4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-300') {
        @include assert {
          @include output {
            @include lg\:via-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d6d3d1,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-400') {
        @include assert {
          @include output {
            @include lg\:via-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a8a29e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-500') {
        @include assert {
          @include output {
            @include lg\:via-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #78716c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-600') {
        @include assert {
          @include output {
            @include lg\:via-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #57534e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-700') {
        @include assert {
          @include output {
            @include lg\:via-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #44403c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-800') {
        @include assert {
          @include output {
            @include lg\:via-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #292524,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-900') {
        @include assert {
          @include output {
            @include lg\:via-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1c1917,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-stone-950') {
        @include assert {
          @include output {
            @include lg\:via-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c0a09,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-50') {
        @include assert {
          @include output {
            @include lg\:via-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef2f2,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-100') {
        @include assert {
          @include output {
            @include lg\:via-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fee2e2,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-200') {
        @include assert {
          @include output {
            @include lg\:via-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecaca,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-300') {
        @include assert {
          @include output {
            @include lg\:via-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fca5a5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-400') {
        @include assert {
          @include output {
            @include lg\:via-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f87171,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-500') {
        @include assert {
          @include output {
            @include lg\:via-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ef4444,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-600') {
        @include assert {
          @include output {
            @include lg\:via-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #dc2626,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-700') {
        @include assert {
          @include output {
            @include lg\:via-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #b91c1c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-800') {
        @include assert {
          @include output {
            @include lg\:via-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #991b1b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-900') {
        @include assert {
          @include output {
            @include lg\:via-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #7f1d1d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-red-950') {
        @include assert {
          @include output {
            @include lg\:via-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #450a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-50') {
        @include assert {
          @include output {
            @include lg\:via-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff7ed,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-100') {
        @include assert {
          @include output {
            @include lg\:via-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffedd5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-200') {
        @include assert {
          @include output {
            @include lg\:via-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fed7aa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-300') {
        @include assert {
          @include output {
            @include lg\:via-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdba74,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-400') {
        @include assert {
          @include output {
            @include lg\:via-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb923c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-500') {
        @include assert {
          @include output {
            @include lg\:via-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f97316,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-600') {
        @include assert {
          @include output {
            @include lg\:via-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ea580c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-700') {
        @include assert {
          @include output {
            @include lg\:via-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #c2410c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-800') {
        @include assert {
          @include output {
            @include lg\:via-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #9a3412,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-900') {
        @include assert {
          @include output {
            @include lg\:via-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c2d12,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-orange-950') {
        @include assert {
          @include output {
            @include lg\:via-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #431407,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-50') {
        @include assert {
          @include output {
            @include lg\:via-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fffbeb,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-100') {
        @include assert {
          @include output {
            @include lg\:via-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef3c7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-200') {
        @include assert {
          @include output {
            @include lg\:via-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde68a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-300') {
        @include assert {
          @include output {
            @include lg\:via-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fcd34d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-400') {
        @include assert {
          @include output {
            @include lg\:via-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbbf24,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-500') {
        @include assert {
          @include output {
            @include lg\:via-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f59e0b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-600') {
        @include assert {
          @include output {
            @include lg\:via-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d97706,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-700') {
        @include assert {
          @include output {
            @include lg\:via-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #b45309,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-800') {
        @include assert {
          @include output {
            @include lg\:via-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #92400e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-900') {
        @include assert {
          @include output {
            @include lg\:via-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #78350f,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-amber-950') {
        @include assert {
          @include output {
            @include lg\:via-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #451a03,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-50') {
        @include assert {
          @include output {
            @include lg\:via-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fefce8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-100') {
        @include assert {
          @include output {
            @include lg\:via-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef9c3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-200') {
        @include assert {
          @include output {
            @include lg\:via-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef08a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-300') {
        @include assert {
          @include output {
            @include lg\:via-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde047,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-400') {
        @include assert {
          @include output {
            @include lg\:via-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #facc15,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-500') {
        @include assert {
          @include output {
            @include lg\:via-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #eab308,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-600') {
        @include assert {
          @include output {
            @include lg\:via-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ca8a04,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-700') {
        @include assert {
          @include output {
            @include lg\:via-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a16207,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-800') {
        @include assert {
          @include output {
            @include lg\:via-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #854d0e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-900') {
        @include assert {
          @include output {
            @include lg\:via-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #713f12,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-yellow-950') {
        @include assert {
          @include output {
            @include lg\:via-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #422006,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-50') {
        @include assert {
          @include output {
            @include lg\:via-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f7fee7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-100') {
        @include assert {
          @include output {
            @include lg\:via-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfccb,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-200') {
        @include assert {
          @include output {
            @include lg\:via-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d9f99d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-300') {
        @include assert {
          @include output {
            @include lg\:via-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #bef264,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-400') {
        @include assert {
          @include output {
            @include lg\:via-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3e635,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-500') {
        @include assert {
          @include output {
            @include lg\:via-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #84cc16,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-600') {
        @include assert {
          @include output {
            @include lg\:via-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #65a30d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-700') {
        @include assert {
          @include output {
            @include lg\:via-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4d7c0f,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-800') {
        @include assert {
          @include output {
            @include lg\:via-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f6212,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-900') {
        @include assert {
          @include output {
            @include lg\:via-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #365314,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-lime-950') {
        @include assert {
          @include output {
            @include lg\:via-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1a2e05,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-50') {
        @include assert {
          @include output {
            @include lg\:via-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdf4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-100') {
        @include assert {
          @include output {
            @include lg\:via-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #dcfce7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-200') {
        @include assert {
          @include output {
            @include lg\:via-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #bbf7d0,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-300') {
        @include assert {
          @include output {
            @include lg\:via-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #86efac,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-400') {
        @include assert {
          @include output {
            @include lg\:via-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4ade80,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-500') {
        @include assert {
          @include output {
            @include lg\:via-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #22c55e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-600') {
        @include assert {
          @include output {
            @include lg\:via-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #16a34a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-700') {
        @include assert {
          @include output {
            @include lg\:via-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #15803d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-800') {
        @include assert {
          @include output {
            @include lg\:via-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #166534,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-900') {
        @include assert {
          @include output {
            @include lg\:via-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #14532d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-green-950') {
        @include assert {
          @include output {
            @include lg\:via-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #052e16,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-50') {
        @include assert {
          @include output {
            @include lg\:via-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfdf5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-100') {
        @include assert {
          @include output {
            @include lg\:via-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1fae5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-200') {
        @include assert {
          @include output {
            @include lg\:via-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a7f3d0,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-300') {
        @include assert {
          @include output {
            @include lg\:via-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #6ee7b7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-400') {
        @include assert {
          @include output {
            @include lg\:via-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #34d399,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-500') {
        @include assert {
          @include output {
            @include lg\:via-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #10b981,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-600') {
        @include assert {
          @include output {
            @include lg\:via-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #059669,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-700') {
        @include assert {
          @include output {
            @include lg\:via-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #047857,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-800') {
        @include assert {
          @include output {
            @include lg\:via-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #065f46,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-900') {
        @include assert {
          @include output {
            @include lg\:via-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #064e3b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-emerald-950') {
        @include assert {
          @include output {
            @include lg\:via-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #022c22,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-50') {
        @include assert {
          @include output {
            @include lg\:via-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdfa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-100') {
        @include assert {
          @include output {
            @include lg\:via-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ccfbf1,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-200') {
        @include assert {
          @include output {
            @include lg\:via-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #99f6e4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-300') {
        @include assert {
          @include output {
            @include lg\:via-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #5eead4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-400') {
        @include assert {
          @include output {
            @include lg\:via-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #2dd4bf,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-500') {
        @include assert {
          @include output {
            @include lg\:via-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #14b8a6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-600') {
        @include assert {
          @include output {
            @include lg\:via-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0d9488,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-700') {
        @include assert {
          @include output {
            @include lg\:via-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f766e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-800') {
        @include assert {
          @include output {
            @include lg\:via-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #115e59,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-900') {
        @include assert {
          @include output {
            @include lg\:via-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #134e4a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-teal-950') {
        @include assert {
          @include output {
            @include lg\:via-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #042f2e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-50') {
        @include assert {
          @include output {
            @include lg\:via-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfeff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-100') {
        @include assert {
          @include output {
            @include lg\:via-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #cffafe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-200') {
        @include assert {
          @include output {
            @include lg\:via-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5f3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-300') {
        @include assert {
          @include output {
            @include lg\:via-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #67e8f9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-400') {
        @include assert {
          @include output {
            @include lg\:via-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #22d3ee,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-500') {
        @include assert {
          @include output {
            @include lg\:via-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #06b6d4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-600') {
        @include assert {
          @include output {
            @include lg\:via-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0891b2,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-700') {
        @include assert {
          @include output {
            @include lg\:via-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0e7490,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-800') {
        @include assert {
          @include output {
            @include lg\:via-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #155e75,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-900') {
        @include assert {
          @include output {
            @include lg\:via-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #164e63,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-cyan-950') {
        @include assert {
          @include output {
            @include lg\:via-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #083344,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-50') {
        @include assert {
          @include output {
            @include lg\:via-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0f9ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-100') {
        @include assert {
          @include output {
            @include lg\:via-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0f2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-200') {
        @include assert {
          @include output {
            @include lg\:via-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #bae6fd,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-300') {
        @include assert {
          @include output {
            @include lg\:via-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #7dd3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-400') {
        @include assert {
          @include output {
            @include lg\:via-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #38bdf8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-500') {
        @include assert {
          @include output {
            @include lg\:via-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0ea5e9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-600') {
        @include assert {
          @include output {
            @include lg\:via-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0284c7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-700') {
        @include assert {
          @include output {
            @include lg\:via-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0369a1,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-800') {
        @include assert {
          @include output {
            @include lg\:via-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #075985,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-900') {
        @include assert {
          @include output {
            @include lg\:via-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c4a6e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-sky-950') {
        @include assert {
          @include output {
            @include lg\:via-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #082f49,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-50') {
        @include assert {
          @include output {
            @include lg\:via-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #eff6ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-100') {
        @include assert {
          @include output {
            @include lg\:via-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #dbeafe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-200') {
        @include assert {
          @include output {
            @include lg\:via-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #bfdbfe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-300') {
        @include assert {
          @include output {
            @include lg\:via-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #93c5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-400') {
        @include assert {
          @include output {
            @include lg\:via-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #60a5fa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-500') {
        @include assert {
          @include output {
            @include lg\:via-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b82f6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-600') {
        @include assert {
          @include output {
            @include lg\:via-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #2563eb,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-700') {
        @include assert {
          @include output {
            @include lg\:via-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1d4ed8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-800') {
        @include assert {
          @include output {
            @include lg\:via-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e40af,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-900') {
        @include assert {
          @include output {
            @include lg\:via-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e3a8a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-blue-950') {
        @include assert {
          @include output {
            @include lg\:via-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #172554,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-50') {
        @include assert {
          @include output {
            @include lg\:via-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #eef2ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-100') {
        @include assert {
          @include output {
            @include lg\:via-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0e7ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-200') {
        @include assert {
          @include output {
            @include lg\:via-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #c7d2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-300') {
        @include assert {
          @include output {
            @include lg\:via-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5b4fc,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-400') {
        @include assert {
          @include output {
            @include lg\:via-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #818cf8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-500') {
        @include assert {
          @include output {
            @include lg\:via-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #6366f1,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-600') {
        @include assert {
          @include output {
            @include lg\:via-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4f46e5,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-700') {
        @include assert {
          @include output {
            @include lg\:via-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4338ca,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-800') {
        @include assert {
          @include output {
            @include lg\:via-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #3730a3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-900') {
        @include assert {
          @include output {
            @include lg\:via-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #312e81,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-indigo-950') {
        @include assert {
          @include output {
            @include lg\:via-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e1b4b,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-50') {
        @include assert {
          @include output {
            @include lg\:via-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f3ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-100') {
        @include assert {
          @include output {
            @include lg\:via-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ede9fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-200') {
        @include assert {
          @include output {
            @include lg\:via-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ddd6fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-300') {
        @include assert {
          @include output {
            @include lg\:via-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #c4b5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-400') {
        @include assert {
          @include output {
            @include lg\:via-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a78bfa,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-500') {
        @include assert {
          @include output {
            @include lg\:via-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #8b5cf6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-600') {
        @include assert {
          @include output {
            @include lg\:via-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c3aed,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-700') {
        @include assert {
          @include output {
            @include lg\:via-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #6d28d9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-800') {
        @include assert {
          @include output {
            @include lg\:via-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #5b21b6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-900') {
        @include assert {
          @include output {
            @include lg\:via-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c1d95,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-violet-950') {
        @include assert {
          @include output {
            @include lg\:via-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #2e1065,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-50') {
        @include assert {
          @include output {
            @include lg\:via-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #faf5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-100') {
        @include assert {
          @include output {
            @include lg\:via-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3e8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-200') {
        @include assert {
          @include output {
            @include lg\:via-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e9d5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-300') {
        @include assert {
          @include output {
            @include lg\:via-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d8b4fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-400') {
        @include assert {
          @include output {
            @include lg\:via-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #c084fc,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-500') {
        @include assert {
          @include output {
            @include lg\:via-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a855f7,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-600') {
        @include assert {
          @include output {
            @include lg\:via-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #9333ea,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-700') {
        @include assert {
          @include output {
            @include lg\:via-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #7e22ce,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-800') {
        @include assert {
          @include output {
            @include lg\:via-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b21a8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-900') {
        @include assert {
          @include output {
            @include lg\:via-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #581c87,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-purple-950') {
        @include assert {
          @include output {
            @include lg\:via-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b0764,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf4ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fae8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5d0fe,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0abfc,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e879f9,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #d946ef,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #c026d3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #a21caf,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #86198f,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #701a75,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:via-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4a044e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-50') {
        @include assert {
          @include output {
            @include lg\:via-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf2f8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-100') {
        @include assert {
          @include output {
            @include lg\:via-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fce7f3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-200') {
        @include assert {
          @include output {
            @include lg\:via-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbcfe8,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-300') {
        @include assert {
          @include output {
            @include lg\:via-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9a8d4,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-400') {
        @include assert {
          @include output {
            @include lg\:via-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f472b6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-500') {
        @include assert {
          @include output {
            @include lg\:via-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ec4899,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-600') {
        @include assert {
          @include output {
            @include lg\:via-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #db2777,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-700') {
        @include assert {
          @include output {
            @include lg\:via-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #be185d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-800') {
        @include assert {
          @include output {
            @include lg\:via-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #9d174d,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-900') {
        @include assert {
          @include output {
            @include lg\:via-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #831843,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-pink-950') {
        @include assert {
          @include output {
            @include lg\:via-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #500724,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-50') {
        @include assert {
          @include output {
            @include lg\:via-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff1f2,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-100') {
        @include assert {
          @include output {
            @include lg\:via-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffe4e6,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-200') {
        @include assert {
          @include output {
            @include lg\:via-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecdd3,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-300') {
        @include assert {
          @include output {
            @include lg\:via-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fda4af,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-400') {
        @include assert {
          @include output {
            @include lg\:via-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb7185,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-500') {
        @include assert {
          @include output {
            @include lg\:via-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #f43f5e,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-600') {
        @include assert {
          @include output {
            @include lg\:via-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #e11d48,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-700') {
        @include assert {
          @include output {
            @include lg\:via-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #be123c,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-800') {
        @include assert {
          @include output {
            @include lg\:via-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #9f1239,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-900') {
        @include assert {
          @include output {
            @include lg\:via-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #881337,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-rose-950') {
        @include assert {
          @include output {
            @include lg\:via-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c0519,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-0\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 0%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-5\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 5%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-10\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 10%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-15\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 15%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-20\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 20%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-25\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 25%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-30\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 30%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-35\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 35%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-40\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 40%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-45\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 45%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-50\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 50%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-55\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 55%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-60\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 60%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-65\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 65%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-70\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 70%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-75\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 75%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-80\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 80%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-85\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 85%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-90\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 90%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:via-95\%') {
        @include assert {
          @include output {
            @include lg\:via-white;
            @include lg\:via-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 95%,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:to-inherit') {
        @include assert {
          @include output {
            @include lg\:to-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('lg\:to-current') {
        @include assert {
          @include output {
            @include lg\:to-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }
      }

      @include it('lg\:to-transparent') {
        @include assert {
          @include output {
            @include lg\:to-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }
      }

      @include it('lg\:to-slate-100') {
        @include assert {
          @include output {
            @include lg\:to-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }
      }

      @include it('lg\:to-slate-200') {
        @include assert {
          @include output {
            @include lg\:to-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }
      }

      @include it('lg\:to-slate-300') {
        @include assert {
          @include output {
            @include lg\:to-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }
      }

      @include it('lg\:to-slate-400') {
        @include assert {
          @include output {
            @include lg\:to-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }
      }

      @include it('lg\:to-slate-500') {
        @include assert {
          @include output {
            @include lg\:to-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }
      }

      @include it('lg\:to-slate-600') {
        @include assert {
          @include output {
            @include lg\:to-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }
      }

      @include it('lg\:to-slate-700') {
        @include assert {
          @include output {
            @include lg\:to-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }
      }

      @include it('lg\:to-slate-800') {
        @include assert {
          @include output {
            @include lg\:to-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }
      }

      @include it('lg\:to-slate-900') {
        @include assert {
          @include output {
            @include lg\:to-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }
      }

      @include it('lg\:to-slate-950') {
        @include assert {
          @include output {
            @include lg\:to-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }
      }

      @include it('lg\:to-gray-50') {
        @include assert {
          @include output {
            @include lg\:to-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }
      }

      @include it('lg\:to-gray-100') {
        @include assert {
          @include output {
            @include lg\:to-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }
      }

      @include it('lg\:to-gray-200') {
        @include assert {
          @include output {
            @include lg\:to-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }
      }

      @include it('lg\:to-gray-300') {
        @include assert {
          @include output {
            @include lg\:to-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }
      }

      @include it('lg\:to-gray-400') {
        @include assert {
          @include output {
            @include lg\:to-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }
      }

      @include it('lg\:to-gray-500') {
        @include assert {
          @include output {
            @include lg\:to-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }
      }

      @include it('lg\:to-gray-600') {
        @include assert {
          @include output {
            @include lg\:to-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }
      }

      @include it('lg\:to-gray-700') {
        @include assert {
          @include output {
            @include lg\:to-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }
      }

      @include it('lg\:to-gray-800') {
        @include assert {
          @include output {
            @include lg\:to-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }
      }

      @include it('lg\:to-gray-900') {
        @include assert {
          @include output {
            @include lg\:to-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }
      }

      @include it('lg\:to-gray-950') {
        @include assert {
          @include output {
            @include lg\:to-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }
      }

      @include it('lg\:to-zinc-50') {
        @include assert {
          @include output {
            @include lg\:to-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('lg\:to-zinc-100') {
        @include assert {
          @include output {
            @include lg\:to-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }
      }

      @include it('lg\:to-zinc-200') {
        @include assert {
          @include output {
            @include lg\:to-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }
      }

      @include it('lg\:to-zinc-300') {
        @include assert {
          @include output {
            @include lg\:to-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }
      }

      @include it('lg\:to-zinc-400') {
        @include assert {
          @include output {
            @include lg\:to-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }
      }

      @include it('lg\:to-zinc-500') {
        @include assert {
          @include output {
            @include lg\:to-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }
      }

      @include it('lg\:to-zinc-600') {
        @include assert {
          @include output {
            @include lg\:to-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }
      }

      @include it('lg\:to-zinc-700') {
        @include assert {
          @include output {
            @include lg\:to-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }
      }

      @include it('lg\:to-zinc-800') {
        @include assert {
          @include output {
            @include lg\:to-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }
      }

      @include it('lg\:to-zinc-900') {
        @include assert {
          @include output {
            @include lg\:to-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }
      }

      @include it('lg\:to-zinc-950') {
        @include assert {
          @include output {
            @include lg\:to-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }
      }

      @include it('lg\:to-neutral-50') {
        @include assert {
          @include output {
            @include lg\:to-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('lg\:to-neutral-100') {
        @include assert {
          @include output {
            @include lg\:to-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f5f5f5);
            }
          }
        }
      }

      @include it('lg\:to-neutral-200') {
        @include assert {
          @include output {
            @include lg\:to-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }
      }

      @include it('lg\:to-neutral-300') {
        @include assert {
          @include output {
            @include lg\:to-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }
      }

      @include it('lg\:to-neutral-400') {
        @include assert {
          @include output {
            @include lg\:to-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }
      }

      @include it('lg\:to-neutral-500') {
        @include assert {
          @include output {
            @include lg\:to-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }
      }

      @include it('lg\:to-neutral-600') {
        @include assert {
          @include output {
            @include lg\:to-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }
      }

      @include it('lg\:to-neutral-700') {
        @include assert {
          @include output {
            @include lg\:to-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }
      }

      @include it('lg\:to-neutral-800') {
        @include assert {
          @include output {
            @include lg\:to-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }
      }

      @include it('lg\:to-neutral-900') {
        @include assert {
          @include output {
            @include lg\:to-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }
      }

      @include it('lg\:to-neutral-950') {
        @include assert {
          @include output {
            @include lg\:to-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }
      }

      @include it('lg\:to-stone-50') {
        @include assert {
          @include output {
            @include lg\:to-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }
      }

      @include it('lg\:to-stone-100') {
        @include assert {
          @include output {
            @include lg\:to-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }
      }

      @include it('lg\:to-stone-200') {
        @include assert {
          @include output {
            @include lg\:to-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }
      }

      @include it('lg\:to-stone-300') {
        @include assert {
          @include output {
            @include lg\:to-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }
      }

      @include it('lg\:to-stone-400') {
        @include assert {
          @include output {
            @include lg\:to-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }
      }

      @include it('lg\:to-stone-500') {
        @include assert {
          @include output {
            @include lg\:to-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }
      }

      @include it('lg\:to-stone-600') {
        @include assert {
          @include output {
            @include lg\:to-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }
      }

      @include it('lg\:to-stone-700') {
        @include assert {
          @include output {
            @include lg\:to-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }
      }

      @include it('lg\:to-stone-800') {
        @include assert {
          @include output {
            @include lg\:to-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }
      }

      @include it('lg\:to-stone-900') {
        @include assert {
          @include output {
            @include lg\:to-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }
      }

      @include it('lg\:to-stone-950') {
        @include assert {
          @include output {
            @include lg\:to-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }
      }

      @include it('lg\:to-red-50') {
        @include assert {
          @include output {
            @include lg\:to-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }
      }

      @include it('lg\:to-red-100') {
        @include assert {
          @include output {
            @include lg\:to-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }
      }

      @include it('lg\:to-red-200') {
        @include assert {
          @include output {
            @include lg\:to-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }
      }

      @include it('lg\:to-red-300') {
        @include assert {
          @include output {
            @include lg\:to-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }
      }

      @include it('lg\:to-red-400') {
        @include assert {
          @include output {
            @include lg\:to-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }
      }

      @include it('lg\:to-red-500') {
        @include assert {
          @include output {
            @include lg\:to-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }
      }

      @include it('lg\:to-red-600') {
        @include assert {
          @include output {
            @include lg\:to-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }
      }

      @include it('lg\:to-red-700') {
        @include assert {
          @include output {
            @include lg\:to-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }
      }

      @include it('lg\:to-red-800') {
        @include assert {
          @include output {
            @include lg\:to-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }
      }

      @include it('lg\:to-red-900') {
        @include assert {
          @include output {
            @include lg\:to-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }
      }

      @include it('lg\:to-red-950') {
        @include assert {
          @include output {
            @include lg\:to-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }
      }

      @include it('lg\:to-orange-50') {
        @include assert {
          @include output {
            @include lg\:to-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }
      }

      @include it('lg\:to-orange-100') {
        @include assert {
          @include output {
            @include lg\:to-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }
      }

      @include it('lg\:to-orange-200') {
        @include assert {
          @include output {
            @include lg\:to-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }
      }

      @include it('lg\:to-orange-300') {
        @include assert {
          @include output {
            @include lg\:to-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }
      }

      @include it('lg\:to-orange-400') {
        @include assert {
          @include output {
            @include lg\:to-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }
      }

      @include it('lg\:to-orange-500') {
        @include assert {
          @include output {
            @include lg\:to-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }
      }

      @include it('lg\:to-orange-600') {
        @include assert {
          @include output {
            @include lg\:to-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }
      }

      @include it('lg\:to-orange-700') {
        @include assert {
          @include output {
            @include lg\:to-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }
      }

      @include it('lg\:to-orange-800') {
        @include assert {
          @include output {
            @include lg\:to-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }
      }

      @include it('lg\:to-orange-900') {
        @include assert {
          @include output {
            @include lg\:to-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }
      }

      @include it('lg\:to-orange-950') {
        @include assert {
          @include output {
            @include lg\:to-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }
      }

      @include it('lg\:to-amber-50') {
        @include assert {
          @include output {
            @include lg\:to-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }
      }

      @include it('lg\:to-amber-100') {
        @include assert {
          @include output {
            @include lg\:to-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }
      }

      @include it('lg\:to-amber-200') {
        @include assert {
          @include output {
            @include lg\:to-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }
      }

      @include it('lg\:to-amber-300') {
        @include assert {
          @include output {
            @include lg\:to-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }
      }

      @include it('lg\:to-amber-400') {
        @include assert {
          @include output {
            @include lg\:to-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }
      }

      @include it('lg\:to-amber-500') {
        @include assert {
          @include output {
            @include lg\:to-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }
      }

      @include it('lg\:to-amber-600') {
        @include assert {
          @include output {
            @include lg\:to-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }
      }

      @include it('lg\:to-amber-700') {
        @include assert {
          @include output {
            @include lg\:to-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }
      }

      @include it('lg\:to-amber-800') {
        @include assert {
          @include output {
            @include lg\:to-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }
      }

      @include it('lg\:to-amber-900') {
        @include assert {
          @include output {
            @include lg\:to-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }
      }

      @include it('lg\:to-amber-950') {
        @include assert {
          @include output {
            @include lg\:to-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }
      }

      @include it('lg\:to-yellow-50') {
        @include assert {
          @include output {
            @include lg\:to-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }
      }

      @include it('lg\:to-yellow-100') {
        @include assert {
          @include output {
            @include lg\:to-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }
      }

      @include it('lg\:to-yellow-200') {
        @include assert {
          @include output {
            @include lg\:to-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }
      }

      @include it('lg\:to-yellow-300') {
        @include assert {
          @include output {
            @include lg\:to-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }
      }

      @include it('lg\:to-yellow-400') {
        @include assert {
          @include output {
            @include lg\:to-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }
      }

      @include it('lg\:to-yellow-500') {
        @include assert {
          @include output {
            @include lg\:to-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }
      }

      @include it('lg\:to-yellow-600') {
        @include assert {
          @include output {
            @include lg\:to-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }
      }

      @include it('lg\:to-yellow-700') {
        @include assert {
          @include output {
            @include lg\:to-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }
      }

      @include it('lg\:to-yellow-800') {
        @include assert {
          @include output {
            @include lg\:to-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }
      }

      @include it('lg\:to-yellow-900') {
        @include assert {
          @include output {
            @include lg\:to-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }
      }

      @include it('lg\:to-yellow-950') {
        @include assert {
          @include output {
            @include lg\:to-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }
      }

      @include it('lg\:to-lime-50') {
        @include assert {
          @include output {
            @include lg\:to-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }
      }

      @include it('lg\:to-lime-100') {
        @include assert {
          @include output {
            @include lg\:to-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }
      }

      @include it('lg\:to-lime-200') {
        @include assert {
          @include output {
            @include lg\:to-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }
      }

      @include it('lg\:to-lime-300') {
        @include assert {
          @include output {
            @include lg\:to-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }
      }

      @include it('lg\:to-lime-400') {
        @include assert {
          @include output {
            @include lg\:to-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }
      }

      @include it('lg\:to-lime-500') {
        @include assert {
          @include output {
            @include lg\:to-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }
      }

      @include it('lg\:to-lime-600') {
        @include assert {
          @include output {
            @include lg\:to-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }
      }

      @include it('lg\:to-lime-700') {
        @include assert {
          @include output {
            @include lg\:to-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }
      }

      @include it('lg\:to-lime-800') {
        @include assert {
          @include output {
            @include lg\:to-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }
      }

      @include it('lg\:to-lime-900') {
        @include assert {
          @include output {
            @include lg\:to-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }
      }

      @include it('lg\:to-lime-950') {
        @include assert {
          @include output {
            @include lg\:to-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }
      }

      @include it('lg\:to-green-50') {
        @include assert {
          @include output {
            @include lg\:to-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }
      }

      @include it('lg\:to-green-100') {
        @include assert {
          @include output {
            @include lg\:to-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }
      }

      @include it('lg\:to-green-200') {
        @include assert {
          @include output {
            @include lg\:to-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }
      }

      @include it('lg\:to-green-300') {
        @include assert {
          @include output {
            @include lg\:to-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }
      }

      @include it('lg\:to-green-400') {
        @include assert {
          @include output {
            @include lg\:to-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }
      }

      @include it('lg\:to-green-500') {
        @include assert {
          @include output {
            @include lg\:to-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }
      }

      @include it('lg\:to-green-600') {
        @include assert {
          @include output {
            @include lg\:to-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }
      }

      @include it('lg\:to-green-700') {
        @include assert {
          @include output {
            @include lg\:to-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }
      }

      @include it('lg\:to-green-800') {
        @include assert {
          @include output {
            @include lg\:to-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }
      }

      @include it('lg\:to-green-900') {
        @include assert {
          @include output {
            @include lg\:to-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }
      }

      @include it('lg\:to-green-950') {
        @include assert {
          @include output {
            @include lg\:to-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }
      }

      @include it('lg\:to-emerald-50') {
        @include assert {
          @include output {
            @include lg\:to-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }
      }

      @include it('lg\:to-emerald-100') {
        @include assert {
          @include output {
            @include lg\:to-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }
      }

      @include it('lg\:to-emerald-200') {
        @include assert {
          @include output {
            @include lg\:to-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }
      }

      @include it('lg\:to-emerald-300') {
        @include assert {
          @include output {
            @include lg\:to-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }
      }

      @include it('lg\:to-emerald-400') {
        @include assert {
          @include output {
            @include lg\:to-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }
      }

      @include it('lg\:to-emerald-500') {
        @include assert {
          @include output {
            @include lg\:to-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }
      }

      @include it('lg\:to-emerald-600') {
        @include assert {
          @include output {
            @include lg\:to-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }
      }

      @include it('lg\:to-emerald-700') {
        @include assert {
          @include output {
            @include lg\:to-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }
      }

      @include it('lg\:to-emerald-800') {
        @include assert {
          @include output {
            @include lg\:to-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }
      }

      @include it('lg\:to-emerald-900') {
        @include assert {
          @include output {
            @include lg\:to-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }
      }

      @include it('lg\:to-emerald-950') {
        @include assert {
          @include output {
            @include lg\:to-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }
      }

      @include it('lg\:to-teal-50') {
        @include assert {
          @include output {
            @include lg\:to-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }
      }

      @include it('lg\:to-teal-100') {
        @include assert {
          @include output {
            @include lg\:to-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }
      }

      @include it('lg\:to-teal-200') {
        @include assert {
          @include output {
            @include lg\:to-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }
      }

      @include it('lg\:to-teal-300') {
        @include assert {
          @include output {
            @include lg\:to-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }
      }

      @include it('lg\:to-teal-400') {
        @include assert {
          @include output {
            @include lg\:to-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }
      }

      @include it('lg\:to-teal-500') {
        @include assert {
          @include output {
            @include lg\:to-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }
      }

      @include it('lg\:to-teal-600') {
        @include assert {
          @include output {
            @include lg\:to-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }
      }

      @include it('lg\:to-teal-700') {
        @include assert {
          @include output {
            @include lg\:to-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }
      }

      @include it('lg\:to-teal-800') {
        @include assert {
          @include output {
            @include lg\:to-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }
      }

      @include it('lg\:to-teal-900') {
        @include assert {
          @include output {
            @include lg\:to-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }
      }

      @include it('lg\:to-teal-950') {
        @include assert {
          @include output {
            @include lg\:to-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }
      }

      @include it('lg\:to-cyan-50') {
        @include assert {
          @include output {
            @include lg\:to-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }
      }

      @include it('lg\:to-cyan-100') {
        @include assert {
          @include output {
            @include lg\:to-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }
      }

      @include it('lg\:to-cyan-200') {
        @include assert {
          @include output {
            @include lg\:to-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }
      }

      @include it('lg\:to-cyan-300') {
        @include assert {
          @include output {
            @include lg\:to-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }
      }

      @include it('lg\:to-cyan-400') {
        @include assert {
          @include output {
            @include lg\:to-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }
      }

      @include it('lg\:to-cyan-500') {
        @include assert {
          @include output {
            @include lg\:to-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }
      }

      @include it('lg\:to-cyan-600') {
        @include assert {
          @include output {
            @include lg\:to-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }
      }

      @include it('lg\:to-cyan-700') {
        @include assert {
          @include output {
            @include lg\:to-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }
      }

      @include it('lg\:to-cyan-800') {
        @include assert {
          @include output {
            @include lg\:to-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }
      }

      @include it('lg\:to-cyan-900') {
        @include assert {
          @include output {
            @include lg\:to-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }
      }

      @include it('lg\:to-cyan-950') {
        @include assert {
          @include output {
            @include lg\:to-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }
      }

      @include it('lg\:to-sky-50') {
        @include assert {
          @include output {
            @include lg\:to-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }
      }

      @include it('lg\:to-sky-100') {
        @include assert {
          @include output {
            @include lg\:to-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }
      }

      @include it('lg\:to-sky-200') {
        @include assert {
          @include output {
            @include lg\:to-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }
      }

      @include it('lg\:to-sky-300') {
        @include assert {
          @include output {
            @include lg\:to-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }
      }

      @include it('lg\:to-sky-400') {
        @include assert {
          @include output {
            @include lg\:to-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }
      }

      @include it('lg\:to-sky-500') {
        @include assert {
          @include output {
            @include lg\:to-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }
      }

      @include it('lg\:to-sky-600') {
        @include assert {
          @include output {
            @include lg\:to-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }
      }

      @include it('lg\:to-sky-700') {
        @include assert {
          @include output {
            @include lg\:to-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }
      }

      @include it('lg\:to-sky-800') {
        @include assert {
          @include output {
            @include lg\:to-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }
      }

      @include it('lg\:to-sky-900') {
        @include assert {
          @include output {
            @include lg\:to-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }
      }

      @include it('lg\:to-sky-950') {
        @include assert {
          @include output {
            @include lg\:to-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }
      }

      @include it('lg\:to-blue-50') {
        @include assert {
          @include output {
            @include lg\:to-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }
      }

      @include it('lg\:to-blue-100') {
        @include assert {
          @include output {
            @include lg\:to-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }
      }

      @include it('lg\:to-blue-200') {
        @include assert {
          @include output {
            @include lg\:to-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }
      }

      @include it('lg\:to-blue-300') {
        @include assert {
          @include output {
            @include lg\:to-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }
      }

      @include it('lg\:to-blue-400') {
        @include assert {
          @include output {
            @include lg\:to-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }
      }

      @include it('lg\:to-blue-500') {
        @include assert {
          @include output {
            @include lg\:to-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }
      }

      @include it('lg\:to-blue-600') {
        @include assert {
          @include output {
            @include lg\:to-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }
      }

      @include it('lg\:to-blue-700') {
        @include assert {
          @include output {
            @include lg\:to-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }
      }

      @include it('lg\:to-blue-800') {
        @include assert {
          @include output {
            @include lg\:to-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }
      }

      @include it('lg\:to-blue-900') {
        @include assert {
          @include output {
            @include lg\:to-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }
      }

      @include it('lg\:to-blue-950') {
        @include assert {
          @include output {
            @include lg\:to-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }
      }

      @include it('lg\:to-indigo-50') {
        @include assert {
          @include output {
            @include lg\:to-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }
      }

      @include it('lg\:to-indigo-100') {
        @include assert {
          @include output {
            @include lg\:to-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }
      }

      @include it('lg\:to-indigo-200') {
        @include assert {
          @include output {
            @include lg\:to-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }
      }

      @include it('lg\:to-indigo-300') {
        @include assert {
          @include output {
            @include lg\:to-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }
      }

      @include it('lg\:to-indigo-400') {
        @include assert {
          @include output {
            @include lg\:to-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }
      }

      @include it('lg\:to-indigo-500') {
        @include assert {
          @include output {
            @include lg\:to-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }
      }

      @include it('lg\:to-indigo-600') {
        @include assert {
          @include output {
            @include lg\:to-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }
      }

      @include it('lg\:to-indigo-700') {
        @include assert {
          @include output {
            @include lg\:to-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }
      }

      @include it('lg\:to-indigo-800') {
        @include assert {
          @include output {
            @include lg\:to-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }
      }

      @include it('lg\:to-indigo-900') {
        @include assert {
          @include output {
            @include lg\:to-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }
      }

      @include it('lg\:to-indigo-950') {
        @include assert {
          @include output {
            @include lg\:to-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }
      }

      @include it('lg\:to-violet-50') {
        @include assert {
          @include output {
            @include lg\:to-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }
      }

      @include it('lg\:to-violet-100') {
        @include assert {
          @include output {
            @include lg\:to-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }
      }

      @include it('lg\:to-violet-200') {
        @include assert {
          @include output {
            @include lg\:to-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }
      }

      @include it('lg\:to-violet-300') {
        @include assert {
          @include output {
            @include lg\:to-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }
      }

      @include it('lg\:to-violet-400') {
        @include assert {
          @include output {
            @include lg\:to-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }
      }

      @include it('lg\:to-violet-500') {
        @include assert {
          @include output {
            @include lg\:to-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }
      }

      @include it('lg\:to-violet-600') {
        @include assert {
          @include output {
            @include lg\:to-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }
      }

      @include it('lg\:to-violet-700') {
        @include assert {
          @include output {
            @include lg\:to-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }
      }

      @include it('lg\:to-violet-800') {
        @include assert {
          @include output {
            @include lg\:to-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }
      }

      @include it('lg\:to-violet-900') {
        @include assert {
          @include output {
            @include lg\:to-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }
      }

      @include it('lg\:to-violet-950') {
        @include assert {
          @include output {
            @include lg\:to-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }
      }

      @include it('lg\:to-purple-50') {
        @include assert {
          @include output {
            @include lg\:to-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }
      }

      @include it('lg\:to-purple-100') {
        @include assert {
          @include output {
            @include lg\:to-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }
      }

      @include it('lg\:to-purple-200') {
        @include assert {
          @include output {
            @include lg\:to-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }
      }

      @include it('lg\:to-purple-300') {
        @include assert {
          @include output {
            @include lg\:to-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }
      }

      @include it('lg\:to-purple-400') {
        @include assert {
          @include output {
            @include lg\:to-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }
      }

      @include it('lg\:to-purple-500') {
        @include assert {
          @include output {
            @include lg\:to-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }
      }

      @include it('lg\:to-purple-600') {
        @include assert {
          @include output {
            @include lg\:to-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }
      }

      @include it('lg\:to-purple-700') {
        @include assert {
          @include output {
            @include lg\:to-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }
      }

      @include it('lg\:to-purple-800') {
        @include assert {
          @include output {
            @include lg\:to-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }
      }

      @include it('lg\:to-purple-900') {
        @include assert {
          @include output {
            @include lg\:to-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }
      }

      @include it('lg\:to-purple-950') {
        @include assert {
          @include output {
            @include lg\:to-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }
      }

      @include it('lg\:to-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:to-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }
      }

      @include it('lg\:to-pink-50') {
        @include assert {
          @include output {
            @include lg\:to-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }
      }

      @include it('lg\:to-pink-100') {
        @include assert {
          @include output {
            @include lg\:to-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }
      }

      @include it('lg\:to-pink-200') {
        @include assert {
          @include output {
            @include lg\:to-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }
      }

      @include it('lg\:to-pink-300') {
        @include assert {
          @include output {
            @include lg\:to-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }
      }

      @include it('lg\:to-pink-400') {
        @include assert {
          @include output {
            @include lg\:to-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }
      }

      @include it('lg\:to-pink-500') {
        @include assert {
          @include output {
            @include lg\:to-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }
      }

      @include it('lg\:to-pink-600') {
        @include assert {
          @include output {
            @include lg\:to-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }
      }

      @include it('lg\:to-pink-700') {
        @include assert {
          @include output {
            @include lg\:to-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }
      }

      @include it('lg\:to-pink-800') {
        @include assert {
          @include output {
            @include lg\:to-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }
      }

      @include it('lg\:to-pink-900') {
        @include assert {
          @include output {
            @include lg\:to-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }
      }

      @include it('lg\:to-pink-950') {
        @include assert {
          @include output {
            @include lg\:to-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }
      }

      @include it('lg\:to-rose-50') {
        @include assert {
          @include output {
            @include lg\:to-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }
      }

      @include it('lg\:to-rose-100') {
        @include assert {
          @include output {
            @include lg\:to-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }
      }

      @include it('lg\:to-rose-200') {
        @include assert {
          @include output {
            @include lg\:to-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }
      }

      @include it('lg\:to-rose-300') {
        @include assert {
          @include output {
            @include lg\:to-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }
      }

      @include it('lg\:to-rose-400') {
        @include assert {
          @include output {
            @include lg\:to-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }
      }

      @include it('lg\:to-rose-500') {
        @include assert {
          @include output {
            @include lg\:to-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }
      }

      @include it('lg\:to-rose-600') {
        @include assert {
          @include output {
            @include lg\:to-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }
      }

      @include it('lg\:to-rose-700') {
        @include assert {
          @include output {
            @include lg\:to-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }
      }

      @include it('lg\:to-rose-800') {
        @include assert {
          @include output {
            @include lg\:to-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }
      }

      @include it('lg\:to-rose-900') {
        @include assert {
          @include output {
            @include lg\:to-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }
      }

      @include it('lg\:to-rose-950') {
        @include assert {
          @include output {
            @include lg\:to-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }
      }

      @include it('lg\:to-0\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 0%);
            }
          }
        }
      }

      @include it('lg\:to-5\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 5%);
            }
          }
        }
      }

      @include it('lg\:to-10\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 10%);
            }
          }
        }
      }

      @include it('lg\:to-15\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 15%);
            }
          }
        }
      }

      @include it('lg\:to-20\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 20%);
            }
          }
        }
      }

      @include it('lg\:to-25\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 25%);
            }
          }
        }
      }

      @include it('lg\:to-30\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 30%);
            }
          }
        }
      }

      @include it('lg\:to-35\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 35%);
            }
          }
        }
      }

      @include it('lg\:to-40\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 40%);
            }
          }
        }
      }

      @include it('lg\:to-45\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 45%);
            }
          }
        }
      }

      @include it('lg\:to-50\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 50%);
            }
          }
        }
      }

      @include it('lg\:to-55\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 55%);
            }
          }
        }
      }

      @include it('lg\:to-60\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 60%);
            }
          }
        }
      }

      @include it('lg\:to-65\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 65%);
            }
          }
        }
      }

      @include it('lg\:to-70\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 70%);
            }
          }
        }
      }

      @include it('lg\:to-75\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 75%);
            }
          }
        }
      }

      @include it('lg\:to-80\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 80%);
            }
          }
        }
      }

      @include it('lg\:to-85\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 85%);
            }
          }
        }
      }

      @include it('lg\:to-90\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 90%);
            }
          }
        }
      }

      @include it('lg\:to-95\%') {
        @include assert {
          @include output {
            @include lg\:to-white;
            @include lg\:to-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #fff 95%);
            }
          }
        }
      }

      @include it('xl\:from-inherit') {
        @include assert {
          @include output {
            @include xl\:from-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('xl\:from-current') {
        @include assert {
          @include output {
            @include xl\:from-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:from-transparent') {
        @include assert {
          @include output {
            @include xl\:from-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-100') {
        @include assert {
          @include output {
            @include xl\:from-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-200') {
        @include assert {
          @include output {
            @include xl\:from-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-300') {
        @include assert {
          @include output {
            @include xl\:from-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-400') {
        @include assert {
          @include output {
            @include xl\:from-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-500') {
        @include assert {
          @include output {
            @include xl\:from-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-600') {
        @include assert {
          @include output {
            @include xl\:from-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-700') {
        @include assert {
          @include output {
            @include xl\:from-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-800') {
        @include assert {
          @include output {
            @include xl\:from-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-900') {
        @include assert {
          @include output {
            @include xl\:from-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-slate-950') {
        @include assert {
          @include output {
            @include xl\:from-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-50') {
        @include assert {
          @include output {
            @include xl\:from-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-100') {
        @include assert {
          @include output {
            @include xl\:from-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-200') {
        @include assert {
          @include output {
            @include xl\:from-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-300') {
        @include assert {
          @include output {
            @include xl\:from-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-400') {
        @include assert {
          @include output {
            @include xl\:from-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-500') {
        @include assert {
          @include output {
            @include xl\:from-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-600') {
        @include assert {
          @include output {
            @include xl\:from-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-700') {
        @include assert {
          @include output {
            @include xl\:from-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-800') {
        @include assert {
          @include output {
            @include xl\:from-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-900') {
        @include assert {
          @include output {
            @include xl\:from-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }
      }

      @include it('xl\:from-gray-950') {
        @include assert {
          @include output {
            @include xl\:from-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-50') {
        @include assert {
          @include output {
            @include xl\:from-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-100') {
        @include assert {
          @include output {
            @include xl\:from-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-200') {
        @include assert {
          @include output {
            @include xl\:from-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-300') {
        @include assert {
          @include output {
            @include xl\:from-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-400') {
        @include assert {
          @include output {
            @include xl\:from-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-500') {
        @include assert {
          @include output {
            @include xl\:from-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-600') {
        @include assert {
          @include output {
            @include xl\:from-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-700') {
        @include assert {
          @include output {
            @include xl\:from-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-800') {
        @include assert {
          @include output {
            @include xl\:from-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-900') {
        @include assert {
          @include output {
            @include xl\:from-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-zinc-950') {
        @include assert {
          @include output {
            @include xl\:from-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-50') {
        @include assert {
          @include output {
            @include xl\:from-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-100') {
        @include assert {
          @include output {
            @include xl\:from-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f5f5f5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-200') {
        @include assert {
          @include output {
            @include xl\:from-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-300') {
        @include assert {
          @include output {
            @include xl\:from-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-400') {
        @include assert {
          @include output {
            @include xl\:from-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-500') {
        @include assert {
          @include output {
            @include xl\:from-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-600') {
        @include assert {
          @include output {
            @include xl\:from-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-700') {
        @include assert {
          @include output {
            @include xl\:from-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-800') {
        @include assert {
          @include output {
            @include xl\:from-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-900') {
        @include assert {
          @include output {
            @include xl\:from-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }
      }

      @include it('xl\:from-neutral-950') {
        @include assert {
          @include output {
            @include xl\:from-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-50') {
        @include assert {
          @include output {
            @include xl\:from-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-100') {
        @include assert {
          @include output {
            @include xl\:from-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-200') {
        @include assert {
          @include output {
            @include xl\:from-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-300') {
        @include assert {
          @include output {
            @include xl\:from-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-400') {
        @include assert {
          @include output {
            @include xl\:from-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-500') {
        @include assert {
          @include output {
            @include xl\:from-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-600') {
        @include assert {
          @include output {
            @include xl\:from-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-700') {
        @include assert {
          @include output {
            @include xl\:from-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-800') {
        @include assert {
          @include output {
            @include xl\:from-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-900') {
        @include assert {
          @include output {
            @include xl\:from-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }
      }

      @include it('xl\:from-stone-950') {
        @include assert {
          @include output {
            @include xl\:from-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-50') {
        @include assert {
          @include output {
            @include xl\:from-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-100') {
        @include assert {
          @include output {
            @include xl\:from-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-200') {
        @include assert {
          @include output {
            @include xl\:from-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-300') {
        @include assert {
          @include output {
            @include xl\:from-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-400') {
        @include assert {
          @include output {
            @include xl\:from-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-500') {
        @include assert {
          @include output {
            @include xl\:from-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-600') {
        @include assert {
          @include output {
            @include xl\:from-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-700') {
        @include assert {
          @include output {
            @include xl\:from-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-800') {
        @include assert {
          @include output {
            @include xl\:from-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-900') {
        @include assert {
          @include output {
            @include xl\:from-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-red-950') {
        @include assert {
          @include output {
            @include xl\:from-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-50') {
        @include assert {
          @include output {
            @include xl\:from-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-100') {
        @include assert {
          @include output {
            @include xl\:from-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-200') {
        @include assert {
          @include output {
            @include xl\:from-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-300') {
        @include assert {
          @include output {
            @include xl\:from-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-400') {
        @include assert {
          @include output {
            @include xl\:from-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-500') {
        @include assert {
          @include output {
            @include xl\:from-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-600') {
        @include assert {
          @include output {
            @include xl\:from-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-700') {
        @include assert {
          @include output {
            @include xl\:from-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-800') {
        @include assert {
          @include output {
            @include xl\:from-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-900') {
        @include assert {
          @include output {
            @include xl\:from-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }
      }

      @include it('xl\:from-orange-950') {
        @include assert {
          @include output {
            @include xl\:from-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-50') {
        @include assert {
          @include output {
            @include xl\:from-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-100') {
        @include assert {
          @include output {
            @include xl\:from-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-200') {
        @include assert {
          @include output {
            @include xl\:from-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-300') {
        @include assert {
          @include output {
            @include xl\:from-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-400') {
        @include assert {
          @include output {
            @include xl\:from-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-500') {
        @include assert {
          @include output {
            @include xl\:from-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-600') {
        @include assert {
          @include output {
            @include xl\:from-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-700') {
        @include assert {
          @include output {
            @include xl\:from-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-800') {
        @include assert {
          @include output {
            @include xl\:from-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-900') {
        @include assert {
          @include output {
            @include xl\:from-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }
      }

      @include it('xl\:from-amber-950') {
        @include assert {
          @include output {
            @include xl\:from-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-50') {
        @include assert {
          @include output {
            @include xl\:from-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-100') {
        @include assert {
          @include output {
            @include xl\:from-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-200') {
        @include assert {
          @include output {
            @include xl\:from-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-300') {
        @include assert {
          @include output {
            @include xl\:from-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-400') {
        @include assert {
          @include output {
            @include xl\:from-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-500') {
        @include assert {
          @include output {
            @include xl\:from-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-600') {
        @include assert {
          @include output {
            @include xl\:from-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-700') {
        @include assert {
          @include output {
            @include xl\:from-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-800') {
        @include assert {
          @include output {
            @include xl\:from-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-900') {
        @include assert {
          @include output {
            @include xl\:from-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }
      }

      @include it('xl\:from-yellow-950') {
        @include assert {
          @include output {
            @include xl\:from-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-50') {
        @include assert {
          @include output {
            @include xl\:from-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-100') {
        @include assert {
          @include output {
            @include xl\:from-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-200') {
        @include assert {
          @include output {
            @include xl\:from-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-300') {
        @include assert {
          @include output {
            @include xl\:from-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-400') {
        @include assert {
          @include output {
            @include xl\:from-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-500') {
        @include assert {
          @include output {
            @include xl\:from-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-600') {
        @include assert {
          @include output {
            @include xl\:from-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-700') {
        @include assert {
          @include output {
            @include xl\:from-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-800') {
        @include assert {
          @include output {
            @include xl\:from-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-900') {
        @include assert {
          @include output {
            @include xl\:from-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }
      }

      @include it('xl\:from-lime-950') {
        @include assert {
          @include output {
            @include xl\:from-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-50') {
        @include assert {
          @include output {
            @include xl\:from-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-100') {
        @include assert {
          @include output {
            @include xl\:from-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-200') {
        @include assert {
          @include output {
            @include xl\:from-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-300') {
        @include assert {
          @include output {
            @include xl\:from-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-400') {
        @include assert {
          @include output {
            @include xl\:from-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-500') {
        @include assert {
          @include output {
            @include xl\:from-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-600') {
        @include assert {
          @include output {
            @include xl\:from-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-700') {
        @include assert {
          @include output {
            @include xl\:from-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-800') {
        @include assert {
          @include output {
            @include xl\:from-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-900') {
        @include assert {
          @include output {
            @include xl\:from-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-green-950') {
        @include assert {
          @include output {
            @include xl\:from-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-50') {
        @include assert {
          @include output {
            @include xl\:from-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-100') {
        @include assert {
          @include output {
            @include xl\:from-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-200') {
        @include assert {
          @include output {
            @include xl\:from-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-300') {
        @include assert {
          @include output {
            @include xl\:from-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-400') {
        @include assert {
          @include output {
            @include xl\:from-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-500') {
        @include assert {
          @include output {
            @include xl\:from-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-600') {
        @include assert {
          @include output {
            @include xl\:from-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-700') {
        @include assert {
          @include output {
            @include xl\:from-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-800') {
        @include assert {
          @include output {
            @include xl\:from-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-900') {
        @include assert {
          @include output {
            @include xl\:from-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-emerald-950') {
        @include assert {
          @include output {
            @include xl\:from-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-50') {
        @include assert {
          @include output {
            @include xl\:from-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-100') {
        @include assert {
          @include output {
            @include xl\:from-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-200') {
        @include assert {
          @include output {
            @include xl\:from-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-300') {
        @include assert {
          @include output {
            @include xl\:from-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-400') {
        @include assert {
          @include output {
            @include xl\:from-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-500') {
        @include assert {
          @include output {
            @include xl\:from-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-600') {
        @include assert {
          @include output {
            @include xl\:from-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-700') {
        @include assert {
          @include output {
            @include xl\:from-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-800') {
        @include assert {
          @include output {
            @include xl\:from-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-900') {
        @include assert {
          @include output {
            @include xl\:from-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-teal-950') {
        @include assert {
          @include output {
            @include xl\:from-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-50') {
        @include assert {
          @include output {
            @include xl\:from-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-100') {
        @include assert {
          @include output {
            @include xl\:from-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-200') {
        @include assert {
          @include output {
            @include xl\:from-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-300') {
        @include assert {
          @include output {
            @include xl\:from-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-400') {
        @include assert {
          @include output {
            @include xl\:from-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-500') {
        @include assert {
          @include output {
            @include xl\:from-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-600') {
        @include assert {
          @include output {
            @include xl\:from-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-700') {
        @include assert {
          @include output {
            @include xl\:from-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-800') {
        @include assert {
          @include output {
            @include xl\:from-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-900') {
        @include assert {
          @include output {
            @include xl\:from-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }
      }

      @include it('xl\:from-cyan-950') {
        @include assert {
          @include output {
            @include xl\:from-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-50') {
        @include assert {
          @include output {
            @include xl\:from-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-100') {
        @include assert {
          @include output {
            @include xl\:from-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-200') {
        @include assert {
          @include output {
            @include xl\:from-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-300') {
        @include assert {
          @include output {
            @include xl\:from-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-400') {
        @include assert {
          @include output {
            @include xl\:from-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-500') {
        @include assert {
          @include output {
            @include xl\:from-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-600') {
        @include assert {
          @include output {
            @include xl\:from-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-700') {
        @include assert {
          @include output {
            @include xl\:from-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-800') {
        @include assert {
          @include output {
            @include xl\:from-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-900') {
        @include assert {
          @include output {
            @include xl\:from-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-sky-950') {
        @include assert {
          @include output {
            @include xl\:from-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-50') {
        @include assert {
          @include output {
            @include xl\:from-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-100') {
        @include assert {
          @include output {
            @include xl\:from-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-200') {
        @include assert {
          @include output {
            @include xl\:from-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-300') {
        @include assert {
          @include output {
            @include xl\:from-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-400') {
        @include assert {
          @include output {
            @include xl\:from-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-500') {
        @include assert {
          @include output {
            @include xl\:from-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-600') {
        @include assert {
          @include output {
            @include xl\:from-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-700') {
        @include assert {
          @include output {
            @include xl\:from-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-800') {
        @include assert {
          @include output {
            @include xl\:from-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-900') {
        @include assert {
          @include output {
            @include xl\:from-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }
      }

      @include it('xl\:from-blue-950') {
        @include assert {
          @include output {
            @include xl\:from-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-50') {
        @include assert {
          @include output {
            @include xl\:from-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-100') {
        @include assert {
          @include output {
            @include xl\:from-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-200') {
        @include assert {
          @include output {
            @include xl\:from-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-300') {
        @include assert {
          @include output {
            @include xl\:from-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-400') {
        @include assert {
          @include output {
            @include xl\:from-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-500') {
        @include assert {
          @include output {
            @include xl\:from-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-600') {
        @include assert {
          @include output {
            @include xl\:from-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-700') {
        @include assert {
          @include output {
            @include xl\:from-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-800') {
        @include assert {
          @include output {
            @include xl\:from-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-900') {
        @include assert {
          @include output {
            @include xl\:from-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }
      }

      @include it('xl\:from-indigo-950') {
        @include assert {
          @include output {
            @include xl\:from-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-50') {
        @include assert {
          @include output {
            @include xl\:from-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-100') {
        @include assert {
          @include output {
            @include xl\:from-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-200') {
        @include assert {
          @include output {
            @include xl\:from-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-300') {
        @include assert {
          @include output {
            @include xl\:from-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-400') {
        @include assert {
          @include output {
            @include xl\:from-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-500') {
        @include assert {
          @include output {
            @include xl\:from-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-600') {
        @include assert {
          @include output {
            @include xl\:from-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-700') {
        @include assert {
          @include output {
            @include xl\:from-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-800') {
        @include assert {
          @include output {
            @include xl\:from-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-900') {
        @include assert {
          @include output {
            @include xl\:from-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }
      }

      @include it('xl\:from-violet-950') {
        @include assert {
          @include output {
            @include xl\:from-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-50') {
        @include assert {
          @include output {
            @include xl\:from-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-100') {
        @include assert {
          @include output {
            @include xl\:from-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-200') {
        @include assert {
          @include output {
            @include xl\:from-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-300') {
        @include assert {
          @include output {
            @include xl\:from-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-400') {
        @include assert {
          @include output {
            @include xl\:from-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-500') {
        @include assert {
          @include output {
            @include xl\:from-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-600') {
        @include assert {
          @include output {
            @include xl\:from-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-700') {
        @include assert {
          @include output {
            @include xl\:from-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-800') {
        @include assert {
          @include output {
            @include xl\:from-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-900') {
        @include assert {
          @include output {
            @include xl\:from-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }
      }

      @include it('xl\:from-purple-950') {
        @include assert {
          @include output {
            @include xl\:from-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }
      }

      @include it('xl\:from-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:from-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-50') {
        @include assert {
          @include output {
            @include xl\:from-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-100') {
        @include assert {
          @include output {
            @include xl\:from-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-200') {
        @include assert {
          @include output {
            @include xl\:from-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-300') {
        @include assert {
          @include output {
            @include xl\:from-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-400') {
        @include assert {
          @include output {
            @include xl\:from-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-500') {
        @include assert {
          @include output {
            @include xl\:from-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-600') {
        @include assert {
          @include output {
            @include xl\:from-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-700') {
        @include assert {
          @include output {
            @include xl\:from-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-800') {
        @include assert {
          @include output {
            @include xl\:from-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-900') {
        @include assert {
          @include output {
            @include xl\:from-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }
      }

      @include it('xl\:from-pink-950') {
        @include assert {
          @include output {
            @include xl\:from-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-50') {
        @include assert {
          @include output {
            @include xl\:from-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-100') {
        @include assert {
          @include output {
            @include xl\:from-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-200') {
        @include assert {
          @include output {
            @include xl\:from-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-300') {
        @include assert {
          @include output {
            @include xl\:from-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-400') {
        @include assert {
          @include output {
            @include xl\:from-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-500') {
        @include assert {
          @include output {
            @include xl\:from-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-600') {
        @include assert {
          @include output {
            @include xl\:from-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-700') {
        @include assert {
          @include output {
            @include xl\:from-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-800') {
        @include assert {
          @include output {
            @include xl\:from-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-900') {
        @include assert {
          @include output {
            @include xl\:from-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }
      }

      @include it('xl\:from-rose-950') {
        @include assert {
          @include output {
            @include xl\:from-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }
      }

      @include it('xl\:from-0\%') {
        @include assert {
          @include output {
            @include xl\:from-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-5\%') {
        @include assert {
          @include output {
            @include xl\:from-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-10\%') {
        @include assert {
          @include output {
            @include xl\:from-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-15\%') {
        @include assert {
          @include output {
            @include xl\:from-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-20\%') {
        @include assert {
          @include output {
            @include xl\:from-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-25\%') {
        @include assert {
          @include output {
            @include xl\:from-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-30\%') {
        @include assert {
          @include output {
            @include xl\:from-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-35\%') {
        @include assert {
          @include output {
            @include xl\:from-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-40\%') {
        @include assert {
          @include output {
            @include xl\:from-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-45\%') {
        @include assert {
          @include output {
            @include xl\:from-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-50\%') {
        @include assert {
          @include output {
            @include xl\:from-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-55\%') {
        @include assert {
          @include output {
            @include xl\:from-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-60\%') {
        @include assert {
          @include output {
            @include xl\:from-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-65\%') {
        @include assert {
          @include output {
            @include xl\:from-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-70\%') {
        @include assert {
          @include output {
            @include xl\:from-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-75\%') {
        @include assert {
          @include output {
            @include xl\:from-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-80\%') {
        @include assert {
          @include output {
            @include xl\:from-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-85\%') {
        @include assert {
          @include output {
            @include xl\:from-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-90\%') {
        @include assert {
          @include output {
            @include xl\:from-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }
      }

      @include it('xl\:from-95\%') {
        @include assert {
          @include output {
            @include xl\:from-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }
      }

      @include it('xl\:via-inherit') {
        @include assert {
          @include output {
            @include xl\:via-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('xl\:via-current') {
        @include assert {
          @include output {
            @include xl\:via-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-transparent') {
        @include assert {
          @include output {
            @include xl\:via-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                transparent,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-100') {
        @include assert {
          @include output {
            @include xl\:via-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f1f5f9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-200') {
        @include assert {
          @include output {
            @include xl\:via-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e2e8f0,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-300') {
        @include assert {
          @include output {
            @include xl\:via-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #cbd5e1,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-400') {
        @include assert {
          @include output {
            @include xl\:via-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #94a3b8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-500') {
        @include assert {
          @include output {
            @include xl\:via-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #64748b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-600') {
        @include assert {
          @include output {
            @include xl\:via-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #475569,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-700') {
        @include assert {
          @include output {
            @include xl\:via-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #334155,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-800') {
        @include assert {
          @include output {
            @include xl\:via-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e293b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-900') {
        @include assert {
          @include output {
            @include xl\:via-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f172a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-slate-950') {
        @include assert {
          @include output {
            @include xl\:via-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #020617,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-50') {
        @include assert {
          @include output {
            @include xl\:via-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9fafb,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-100') {
        @include assert {
          @include output {
            @include xl\:via-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3f4f6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-200') {
        @include assert {
          @include output {
            @include xl\:via-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e7eb,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-300') {
        @include assert {
          @include output {
            @include xl\:via-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1d5db,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-400') {
        @include assert {
          @include output {
            @include xl\:via-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9ca3af,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-500') {
        @include assert {
          @include output {
            @include xl\:via-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b7280,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-600') {
        @include assert {
          @include output {
            @include xl\:via-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4b5563,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-700') {
        @include assert {
          @include output {
            @include xl\:via-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #374151,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-800') {
        @include assert {
          @include output {
            @include xl\:via-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1f2937,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-900') {
        @include assert {
          @include output {
            @include xl\:via-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #111827,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-gray-950') {
        @include assert {
          @include output {
            @include xl\:via-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #030712,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-50') {
        @include assert {
          @include output {
            @include xl\:via-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-100') {
        @include assert {
          @include output {
            @include xl\:via-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f4f4f5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-200') {
        @include assert {
          @include output {
            @include xl\:via-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e4e4e7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-300') {
        @include assert {
          @include output {
            @include xl\:via-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-400') {
        @include assert {
          @include output {
            @include xl\:via-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a1a1aa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-500') {
        @include assert {
          @include output {
            @include xl\:via-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #71717a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-600') {
        @include assert {
          @include output {
            @include xl\:via-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #52525b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-700') {
        @include assert {
          @include output {
            @include xl\:via-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f3f46,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-800') {
        @include assert {
          @include output {
            @include xl\:via-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #27272a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-900') {
        @include assert {
          @include output {
            @include xl\:via-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #18181b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-zinc-950') {
        @include assert {
          @include output {
            @include xl\:via-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #09090b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-50') {
        @include assert {
          @include output {
            @include xl\:via-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-100') {
        @include assert {
          @include output {
            @include xl\:via-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-200') {
        @include assert {
          @include output {
            @include xl\:via-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e5e5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-300') {
        @include assert {
          @include output {
            @include xl\:via-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-400') {
        @include assert {
          @include output {
            @include xl\:via-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3a3a3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-500') {
        @include assert {
          @include output {
            @include xl\:via-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #737373,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-600') {
        @include assert {
          @include output {
            @include xl\:via-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #525252,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-700') {
        @include assert {
          @include output {
            @include xl\:via-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #404040,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-800') {
        @include assert {
          @include output {
            @include xl\:via-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #262626,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-900') {
        @include assert {
          @include output {
            @include xl\:via-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #171717,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-neutral-950') {
        @include assert {
          @include output {
            @include xl\:via-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0a0a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-50') {
        @include assert {
          @include output {
            @include xl\:via-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafaf9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-100') {
        @include assert {
          @include output {
            @include xl\:via-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-200') {
        @include assert {
          @include output {
            @include xl\:via-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e7e5e4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-300') {
        @include assert {
          @include output {
            @include xl\:via-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d6d3d1,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-400') {
        @include assert {
          @include output {
            @include xl\:via-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a8a29e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-500') {
        @include assert {
          @include output {
            @include xl\:via-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #78716c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-600') {
        @include assert {
          @include output {
            @include xl\:via-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #57534e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-700') {
        @include assert {
          @include output {
            @include xl\:via-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #44403c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-800') {
        @include assert {
          @include output {
            @include xl\:via-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #292524,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-900') {
        @include assert {
          @include output {
            @include xl\:via-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1c1917,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-stone-950') {
        @include assert {
          @include output {
            @include xl\:via-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c0a09,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-50') {
        @include assert {
          @include output {
            @include xl\:via-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef2f2,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-100') {
        @include assert {
          @include output {
            @include xl\:via-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fee2e2,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-200') {
        @include assert {
          @include output {
            @include xl\:via-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecaca,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-300') {
        @include assert {
          @include output {
            @include xl\:via-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fca5a5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-400') {
        @include assert {
          @include output {
            @include xl\:via-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f87171,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-500') {
        @include assert {
          @include output {
            @include xl\:via-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ef4444,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-600') {
        @include assert {
          @include output {
            @include xl\:via-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dc2626,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-700') {
        @include assert {
          @include output {
            @include xl\:via-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #b91c1c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-800') {
        @include assert {
          @include output {
            @include xl\:via-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #991b1b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-900') {
        @include assert {
          @include output {
            @include xl\:via-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7f1d1d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-red-950') {
        @include assert {
          @include output {
            @include xl\:via-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #450a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-50') {
        @include assert {
          @include output {
            @include xl\:via-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff7ed,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-100') {
        @include assert {
          @include output {
            @include xl\:via-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffedd5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-200') {
        @include assert {
          @include output {
            @include xl\:via-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fed7aa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-300') {
        @include assert {
          @include output {
            @include xl\:via-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdba74,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-400') {
        @include assert {
          @include output {
            @include xl\:via-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb923c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-500') {
        @include assert {
          @include output {
            @include xl\:via-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f97316,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-600') {
        @include assert {
          @include output {
            @include xl\:via-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ea580c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-700') {
        @include assert {
          @include output {
            @include xl\:via-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c2410c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-800') {
        @include assert {
          @include output {
            @include xl\:via-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9a3412,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-900') {
        @include assert {
          @include output {
            @include xl\:via-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c2d12,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-orange-950') {
        @include assert {
          @include output {
            @include xl\:via-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #431407,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-50') {
        @include assert {
          @include output {
            @include xl\:via-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fffbeb,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-100') {
        @include assert {
          @include output {
            @include xl\:via-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef3c7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-200') {
        @include assert {
          @include output {
            @include xl\:via-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde68a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-300') {
        @include assert {
          @include output {
            @include xl\:via-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fcd34d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-400') {
        @include assert {
          @include output {
            @include xl\:via-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbbf24,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-500') {
        @include assert {
          @include output {
            @include xl\:via-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f59e0b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-600') {
        @include assert {
          @include output {
            @include xl\:via-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d97706,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-700') {
        @include assert {
          @include output {
            @include xl\:via-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #b45309,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-800') {
        @include assert {
          @include output {
            @include xl\:via-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #92400e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-900') {
        @include assert {
          @include output {
            @include xl\:via-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #78350f,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-amber-950') {
        @include assert {
          @include output {
            @include xl\:via-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #451a03,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-50') {
        @include assert {
          @include output {
            @include xl\:via-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fefce8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-100') {
        @include assert {
          @include output {
            @include xl\:via-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef9c3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-200') {
        @include assert {
          @include output {
            @include xl\:via-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef08a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-300') {
        @include assert {
          @include output {
            @include xl\:via-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde047,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-400') {
        @include assert {
          @include output {
            @include xl\:via-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #facc15,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-500') {
        @include assert {
          @include output {
            @include xl\:via-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eab308,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-600') {
        @include assert {
          @include output {
            @include xl\:via-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ca8a04,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-700') {
        @include assert {
          @include output {
            @include xl\:via-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a16207,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-800') {
        @include assert {
          @include output {
            @include xl\:via-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #854d0e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-900') {
        @include assert {
          @include output {
            @include xl\:via-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #713f12,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-yellow-950') {
        @include assert {
          @include output {
            @include xl\:via-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #422006,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-50') {
        @include assert {
          @include output {
            @include xl\:via-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f7fee7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-100') {
        @include assert {
          @include output {
            @include xl\:via-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfccb,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-200') {
        @include assert {
          @include output {
            @include xl\:via-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d9f99d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-300') {
        @include assert {
          @include output {
            @include xl\:via-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bef264,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-400') {
        @include assert {
          @include output {
            @include xl\:via-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3e635,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-500') {
        @include assert {
          @include output {
            @include xl\:via-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #84cc16,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-600') {
        @include assert {
          @include output {
            @include xl\:via-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #65a30d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-700') {
        @include assert {
          @include output {
            @include xl\:via-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4d7c0f,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-800') {
        @include assert {
          @include output {
            @include xl\:via-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f6212,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-900') {
        @include assert {
          @include output {
            @include xl\:via-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #365314,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-lime-950') {
        @include assert {
          @include output {
            @include xl\:via-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1a2e05,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-50') {
        @include assert {
          @include output {
            @include xl\:via-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdf4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-100') {
        @include assert {
          @include output {
            @include xl\:via-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dcfce7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-200') {
        @include assert {
          @include output {
            @include xl\:via-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bbf7d0,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-300') {
        @include assert {
          @include output {
            @include xl\:via-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #86efac,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-400') {
        @include assert {
          @include output {
            @include xl\:via-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4ade80,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-500') {
        @include assert {
          @include output {
            @include xl\:via-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #22c55e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-600') {
        @include assert {
          @include output {
            @include xl\:via-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #16a34a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-700') {
        @include assert {
          @include output {
            @include xl\:via-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #15803d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-800') {
        @include assert {
          @include output {
            @include xl\:via-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #166534,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-900') {
        @include assert {
          @include output {
            @include xl\:via-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #14532d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-green-950') {
        @include assert {
          @include output {
            @include xl\:via-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #052e16,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-50') {
        @include assert {
          @include output {
            @include xl\:via-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfdf5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-100') {
        @include assert {
          @include output {
            @include xl\:via-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1fae5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-200') {
        @include assert {
          @include output {
            @include xl\:via-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a7f3d0,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-300') {
        @include assert {
          @include output {
            @include xl\:via-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6ee7b7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-400') {
        @include assert {
          @include output {
            @include xl\:via-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #34d399,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-500') {
        @include assert {
          @include output {
            @include xl\:via-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #10b981,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-600') {
        @include assert {
          @include output {
            @include xl\:via-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #059669,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-700') {
        @include assert {
          @include output {
            @include xl\:via-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #047857,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-800') {
        @include assert {
          @include output {
            @include xl\:via-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #065f46,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-900') {
        @include assert {
          @include output {
            @include xl\:via-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #064e3b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-emerald-950') {
        @include assert {
          @include output {
            @include xl\:via-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #022c22,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-50') {
        @include assert {
          @include output {
            @include xl\:via-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdfa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-100') {
        @include assert {
          @include output {
            @include xl\:via-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ccfbf1,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-200') {
        @include assert {
          @include output {
            @include xl\:via-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #99f6e4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-300') {
        @include assert {
          @include output {
            @include xl\:via-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #5eead4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-400') {
        @include assert {
          @include output {
            @include xl\:via-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2dd4bf,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-500') {
        @include assert {
          @include output {
            @include xl\:via-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #14b8a6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-600') {
        @include assert {
          @include output {
            @include xl\:via-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0d9488,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-700') {
        @include assert {
          @include output {
            @include xl\:via-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f766e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-800') {
        @include assert {
          @include output {
            @include xl\:via-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #115e59,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-900') {
        @include assert {
          @include output {
            @include xl\:via-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #134e4a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-teal-950') {
        @include assert {
          @include output {
            @include xl\:via-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #042f2e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-50') {
        @include assert {
          @include output {
            @include xl\:via-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfeff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-100') {
        @include assert {
          @include output {
            @include xl\:via-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #cffafe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-200') {
        @include assert {
          @include output {
            @include xl\:via-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5f3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-300') {
        @include assert {
          @include output {
            @include xl\:via-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #67e8f9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-400') {
        @include assert {
          @include output {
            @include xl\:via-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #22d3ee,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-500') {
        @include assert {
          @include output {
            @include xl\:via-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #06b6d4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-600') {
        @include assert {
          @include output {
            @include xl\:via-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0891b2,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-700') {
        @include assert {
          @include output {
            @include xl\:via-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0e7490,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-800') {
        @include assert {
          @include output {
            @include xl\:via-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #155e75,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-900') {
        @include assert {
          @include output {
            @include xl\:via-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #164e63,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-cyan-950') {
        @include assert {
          @include output {
            @include xl\:via-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #083344,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-50') {
        @include assert {
          @include output {
            @include xl\:via-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0f9ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-100') {
        @include assert {
          @include output {
            @include xl\:via-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0f2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-200') {
        @include assert {
          @include output {
            @include xl\:via-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bae6fd,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-300') {
        @include assert {
          @include output {
            @include xl\:via-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7dd3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-400') {
        @include assert {
          @include output {
            @include xl\:via-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #38bdf8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-500') {
        @include assert {
          @include output {
            @include xl\:via-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0ea5e9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-600') {
        @include assert {
          @include output {
            @include xl\:via-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0284c7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-700') {
        @include assert {
          @include output {
            @include xl\:via-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0369a1,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-800') {
        @include assert {
          @include output {
            @include xl\:via-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #075985,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-900') {
        @include assert {
          @include output {
            @include xl\:via-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c4a6e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-sky-950') {
        @include assert {
          @include output {
            @include xl\:via-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #082f49,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-50') {
        @include assert {
          @include output {
            @include xl\:via-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eff6ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-100') {
        @include assert {
          @include output {
            @include xl\:via-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dbeafe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-200') {
        @include assert {
          @include output {
            @include xl\:via-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bfdbfe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-300') {
        @include assert {
          @include output {
            @include xl\:via-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #93c5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-400') {
        @include assert {
          @include output {
            @include xl\:via-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #60a5fa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-500') {
        @include assert {
          @include output {
            @include xl\:via-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b82f6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-600') {
        @include assert {
          @include output {
            @include xl\:via-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2563eb,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-700') {
        @include assert {
          @include output {
            @include xl\:via-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1d4ed8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-800') {
        @include assert {
          @include output {
            @include xl\:via-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e40af,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-900') {
        @include assert {
          @include output {
            @include xl\:via-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e3a8a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-blue-950') {
        @include assert {
          @include output {
            @include xl\:via-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #172554,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-50') {
        @include assert {
          @include output {
            @include xl\:via-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eef2ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-100') {
        @include assert {
          @include output {
            @include xl\:via-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0e7ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-200') {
        @include assert {
          @include output {
            @include xl\:via-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c7d2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-300') {
        @include assert {
          @include output {
            @include xl\:via-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5b4fc,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-400') {
        @include assert {
          @include output {
            @include xl\:via-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #818cf8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-500') {
        @include assert {
          @include output {
            @include xl\:via-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6366f1,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-600') {
        @include assert {
          @include output {
            @include xl\:via-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4f46e5,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-700') {
        @include assert {
          @include output {
            @include xl\:via-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4338ca,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-800') {
        @include assert {
          @include output {
            @include xl\:via-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3730a3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-900') {
        @include assert {
          @include output {
            @include xl\:via-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #312e81,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-indigo-950') {
        @include assert {
          @include output {
            @include xl\:via-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e1b4b,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-50') {
        @include assert {
          @include output {
            @include xl\:via-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f3ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-100') {
        @include assert {
          @include output {
            @include xl\:via-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ede9fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-200') {
        @include assert {
          @include output {
            @include xl\:via-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ddd6fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-300') {
        @include assert {
          @include output {
            @include xl\:via-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c4b5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-400') {
        @include assert {
          @include output {
            @include xl\:via-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a78bfa,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-500') {
        @include assert {
          @include output {
            @include xl\:via-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #8b5cf6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-600') {
        @include assert {
          @include output {
            @include xl\:via-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c3aed,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-700') {
        @include assert {
          @include output {
            @include xl\:via-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6d28d9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-800') {
        @include assert {
          @include output {
            @include xl\:via-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #5b21b6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-900') {
        @include assert {
          @include output {
            @include xl\:via-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c1d95,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-violet-950') {
        @include assert {
          @include output {
            @include xl\:via-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2e1065,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-50') {
        @include assert {
          @include output {
            @include xl\:via-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #faf5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-100') {
        @include assert {
          @include output {
            @include xl\:via-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3e8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-200') {
        @include assert {
          @include output {
            @include xl\:via-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e9d5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-300') {
        @include assert {
          @include output {
            @include xl\:via-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d8b4fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-400') {
        @include assert {
          @include output {
            @include xl\:via-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c084fc,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-500') {
        @include assert {
          @include output {
            @include xl\:via-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a855f7,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-600') {
        @include assert {
          @include output {
            @include xl\:via-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9333ea,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-700') {
        @include assert {
          @include output {
            @include xl\:via-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7e22ce,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-800') {
        @include assert {
          @include output {
            @include xl\:via-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b21a8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-900') {
        @include assert {
          @include output {
            @include xl\:via-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #581c87,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-purple-950') {
        @include assert {
          @include output {
            @include xl\:via-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b0764,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf4ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fae8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5d0fe,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0abfc,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e879f9,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d946ef,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c026d3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a21caf,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #86198f,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #701a75,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:via-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4a044e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-50') {
        @include assert {
          @include output {
            @include xl\:via-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf2f8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-100') {
        @include assert {
          @include output {
            @include xl\:via-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fce7f3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-200') {
        @include assert {
          @include output {
            @include xl\:via-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbcfe8,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-300') {
        @include assert {
          @include output {
            @include xl\:via-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9a8d4,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-400') {
        @include assert {
          @include output {
            @include xl\:via-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f472b6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-500') {
        @include assert {
          @include output {
            @include xl\:via-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ec4899,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-600') {
        @include assert {
          @include output {
            @include xl\:via-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #db2777,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-700') {
        @include assert {
          @include output {
            @include xl\:via-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #be185d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-800') {
        @include assert {
          @include output {
            @include xl\:via-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9d174d,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-900') {
        @include assert {
          @include output {
            @include xl\:via-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #831843,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-pink-950') {
        @include assert {
          @include output {
            @include xl\:via-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #500724,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-50') {
        @include assert {
          @include output {
            @include xl\:via-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff1f2,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-100') {
        @include assert {
          @include output {
            @include xl\:via-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffe4e6,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-200') {
        @include assert {
          @include output {
            @include xl\:via-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecdd3,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-300') {
        @include assert {
          @include output {
            @include xl\:via-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fda4af,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-400') {
        @include assert {
          @include output {
            @include xl\:via-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb7185,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-500') {
        @include assert {
          @include output {
            @include xl\:via-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f43f5e,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-600') {
        @include assert {
          @include output {
            @include xl\:via-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e11d48,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-700') {
        @include assert {
          @include output {
            @include xl\:via-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #be123c,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-800') {
        @include assert {
          @include output {
            @include xl\:via-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9f1239,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-900') {
        @include assert {
          @include output {
            @include xl\:via-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #881337,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-rose-950') {
        @include assert {
          @include output {
            @include xl\:via-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c0519,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-0\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 0%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-5\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 5%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-10\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 10%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-15\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 15%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-20\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 20%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-25\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 25%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-30\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 30%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-35\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 35%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-40\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 40%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-45\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 45%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-50\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 50%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-55\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 55%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-60\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 60%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-65\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 65%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-70\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 70%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-75\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 75%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-80\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 80%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-85\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 85%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-90\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 90%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:via-95\%') {
        @include assert {
          @include output {
            @include xl\:via-white;
            @include xl\:via-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 95%,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:to-inherit') {
        @include assert {
          @include output {
            @include xl\:to-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('xl\:to-current') {
        @include assert {
          @include output {
            @include xl\:to-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }
      }

      @include it('xl\:to-transparent') {
        @include assert {
          @include output {
            @include xl\:to-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }
      }

      @include it('xl\:to-slate-100') {
        @include assert {
          @include output {
            @include xl\:to-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }
      }

      @include it('xl\:to-slate-200') {
        @include assert {
          @include output {
            @include xl\:to-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }
      }

      @include it('xl\:to-slate-300') {
        @include assert {
          @include output {
            @include xl\:to-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }
      }

      @include it('xl\:to-slate-400') {
        @include assert {
          @include output {
            @include xl\:to-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }
      }

      @include it('xl\:to-slate-500') {
        @include assert {
          @include output {
            @include xl\:to-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }
      }

      @include it('xl\:to-slate-600') {
        @include assert {
          @include output {
            @include xl\:to-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }
      }

      @include it('xl\:to-slate-700') {
        @include assert {
          @include output {
            @include xl\:to-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }
      }

      @include it('xl\:to-slate-800') {
        @include assert {
          @include output {
            @include xl\:to-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }
      }

      @include it('xl\:to-slate-900') {
        @include assert {
          @include output {
            @include xl\:to-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }
      }

      @include it('xl\:to-slate-950') {
        @include assert {
          @include output {
            @include xl\:to-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }
      }

      @include it('xl\:to-gray-50') {
        @include assert {
          @include output {
            @include xl\:to-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }
      }

      @include it('xl\:to-gray-100') {
        @include assert {
          @include output {
            @include xl\:to-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }
      }

      @include it('xl\:to-gray-200') {
        @include assert {
          @include output {
            @include xl\:to-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }
      }

      @include it('xl\:to-gray-300') {
        @include assert {
          @include output {
            @include xl\:to-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }
      }

      @include it('xl\:to-gray-400') {
        @include assert {
          @include output {
            @include xl\:to-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }
      }

      @include it('xl\:to-gray-500') {
        @include assert {
          @include output {
            @include xl\:to-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }
      }

      @include it('xl\:to-gray-600') {
        @include assert {
          @include output {
            @include xl\:to-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }
      }

      @include it('xl\:to-gray-700') {
        @include assert {
          @include output {
            @include xl\:to-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }
      }

      @include it('xl\:to-gray-800') {
        @include assert {
          @include output {
            @include xl\:to-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }
      }

      @include it('xl\:to-gray-900') {
        @include assert {
          @include output {
            @include xl\:to-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }
      }

      @include it('xl\:to-gray-950') {
        @include assert {
          @include output {
            @include xl\:to-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }
      }

      @include it('xl\:to-zinc-50') {
        @include assert {
          @include output {
            @include xl\:to-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('xl\:to-zinc-100') {
        @include assert {
          @include output {
            @include xl\:to-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }
      }

      @include it('xl\:to-zinc-200') {
        @include assert {
          @include output {
            @include xl\:to-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }
      }

      @include it('xl\:to-zinc-300') {
        @include assert {
          @include output {
            @include xl\:to-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }
      }

      @include it('xl\:to-zinc-400') {
        @include assert {
          @include output {
            @include xl\:to-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }
      }

      @include it('xl\:to-zinc-500') {
        @include assert {
          @include output {
            @include xl\:to-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }
      }

      @include it('xl\:to-zinc-600') {
        @include assert {
          @include output {
            @include xl\:to-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }
      }

      @include it('xl\:to-zinc-700') {
        @include assert {
          @include output {
            @include xl\:to-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }
      }

      @include it('xl\:to-zinc-800') {
        @include assert {
          @include output {
            @include xl\:to-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }
      }

      @include it('xl\:to-zinc-900') {
        @include assert {
          @include output {
            @include xl\:to-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }
      }

      @include it('xl\:to-zinc-950') {
        @include assert {
          @include output {
            @include xl\:to-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }
      }

      @include it('xl\:to-neutral-50') {
        @include assert {
          @include output {
            @include xl\:to-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('xl\:to-neutral-100') {
        @include assert {
          @include output {
            @include xl\:to-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f5f5f5);
            }
          }
        }
      }

      @include it('xl\:to-neutral-200') {
        @include assert {
          @include output {
            @include xl\:to-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }
      }

      @include it('xl\:to-neutral-300') {
        @include assert {
          @include output {
            @include xl\:to-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }
      }

      @include it('xl\:to-neutral-400') {
        @include assert {
          @include output {
            @include xl\:to-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }
      }

      @include it('xl\:to-neutral-500') {
        @include assert {
          @include output {
            @include xl\:to-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }
      }

      @include it('xl\:to-neutral-600') {
        @include assert {
          @include output {
            @include xl\:to-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }
      }

      @include it('xl\:to-neutral-700') {
        @include assert {
          @include output {
            @include xl\:to-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }
      }

      @include it('xl\:to-neutral-800') {
        @include assert {
          @include output {
            @include xl\:to-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }
      }

      @include it('xl\:to-neutral-900') {
        @include assert {
          @include output {
            @include xl\:to-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }
      }

      @include it('xl\:to-neutral-950') {
        @include assert {
          @include output {
            @include xl\:to-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }
      }

      @include it('xl\:to-stone-50') {
        @include assert {
          @include output {
            @include xl\:to-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }
      }

      @include it('xl\:to-stone-100') {
        @include assert {
          @include output {
            @include xl\:to-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }
      }

      @include it('xl\:to-stone-200') {
        @include assert {
          @include output {
            @include xl\:to-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }
      }

      @include it('xl\:to-stone-300') {
        @include assert {
          @include output {
            @include xl\:to-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }
      }

      @include it('xl\:to-stone-400') {
        @include assert {
          @include output {
            @include xl\:to-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }
      }

      @include it('xl\:to-stone-500') {
        @include assert {
          @include output {
            @include xl\:to-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }
      }

      @include it('xl\:to-stone-600') {
        @include assert {
          @include output {
            @include xl\:to-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }
      }

      @include it('xl\:to-stone-700') {
        @include assert {
          @include output {
            @include xl\:to-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }
      }

      @include it('xl\:to-stone-800') {
        @include assert {
          @include output {
            @include xl\:to-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }
      }

      @include it('xl\:to-stone-900') {
        @include assert {
          @include output {
            @include xl\:to-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }
      }

      @include it('xl\:to-stone-950') {
        @include assert {
          @include output {
            @include xl\:to-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }
      }

      @include it('xl\:to-red-50') {
        @include assert {
          @include output {
            @include xl\:to-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }
      }

      @include it('xl\:to-red-100') {
        @include assert {
          @include output {
            @include xl\:to-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }
      }

      @include it('xl\:to-red-200') {
        @include assert {
          @include output {
            @include xl\:to-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }
      }

      @include it('xl\:to-red-300') {
        @include assert {
          @include output {
            @include xl\:to-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }
      }

      @include it('xl\:to-red-400') {
        @include assert {
          @include output {
            @include xl\:to-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }
      }

      @include it('xl\:to-red-500') {
        @include assert {
          @include output {
            @include xl\:to-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }
      }

      @include it('xl\:to-red-600') {
        @include assert {
          @include output {
            @include xl\:to-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }
      }

      @include it('xl\:to-red-700') {
        @include assert {
          @include output {
            @include xl\:to-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }
      }

      @include it('xl\:to-red-800') {
        @include assert {
          @include output {
            @include xl\:to-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }
      }

      @include it('xl\:to-red-900') {
        @include assert {
          @include output {
            @include xl\:to-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }
      }

      @include it('xl\:to-red-950') {
        @include assert {
          @include output {
            @include xl\:to-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }
      }

      @include it('xl\:to-orange-50') {
        @include assert {
          @include output {
            @include xl\:to-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }
      }

      @include it('xl\:to-orange-100') {
        @include assert {
          @include output {
            @include xl\:to-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }
      }

      @include it('xl\:to-orange-200') {
        @include assert {
          @include output {
            @include xl\:to-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }
      }

      @include it('xl\:to-orange-300') {
        @include assert {
          @include output {
            @include xl\:to-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }
      }

      @include it('xl\:to-orange-400') {
        @include assert {
          @include output {
            @include xl\:to-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }
      }

      @include it('xl\:to-orange-500') {
        @include assert {
          @include output {
            @include xl\:to-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }
      }

      @include it('xl\:to-orange-600') {
        @include assert {
          @include output {
            @include xl\:to-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }
      }

      @include it('xl\:to-orange-700') {
        @include assert {
          @include output {
            @include xl\:to-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }
      }

      @include it('xl\:to-orange-800') {
        @include assert {
          @include output {
            @include xl\:to-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }
      }

      @include it('xl\:to-orange-900') {
        @include assert {
          @include output {
            @include xl\:to-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }
      }

      @include it('xl\:to-orange-950') {
        @include assert {
          @include output {
            @include xl\:to-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }
      }

      @include it('xl\:to-amber-50') {
        @include assert {
          @include output {
            @include xl\:to-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }
      }

      @include it('xl\:to-amber-100') {
        @include assert {
          @include output {
            @include xl\:to-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }
      }

      @include it('xl\:to-amber-200') {
        @include assert {
          @include output {
            @include xl\:to-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }
      }

      @include it('xl\:to-amber-300') {
        @include assert {
          @include output {
            @include xl\:to-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }
      }

      @include it('xl\:to-amber-400') {
        @include assert {
          @include output {
            @include xl\:to-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }
      }

      @include it('xl\:to-amber-500') {
        @include assert {
          @include output {
            @include xl\:to-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }
      }

      @include it('xl\:to-amber-600') {
        @include assert {
          @include output {
            @include xl\:to-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }
      }

      @include it('xl\:to-amber-700') {
        @include assert {
          @include output {
            @include xl\:to-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }
      }

      @include it('xl\:to-amber-800') {
        @include assert {
          @include output {
            @include xl\:to-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }
      }

      @include it('xl\:to-amber-900') {
        @include assert {
          @include output {
            @include xl\:to-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }
      }

      @include it('xl\:to-amber-950') {
        @include assert {
          @include output {
            @include xl\:to-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }
      }

      @include it('xl\:to-yellow-50') {
        @include assert {
          @include output {
            @include xl\:to-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }
      }

      @include it('xl\:to-yellow-100') {
        @include assert {
          @include output {
            @include xl\:to-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }
      }

      @include it('xl\:to-yellow-200') {
        @include assert {
          @include output {
            @include xl\:to-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }
      }

      @include it('xl\:to-yellow-300') {
        @include assert {
          @include output {
            @include xl\:to-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }
      }

      @include it('xl\:to-yellow-400') {
        @include assert {
          @include output {
            @include xl\:to-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }
      }

      @include it('xl\:to-yellow-500') {
        @include assert {
          @include output {
            @include xl\:to-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }
      }

      @include it('xl\:to-yellow-600') {
        @include assert {
          @include output {
            @include xl\:to-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }
      }

      @include it('xl\:to-yellow-700') {
        @include assert {
          @include output {
            @include xl\:to-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }
      }

      @include it('xl\:to-yellow-800') {
        @include assert {
          @include output {
            @include xl\:to-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }
      }

      @include it('xl\:to-yellow-900') {
        @include assert {
          @include output {
            @include xl\:to-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }
      }

      @include it('xl\:to-yellow-950') {
        @include assert {
          @include output {
            @include xl\:to-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }
      }

      @include it('xl\:to-lime-50') {
        @include assert {
          @include output {
            @include xl\:to-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }
      }

      @include it('xl\:to-lime-100') {
        @include assert {
          @include output {
            @include xl\:to-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }
      }

      @include it('xl\:to-lime-200') {
        @include assert {
          @include output {
            @include xl\:to-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }
      }

      @include it('xl\:to-lime-300') {
        @include assert {
          @include output {
            @include xl\:to-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }
      }

      @include it('xl\:to-lime-400') {
        @include assert {
          @include output {
            @include xl\:to-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }
      }

      @include it('xl\:to-lime-500') {
        @include assert {
          @include output {
            @include xl\:to-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }
      }

      @include it('xl\:to-lime-600') {
        @include assert {
          @include output {
            @include xl\:to-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }
      }

      @include it('xl\:to-lime-700') {
        @include assert {
          @include output {
            @include xl\:to-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }
      }

      @include it('xl\:to-lime-800') {
        @include assert {
          @include output {
            @include xl\:to-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }
      }

      @include it('xl\:to-lime-900') {
        @include assert {
          @include output {
            @include xl\:to-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }
      }

      @include it('xl\:to-lime-950') {
        @include assert {
          @include output {
            @include xl\:to-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }
      }

      @include it('xl\:to-green-50') {
        @include assert {
          @include output {
            @include xl\:to-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }
      }

      @include it('xl\:to-green-100') {
        @include assert {
          @include output {
            @include xl\:to-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }
      }

      @include it('xl\:to-green-200') {
        @include assert {
          @include output {
            @include xl\:to-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }
      }

      @include it('xl\:to-green-300') {
        @include assert {
          @include output {
            @include xl\:to-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }
      }

      @include it('xl\:to-green-400') {
        @include assert {
          @include output {
            @include xl\:to-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }
      }

      @include it('xl\:to-green-500') {
        @include assert {
          @include output {
            @include xl\:to-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }
      }

      @include it('xl\:to-green-600') {
        @include assert {
          @include output {
            @include xl\:to-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }
      }

      @include it('xl\:to-green-700') {
        @include assert {
          @include output {
            @include xl\:to-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }
      }

      @include it('xl\:to-green-800') {
        @include assert {
          @include output {
            @include xl\:to-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }
      }

      @include it('xl\:to-green-900') {
        @include assert {
          @include output {
            @include xl\:to-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }
      }

      @include it('xl\:to-green-950') {
        @include assert {
          @include output {
            @include xl\:to-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }
      }

      @include it('xl\:to-emerald-50') {
        @include assert {
          @include output {
            @include xl\:to-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }
      }

      @include it('xl\:to-emerald-100') {
        @include assert {
          @include output {
            @include xl\:to-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }
      }

      @include it('xl\:to-emerald-200') {
        @include assert {
          @include output {
            @include xl\:to-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }
      }

      @include it('xl\:to-emerald-300') {
        @include assert {
          @include output {
            @include xl\:to-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }
      }

      @include it('xl\:to-emerald-400') {
        @include assert {
          @include output {
            @include xl\:to-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }
      }

      @include it('xl\:to-emerald-500') {
        @include assert {
          @include output {
            @include xl\:to-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }
      }

      @include it('xl\:to-emerald-600') {
        @include assert {
          @include output {
            @include xl\:to-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }
      }

      @include it('xl\:to-emerald-700') {
        @include assert {
          @include output {
            @include xl\:to-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }
      }

      @include it('xl\:to-emerald-800') {
        @include assert {
          @include output {
            @include xl\:to-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }
      }

      @include it('xl\:to-emerald-900') {
        @include assert {
          @include output {
            @include xl\:to-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }
      }

      @include it('xl\:to-emerald-950') {
        @include assert {
          @include output {
            @include xl\:to-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }
      }

      @include it('xl\:to-teal-50') {
        @include assert {
          @include output {
            @include xl\:to-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }
      }

      @include it('xl\:to-teal-100') {
        @include assert {
          @include output {
            @include xl\:to-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }
      }

      @include it('xl\:to-teal-200') {
        @include assert {
          @include output {
            @include xl\:to-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }
      }

      @include it('xl\:to-teal-300') {
        @include assert {
          @include output {
            @include xl\:to-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }
      }

      @include it('xl\:to-teal-400') {
        @include assert {
          @include output {
            @include xl\:to-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }
      }

      @include it('xl\:to-teal-500') {
        @include assert {
          @include output {
            @include xl\:to-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }
      }

      @include it('xl\:to-teal-600') {
        @include assert {
          @include output {
            @include xl\:to-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }
      }

      @include it('xl\:to-teal-700') {
        @include assert {
          @include output {
            @include xl\:to-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }
      }

      @include it('xl\:to-teal-800') {
        @include assert {
          @include output {
            @include xl\:to-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }
      }

      @include it('xl\:to-teal-900') {
        @include assert {
          @include output {
            @include xl\:to-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }
      }

      @include it('xl\:to-teal-950') {
        @include assert {
          @include output {
            @include xl\:to-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }
      }

      @include it('xl\:to-cyan-50') {
        @include assert {
          @include output {
            @include xl\:to-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }
      }

      @include it('xl\:to-cyan-100') {
        @include assert {
          @include output {
            @include xl\:to-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }
      }

      @include it('xl\:to-cyan-200') {
        @include assert {
          @include output {
            @include xl\:to-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }
      }

      @include it('xl\:to-cyan-300') {
        @include assert {
          @include output {
            @include xl\:to-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }
      }

      @include it('xl\:to-cyan-400') {
        @include assert {
          @include output {
            @include xl\:to-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }
      }

      @include it('xl\:to-cyan-500') {
        @include assert {
          @include output {
            @include xl\:to-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }
      }

      @include it('xl\:to-cyan-600') {
        @include assert {
          @include output {
            @include xl\:to-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }
      }

      @include it('xl\:to-cyan-700') {
        @include assert {
          @include output {
            @include xl\:to-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }
      }

      @include it('xl\:to-cyan-800') {
        @include assert {
          @include output {
            @include xl\:to-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }
      }

      @include it('xl\:to-cyan-900') {
        @include assert {
          @include output {
            @include xl\:to-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }
      }

      @include it('xl\:to-cyan-950') {
        @include assert {
          @include output {
            @include xl\:to-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }
      }

      @include it('xl\:to-sky-50') {
        @include assert {
          @include output {
            @include xl\:to-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }
      }

      @include it('xl\:to-sky-100') {
        @include assert {
          @include output {
            @include xl\:to-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }
      }

      @include it('xl\:to-sky-200') {
        @include assert {
          @include output {
            @include xl\:to-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }
      }

      @include it('xl\:to-sky-300') {
        @include assert {
          @include output {
            @include xl\:to-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }
      }

      @include it('xl\:to-sky-400') {
        @include assert {
          @include output {
            @include xl\:to-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }
      }

      @include it('xl\:to-sky-500') {
        @include assert {
          @include output {
            @include xl\:to-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }
      }

      @include it('xl\:to-sky-600') {
        @include assert {
          @include output {
            @include xl\:to-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }
      }

      @include it('xl\:to-sky-700') {
        @include assert {
          @include output {
            @include xl\:to-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }
      }

      @include it('xl\:to-sky-800') {
        @include assert {
          @include output {
            @include xl\:to-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }
      }

      @include it('xl\:to-sky-900') {
        @include assert {
          @include output {
            @include xl\:to-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }
      }

      @include it('xl\:to-sky-950') {
        @include assert {
          @include output {
            @include xl\:to-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }
      }

      @include it('xl\:to-blue-50') {
        @include assert {
          @include output {
            @include xl\:to-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }
      }

      @include it('xl\:to-blue-100') {
        @include assert {
          @include output {
            @include xl\:to-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }
      }

      @include it('xl\:to-blue-200') {
        @include assert {
          @include output {
            @include xl\:to-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }
      }

      @include it('xl\:to-blue-300') {
        @include assert {
          @include output {
            @include xl\:to-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }
      }

      @include it('xl\:to-blue-400') {
        @include assert {
          @include output {
            @include xl\:to-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }
      }

      @include it('xl\:to-blue-500') {
        @include assert {
          @include output {
            @include xl\:to-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }
      }

      @include it('xl\:to-blue-600') {
        @include assert {
          @include output {
            @include xl\:to-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }
      }

      @include it('xl\:to-blue-700') {
        @include assert {
          @include output {
            @include xl\:to-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }
      }

      @include it('xl\:to-blue-800') {
        @include assert {
          @include output {
            @include xl\:to-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }
      }

      @include it('xl\:to-blue-900') {
        @include assert {
          @include output {
            @include xl\:to-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }
      }

      @include it('xl\:to-blue-950') {
        @include assert {
          @include output {
            @include xl\:to-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }
      }

      @include it('xl\:to-indigo-50') {
        @include assert {
          @include output {
            @include xl\:to-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }
      }

      @include it('xl\:to-indigo-100') {
        @include assert {
          @include output {
            @include xl\:to-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }
      }

      @include it('xl\:to-indigo-200') {
        @include assert {
          @include output {
            @include xl\:to-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }
      }

      @include it('xl\:to-indigo-300') {
        @include assert {
          @include output {
            @include xl\:to-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }
      }

      @include it('xl\:to-indigo-400') {
        @include assert {
          @include output {
            @include xl\:to-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }
      }

      @include it('xl\:to-indigo-500') {
        @include assert {
          @include output {
            @include xl\:to-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }
      }

      @include it('xl\:to-indigo-600') {
        @include assert {
          @include output {
            @include xl\:to-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }
      }

      @include it('xl\:to-indigo-700') {
        @include assert {
          @include output {
            @include xl\:to-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }
      }

      @include it('xl\:to-indigo-800') {
        @include assert {
          @include output {
            @include xl\:to-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }
      }

      @include it('xl\:to-indigo-900') {
        @include assert {
          @include output {
            @include xl\:to-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }
      }

      @include it('xl\:to-indigo-950') {
        @include assert {
          @include output {
            @include xl\:to-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }
      }

      @include it('xl\:to-violet-50') {
        @include assert {
          @include output {
            @include xl\:to-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }
      }

      @include it('xl\:to-violet-100') {
        @include assert {
          @include output {
            @include xl\:to-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }
      }

      @include it('xl\:to-violet-200') {
        @include assert {
          @include output {
            @include xl\:to-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }
      }

      @include it('xl\:to-violet-300') {
        @include assert {
          @include output {
            @include xl\:to-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }
      }

      @include it('xl\:to-violet-400') {
        @include assert {
          @include output {
            @include xl\:to-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }
      }

      @include it('xl\:to-violet-500') {
        @include assert {
          @include output {
            @include xl\:to-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }
      }

      @include it('xl\:to-violet-600') {
        @include assert {
          @include output {
            @include xl\:to-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }
      }

      @include it('xl\:to-violet-700') {
        @include assert {
          @include output {
            @include xl\:to-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }
      }

      @include it('xl\:to-violet-800') {
        @include assert {
          @include output {
            @include xl\:to-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }
      }

      @include it('xl\:to-violet-900') {
        @include assert {
          @include output {
            @include xl\:to-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }
      }

      @include it('xl\:to-violet-950') {
        @include assert {
          @include output {
            @include xl\:to-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }
      }

      @include it('xl\:to-purple-50') {
        @include assert {
          @include output {
            @include xl\:to-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }
      }

      @include it('xl\:to-purple-100') {
        @include assert {
          @include output {
            @include xl\:to-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }
      }

      @include it('xl\:to-purple-200') {
        @include assert {
          @include output {
            @include xl\:to-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }
      }

      @include it('xl\:to-purple-300') {
        @include assert {
          @include output {
            @include xl\:to-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }
      }

      @include it('xl\:to-purple-400') {
        @include assert {
          @include output {
            @include xl\:to-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }
      }

      @include it('xl\:to-purple-500') {
        @include assert {
          @include output {
            @include xl\:to-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }
      }

      @include it('xl\:to-purple-600') {
        @include assert {
          @include output {
            @include xl\:to-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }
      }

      @include it('xl\:to-purple-700') {
        @include assert {
          @include output {
            @include xl\:to-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }
      }

      @include it('xl\:to-purple-800') {
        @include assert {
          @include output {
            @include xl\:to-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }
      }

      @include it('xl\:to-purple-900') {
        @include assert {
          @include output {
            @include xl\:to-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }
      }

      @include it('xl\:to-purple-950') {
        @include assert {
          @include output {
            @include xl\:to-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }
      }

      @include it('xl\:to-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:to-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }
      }

      @include it('xl\:to-pink-50') {
        @include assert {
          @include output {
            @include xl\:to-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }
      }

      @include it('xl\:to-pink-100') {
        @include assert {
          @include output {
            @include xl\:to-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }
      }

      @include it('xl\:to-pink-200') {
        @include assert {
          @include output {
            @include xl\:to-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }
      }

      @include it('xl\:to-pink-300') {
        @include assert {
          @include output {
            @include xl\:to-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }
      }

      @include it('xl\:to-pink-400') {
        @include assert {
          @include output {
            @include xl\:to-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }
      }

      @include it('xl\:to-pink-500') {
        @include assert {
          @include output {
            @include xl\:to-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }
      }

      @include it('xl\:to-pink-600') {
        @include assert {
          @include output {
            @include xl\:to-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }
      }

      @include it('xl\:to-pink-700') {
        @include assert {
          @include output {
            @include xl\:to-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }
      }

      @include it('xl\:to-pink-800') {
        @include assert {
          @include output {
            @include xl\:to-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }
      }

      @include it('xl\:to-pink-900') {
        @include assert {
          @include output {
            @include xl\:to-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }
      }

      @include it('xl\:to-pink-950') {
        @include assert {
          @include output {
            @include xl\:to-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }
      }

      @include it('xl\:to-rose-50') {
        @include assert {
          @include output {
            @include xl\:to-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }
      }

      @include it('xl\:to-rose-100') {
        @include assert {
          @include output {
            @include xl\:to-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }
      }

      @include it('xl\:to-rose-200') {
        @include assert {
          @include output {
            @include xl\:to-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }
      }

      @include it('xl\:to-rose-300') {
        @include assert {
          @include output {
            @include xl\:to-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }
      }

      @include it('xl\:to-rose-400') {
        @include assert {
          @include output {
            @include xl\:to-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }
      }

      @include it('xl\:to-rose-500') {
        @include assert {
          @include output {
            @include xl\:to-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }
      }

      @include it('xl\:to-rose-600') {
        @include assert {
          @include output {
            @include xl\:to-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }
      }

      @include it('xl\:to-rose-700') {
        @include assert {
          @include output {
            @include xl\:to-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }
      }

      @include it('xl\:to-rose-800') {
        @include assert {
          @include output {
            @include xl\:to-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }
      }

      @include it('xl\:to-rose-900') {
        @include assert {
          @include output {
            @include xl\:to-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }
      }

      @include it('xl\:to-rose-950') {
        @include assert {
          @include output {
            @include xl\:to-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }
      }

      @include it('xl\:to-0\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 0%);
            }
          }
        }
      }

      @include it('xl\:to-5\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 5%);
            }
          }
        }
      }

      @include it('xl\:to-10\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 10%);
            }
          }
        }
      }

      @include it('xl\:to-15\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 15%);
            }
          }
        }
      }

      @include it('xl\:to-20\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 20%);
            }
          }
        }
      }

      @include it('xl\:to-25\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 25%);
            }
          }
        }
      }

      @include it('xl\:to-30\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 30%);
            }
          }
        }
      }

      @include it('xl\:to-35\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 35%);
            }
          }
        }
      }

      @include it('xl\:to-40\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 40%);
            }
          }
        }
      }

      @include it('xl\:to-45\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 45%);
            }
          }
        }
      }

      @include it('xl\:to-50\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 50%);
            }
          }
        }
      }

      @include it('xl\:to-55\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 55%);
            }
          }
        }
      }

      @include it('xl\:to-60\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 60%);
            }
          }
        }
      }

      @include it('xl\:to-65\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 65%);
            }
          }
        }
      }

      @include it('xl\:to-70\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 70%);
            }
          }
        }
      }

      @include it('xl\:to-75\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 75%);
            }
          }
        }
      }

      @include it('xl\:to-80\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 80%);
            }
          }
        }
      }

      @include it('xl\:to-85\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 85%);
            }
          }
        }
      }

      @include it('xl\:to-90\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 90%);
            }
          }
        }
      }

      @include it('xl\:to-95\%') {
        @include assert {
          @include output {
            @include xl\:to-white;
            @include xl\:to-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #fff 95%);
            }
          }
        }
      }

      @include it('2xl\:from-inherit') {
        @include assert {
          @include output {
            @include \2xl\:from-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('2xl\:from-current') {
        @include assert {
          @include output {
            @include \2xl\:from-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:from-transparent') {
        @include assert {
          @include output {
            @include \2xl\:from-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:from-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:from-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:from-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f5f5f5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:from-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:from-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-50') {
        @include assert {
          @include output {
            @include \2xl\:from-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-100') {
        @include assert {
          @include output {
            @include \2xl\:from-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-200') {
        @include assert {
          @include output {
            @include \2xl\:from-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-300') {
        @include assert {
          @include output {
            @include \2xl\:from-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-400') {
        @include assert {
          @include output {
            @include \2xl\:from-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-500') {
        @include assert {
          @include output {
            @include \2xl\:from-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-600') {
        @include assert {
          @include output {
            @include \2xl\:from-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-700') {
        @include assert {
          @include output {
            @include \2xl\:from-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-800') {
        @include assert {
          @include output {
            @include \2xl\:from-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-900') {
        @include assert {
          @include output {
            @include \2xl\:from-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-red-950') {
        @include assert {
          @include output {
            @include \2xl\:from-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:from-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:from-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:from-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:from-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-50') {
        @include assert {
          @include output {
            @include \2xl\:from-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-100') {
        @include assert {
          @include output {
            @include \2xl\:from-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-200') {
        @include assert {
          @include output {
            @include \2xl\:from-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-300') {
        @include assert {
          @include output {
            @include \2xl\:from-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-400') {
        @include assert {
          @include output {
            @include \2xl\:from-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-500') {
        @include assert {
          @include output {
            @include \2xl\:from-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-600') {
        @include assert {
          @include output {
            @include \2xl\:from-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-700') {
        @include assert {
          @include output {
            @include \2xl\:from-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-800') {
        @include assert {
          @include output {
            @include \2xl\:from-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-900') {
        @include assert {
          @include output {
            @include \2xl\:from-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-green-950') {
        @include assert {
          @include output {
            @include \2xl\:from-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:from-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:from-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:from-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:from-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:from-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:from-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:from-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:from-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:from-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:from-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:from-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-0\%') {
        @include assert {
          @include output {
            @include \2xl\:from-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-5\%') {
        @include assert {
          @include output {
            @include \2xl\:from-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-10\%') {
        @include assert {
          @include output {
            @include \2xl\:from-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-15\%') {
        @include assert {
          @include output {
            @include \2xl\:from-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-20\%') {
        @include assert {
          @include output {
            @include \2xl\:from-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-25\%') {
        @include assert {
          @include output {
            @include \2xl\:from-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-30\%') {
        @include assert {
          @include output {
            @include \2xl\:from-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-35\%') {
        @include assert {
          @include output {
            @include \2xl\:from-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-40\%') {
        @include assert {
          @include output {
            @include \2xl\:from-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-45\%') {
        @include assert {
          @include output {
            @include \2xl\:from-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-50\%') {
        @include assert {
          @include output {
            @include \2xl\:from-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-55\%') {
        @include assert {
          @include output {
            @include \2xl\:from-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-60\%') {
        @include assert {
          @include output {
            @include \2xl\:from-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-65\%') {
        @include assert {
          @include output {
            @include \2xl\:from-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-70\%') {
        @include assert {
          @include output {
            @include \2xl\:from-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-75\%') {
        @include assert {
          @include output {
            @include \2xl\:from-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-80\%') {
        @include assert {
          @include output {
            @include \2xl\:from-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-85\%') {
        @include assert {
          @include output {
            @include \2xl\:from-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-90\%') {
        @include assert {
          @include output {
            @include \2xl\:from-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }
      }

      @include it('2xl\:from-95\%') {
        @include assert {
          @include output {
            @include \2xl\:from-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }
      }

      @include it('2xl\:via-inherit') {
        @include assert {
          @include output {
            @include \2xl\:via-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('2xl\:via-current') {
        @include assert {
          @include output {
            @include \2xl\:via-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                currentColor,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-transparent') {
        @include assert {
          @include output {
            @include \2xl\:via-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                transparent,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f1f5f9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e2e8f0,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #cbd5e1,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #94a3b8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #64748b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #475569,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #334155,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e293b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f172a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:via-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #020617,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9fafb,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3f4f6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e7eb,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1d5db,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9ca3af,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b7280,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4b5563,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #374151,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1f2937,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #111827,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:via-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #030712,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f4f4f5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e4e4e7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a1a1aa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #71717a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #52525b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f3f46,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #27272a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #18181b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:via-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #09090b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafafa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e5e5e5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d4d4d4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3a3a3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #737373,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #525252,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #404040,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #262626,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #171717,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:via-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0a0a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fafaf9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f5f4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e7e5e4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d6d3d1,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a8a29e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #78716c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #57534e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #44403c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #292524,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1c1917,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:via-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c0a09,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-50') {
        @include assert {
          @include output {
            @include \2xl\:via-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef2f2,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-100') {
        @include assert {
          @include output {
            @include \2xl\:via-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fee2e2,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-200') {
        @include assert {
          @include output {
            @include \2xl\:via-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecaca,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-300') {
        @include assert {
          @include output {
            @include \2xl\:via-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fca5a5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-400') {
        @include assert {
          @include output {
            @include \2xl\:via-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f87171,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-500') {
        @include assert {
          @include output {
            @include \2xl\:via-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ef4444,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-600') {
        @include assert {
          @include output {
            @include \2xl\:via-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dc2626,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-700') {
        @include assert {
          @include output {
            @include \2xl\:via-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #b91c1c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-800') {
        @include assert {
          @include output {
            @include \2xl\:via-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #991b1b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-900') {
        @include assert {
          @include output {
            @include \2xl\:via-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7f1d1d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-red-950') {
        @include assert {
          @include output {
            @include \2xl\:via-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #450a0a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff7ed,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffedd5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fed7aa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdba74,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb923c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f97316,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ea580c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c2410c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9a3412,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c2d12,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:via-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #431407,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fffbeb,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef3c7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde68a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fcd34d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbbf24,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f59e0b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d97706,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #b45309,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #92400e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #78350f,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:via-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #451a03,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fefce8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef9c3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fef08a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fde047,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #facc15,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eab308,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ca8a04,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a16207,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #854d0e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #713f12,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:via-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #422006,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f7fee7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfccb,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d9f99d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bef264,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a3e635,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #84cc16,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #65a30d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4d7c0f,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3f6212,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #365314,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:via-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1a2e05,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-50') {
        @include assert {
          @include output {
            @include \2xl\:via-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdf4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-100') {
        @include assert {
          @include output {
            @include \2xl\:via-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dcfce7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-200') {
        @include assert {
          @include output {
            @include \2xl\:via-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bbf7d0,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-300') {
        @include assert {
          @include output {
            @include \2xl\:via-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #86efac,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-400') {
        @include assert {
          @include output {
            @include \2xl\:via-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4ade80,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-500') {
        @include assert {
          @include output {
            @include \2xl\:via-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #22c55e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-600') {
        @include assert {
          @include output {
            @include \2xl\:via-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #16a34a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-700') {
        @include assert {
          @include output {
            @include \2xl\:via-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #15803d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-800') {
        @include assert {
          @include output {
            @include \2xl\:via-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #166534,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-900') {
        @include assert {
          @include output {
            @include \2xl\:via-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #14532d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-green-950') {
        @include assert {
          @include output {
            @include \2xl\:via-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #052e16,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfdf5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d1fae5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a7f3d0,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6ee7b7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #34d399,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #10b981,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #059669,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #047857,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #065f46,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #064e3b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:via-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #022c22,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0fdfa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ccfbf1,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #99f6e4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #5eead4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2dd4bf,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #14b8a6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0d9488,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0f766e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #115e59,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #134e4a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:via-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #042f2e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ecfeff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #cffafe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5f3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #67e8f9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #22d3ee,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #06b6d4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0891b2,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0e7490,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #155e75,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #164e63,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:via-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #083344,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0f9ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0f2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bae6fd,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7dd3fc,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #38bdf8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0ea5e9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0284c7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0369a1,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #075985,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #0c4a6e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:via-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #082f49,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eff6ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #dbeafe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #bfdbfe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #93c5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #60a5fa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b82f6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2563eb,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1d4ed8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e40af,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e3a8a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:via-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #172554,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #eef2ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e0e7ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c7d2fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a5b4fc,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #818cf8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6366f1,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4f46e5,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4338ca,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3730a3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #312e81,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:via-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #1e1b4b,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5f3ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ede9fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ddd6fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c4b5fd,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a78bfa,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #8b5cf6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7c3aed,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6d28d9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #5b21b6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c1d95,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:via-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #2e1065,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #faf5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f3e8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e9d5ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d8b4fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c084fc,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a855f7,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9333ea,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #7e22ce,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #6b21a8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #581c87,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:via-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #3b0764,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf4ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fae8ff,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f5d0fe,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f0abfc,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e879f9,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #d946ef,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #c026d3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #a21caf,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #86198f,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #701a75,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:via-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4a044e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fdf2f8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fce7f3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fbcfe8,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f9a8d4,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f472b6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ec4899,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #db2777,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #be185d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9d174d,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #831843,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:via-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #500724,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff1f2,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #ffe4e6,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fecdd3,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fda4af,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fb7185,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #f43f5e,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #e11d48,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #be123c,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #9f1239,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #881337,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:via-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #4c0519,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-0\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 0%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-5\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 5%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-10\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 10%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-15\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 15%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-20\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 20%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-25\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 25%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-30\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 30%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-35\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 35%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-40\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 40%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-45\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 45%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-50\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 50%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-55\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 55%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-60\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 60%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-65\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 65%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-70\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 70%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-75\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 75%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-80\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 80%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-85\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 85%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-90\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 90%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:via-95\%') {
        @include assert {
          @include output {
            @include \2xl\:via-white;
            @include \2xl\:via-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff, transparent);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #fff 95%,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:to-inherit') {
        @include assert {
          @include output {
            @include \2xl\:to-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: inherit !important;
            }
          }
        }
      }

      @include it('2xl\:to-current') {
        @include assert {
          @include output {
            @include \2xl\:to-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }
      }

      @include it('2xl\:to-transparent') {
        @include assert {
          @include output {
            @include \2xl\:to-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }
      }

      @include it('2xl\:to-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }
      }

      @include it('2xl\:to-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }
      }

      @include it('2xl\:to-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }
      }

      @include it('2xl\:to-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }
      }

      @include it('2xl\:to-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }
      }

      @include it('2xl\:to-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }
      }

      @include it('2xl\:to-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }
      }

      @include it('2xl\:to-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }
      }

      @include it('2xl\:to-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }
      }

      @include it('2xl\:to-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:to-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }
      }

      @include it('2xl\:to-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }
      }

      @include it('2xl\:to-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }
      }

      @include it('2xl\:to-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }
      }

      @include it('2xl\:to-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }
      }

      @include it('2xl\:to-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }
      }

      @include it('2xl\:to-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }
      }

      @include it('2xl\:to-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }
      }

      @include it('2xl\:to-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }
      }

      @include it('2xl\:to-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }
      }

      @include it('2xl\:to-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }
      }

      @include it('2xl\:to-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:to-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }
      }

      @include it('2xl\:to-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:to-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f5f5f5);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }
      }

      @include it('2xl\:to-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:to-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }
      }

      @include it('2xl\:to-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }
      }

      @include it('2xl\:to-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }
      }

      @include it('2xl\:to-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }
      }

      @include it('2xl\:to-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }
      }

      @include it('2xl\:to-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }
      }

      @include it('2xl\:to-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }
      }

      @include it('2xl\:to-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }
      }

      @include it('2xl\:to-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }
      }

      @include it('2xl\:to-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }
      }

      @include it('2xl\:to-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }
      }

      @include it('2xl\:to-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:to-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }
      }

      @include it('2xl\:to-red-50') {
        @include assert {
          @include output {
            @include \2xl\:to-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }
      }

      @include it('2xl\:to-red-100') {
        @include assert {
          @include output {
            @include \2xl\:to-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }
      }

      @include it('2xl\:to-red-200') {
        @include assert {
          @include output {
            @include \2xl\:to-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }
      }

      @include it('2xl\:to-red-300') {
        @include assert {
          @include output {
            @include \2xl\:to-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }
      }

      @include it('2xl\:to-red-400') {
        @include assert {
          @include output {
            @include \2xl\:to-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }
      }

      @include it('2xl\:to-red-500') {
        @include assert {
          @include output {
            @include \2xl\:to-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }
      }

      @include it('2xl\:to-red-600') {
        @include assert {
          @include output {
            @include \2xl\:to-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }
      }

      @include it('2xl\:to-red-700') {
        @include assert {
          @include output {
            @include \2xl\:to-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }
      }

      @include it('2xl\:to-red-800') {
        @include assert {
          @include output {
            @include \2xl\:to-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }
      }

      @include it('2xl\:to-red-900') {
        @include assert {
          @include output {
            @include \2xl\:to-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }
      }

      @include it('2xl\:to-red-950') {
        @include assert {
          @include output {
            @include \2xl\:to-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }
      }

      @include it('2xl\:to-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }
      }

      @include it('2xl\:to-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }
      }

      @include it('2xl\:to-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }
      }

      @include it('2xl\:to-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }
      }

      @include it('2xl\:to-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }
      }

      @include it('2xl\:to-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }
      }

      @include it('2xl\:to-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }
      }

      @include it('2xl\:to-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }
      }

      @include it('2xl\:to-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }
      }

      @include it('2xl\:to-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }
      }

      @include it('2xl\:to-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:to-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }
      }

      @include it('2xl\:to-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }
      }

      @include it('2xl\:to-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }
      }

      @include it('2xl\:to-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }
      }

      @include it('2xl\:to-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }
      }

      @include it('2xl\:to-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }
      }

      @include it('2xl\:to-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }
      }

      @include it('2xl\:to-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }
      }

      @include it('2xl\:to-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }
      }

      @include it('2xl\:to-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }
      }

      @include it('2xl\:to-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }
      }

      @include it('2xl\:to-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:to-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }
      }

      @include it('2xl\:to-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:to-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }
      }

      @include it('2xl\:to-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }
      }

      @include it('2xl\:to-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }
      }

      @include it('2xl\:to-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }
      }

      @include it('2xl\:to-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }
      }

      @include it('2xl\:to-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }
      }

      @include it('2xl\:to-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }
      }

      @include it('2xl\:to-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }
      }

      @include it('2xl\:to-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }
      }

      @include it('2xl\:to-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }
      }

      @include it('2xl\:to-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }
      }

      @include it('2xl\:to-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:to-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }
      }

      @include it('2xl\:to-green-50') {
        @include assert {
          @include output {
            @include \2xl\:to-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }
      }

      @include it('2xl\:to-green-100') {
        @include assert {
          @include output {
            @include \2xl\:to-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }
      }

      @include it('2xl\:to-green-200') {
        @include assert {
          @include output {
            @include \2xl\:to-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }
      }

      @include it('2xl\:to-green-300') {
        @include assert {
          @include output {
            @include \2xl\:to-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }
      }

      @include it('2xl\:to-green-400') {
        @include assert {
          @include output {
            @include \2xl\:to-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }
      }

      @include it('2xl\:to-green-500') {
        @include assert {
          @include output {
            @include \2xl\:to-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }
      }

      @include it('2xl\:to-green-600') {
        @include assert {
          @include output {
            @include \2xl\:to-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }
      }

      @include it('2xl\:to-green-700') {
        @include assert {
          @include output {
            @include \2xl\:to-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }
      }

      @include it('2xl\:to-green-800') {
        @include assert {
          @include output {
            @include \2xl\:to-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }
      }

      @include it('2xl\:to-green-900') {
        @include assert {
          @include output {
            @include \2xl\:to-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }
      }

      @include it('2xl\:to-green-950') {
        @include assert {
          @include output {
            @include \2xl\:to-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }
      }

      @include it('2xl\:to-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:to-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }
      }

      @include it('2xl\:to-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }
      }

      @include it('2xl\:to-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }
      }

      @include it('2xl\:to-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }
      }

      @include it('2xl\:to-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }
      }

      @include it('2xl\:to-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }
      }

      @include it('2xl\:to-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }
      }

      @include it('2xl\:to-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }
      }

      @include it('2xl\:to-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }
      }

      @include it('2xl\:to-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }
      }

      @include it('2xl\:to-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }
      }

      @include it('2xl\:to-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:to-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }
      }

      @include it('2xl\:to-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:to-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }
      }

      @include it('2xl\:to-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }
      }

      @include it('2xl\:to-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }
      }

      @include it('2xl\:to-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }
      }

      @include it('2xl\:to-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }
      }

      @include it('2xl\:to-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }
      }

      @include it('2xl\:to-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }
      }

      @include it('2xl\:to-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }
      }

      @include it('2xl\:to-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }
      }

      @include it('2xl\:to-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }
      }

      @include it('2xl\:to-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }
      }

      @include it('2xl\:to-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:to-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }
      }

      @include it('2xl\:to-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }
      }

      @include it('2xl\:to-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }
      }

      @include it('2xl\:to-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }
      }

      @include it('2xl\:to-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }
      }

      @include it('2xl\:to-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }
      }

      @include it('2xl\:to-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }
      }

      @include it('2xl\:to-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }
      }

      @include it('2xl\:to-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }
      }

      @include it('2xl\:to-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }
      }

      @include it('2xl\:to-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }
      }

      @include it('2xl\:to-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:to-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }
      }

      @include it('2xl\:to-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:to-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }
      }

      @include it('2xl\:to-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }
      }

      @include it('2xl\:to-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }
      }

      @include it('2xl\:to-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }
      }

      @include it('2xl\:to-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }
      }

      @include it('2xl\:to-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }
      }

      @include it('2xl\:to-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }
      }

      @include it('2xl\:to-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }
      }

      @include it('2xl\:to-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }
      }

      @include it('2xl\:to-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }
      }

      @include it('2xl\:to-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }
      }

      @include it('2xl\:to-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:to-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }
      }

      @include it('2xl\:to-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }
      }

      @include it('2xl\:to-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }
      }

      @include it('2xl\:to-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }
      }

      @include it('2xl\:to-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }
      }

      @include it('2xl\:to-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }
      }

      @include it('2xl\:to-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }
      }

      @include it('2xl\:to-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }
      }

      @include it('2xl\:to-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }
      }

      @include it('2xl\:to-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }
      }

      @include it('2xl\:to-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }
      }

      @include it('2xl\:to-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:to-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }
      }

      @include it('2xl\:to-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:to-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }
      }

      @include it('2xl\:to-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }
      }

      @include it('2xl\:to-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }
      }

      @include it('2xl\:to-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }
      }

      @include it('2xl\:to-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }
      }

      @include it('2xl\:to-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }
      }

      @include it('2xl\:to-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }
      }

      @include it('2xl\:to-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }
      }

      @include it('2xl\:to-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }
      }

      @include it('2xl\:to-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }
      }

      @include it('2xl\:to-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }
      }

      @include it('2xl\:to-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:to-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }
      }

      @include it('2xl\:to-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }
      }

      @include it('2xl\:to-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }
      }

      @include it('2xl\:to-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }
      }

      @include it('2xl\:to-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }
      }

      @include it('2xl\:to-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }
      }

      @include it('2xl\:to-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }
      }

      @include it('2xl\:to-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }
      }

      @include it('2xl\:to-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }
      }

      @include it('2xl\:to-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }
      }

      @include it('2xl\:to-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }
      }

      @include it('2xl\:to-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:to-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }
      }

      @include it('2xl\:to-0\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-0\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 0%);
            }
          }
        }
      }

      @include it('2xl\:to-5\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-5\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 5%);
            }
          }
        }
      }

      @include it('2xl\:to-10\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-10\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 10%);
            }
          }
        }
      }

      @include it('2xl\:to-15\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-15\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 15%);
            }
          }
        }
      }

      @include it('2xl\:to-20\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-20\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 20%);
            }
          }
        }
      }

      @include it('2xl\:to-25\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-25\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 25%);
            }
          }
        }
      }

      @include it('2xl\:to-30\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-30\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 30%);
            }
          }
        }
      }

      @include it('2xl\:to-35\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-35\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 35%);
            }
          }
        }
      }

      @include it('2xl\:to-40\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-40\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 40%);
            }
          }
        }
      }

      @include it('2xl\:to-45\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-45\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 45%);
            }
          }
        }
      }

      @include it('2xl\:to-50\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-50\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 50%);
            }
          }
        }
      }

      @include it('2xl\:to-55\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-55\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 55%);
            }
          }
        }
      }

      @include it('2xl\:to-60\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-60\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 60%);
            }
          }
        }
      }

      @include it('2xl\:to-65\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-65\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 65%);
            }
          }
        }
      }

      @include it('2xl\:to-70\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-70\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 70%);
            }
          }
        }
      }

      @include it('2xl\:to-75\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-75\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 75%);
            }
          }
        }
      }

      @include it('2xl\:to-80\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-80\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 80%);
            }
          }
        }
      }

      @include it('2xl\:to-85\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-85\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 85%);
            }
          }
        }
      }

      @include it('2xl\:to-90\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-90\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 90%);
            }
          }
        }
      }

      @include it('2xl\:to-95\%') {
        @include assert {
          @include output {
            @include \2xl\:to-white;
            @include \2xl\:to-95\%;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff);
            }

            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #fff 95%);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('from-(#243c5a)') {
        @include assert {
          @include output {
            @include from-(#243c5a);
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #243c5a, transparent);
          }
        }
      }

      @include it('via-(#243c5a)') {
        @include assert {
          @include output {
            @include via-(#243c5a);
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a, transparent);
          }
        }
      }

      @include it('to-(#243c5a)') {
        @include assert {
          @include output {
            @include to-(#243c5a);
            @include reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a);
          }
        }
      }

      @include it('sm\:from-(#243c5a)') {
        @include assert {
          @include output {
            @include sm\:from-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #243c5a, transparent);
            }
          }
        }
      }

      @include it('sm\:via-(#243c5a)') {
        @include assert {
          @include output {
            @include sm\:via-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(
                null,
                #fff,
                #243c5a,
                transparent
              );
            }
          }
        }
      }

      @include it('sm\:to-(#243c5a)') {
        @include assert {
          @include output {
            @include sm\:to-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-image: linear-gradient(null, #fff, #243c5a);
            }
          }
        }
      }

      @include it('md\:from-(#243c5a)') {
        @include assert {
          @include output {
            @include md\:from-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #243c5a, transparent);
            }
          }
        }
      }

      @include it('md\:via-(#243c5a)') {
        @include assert {
          @include output {
            @include md\:via-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(
                null,
                #fff,
                #243c5a,
                transparent
              );
            }
          }
        }
      }

      @include it('md\:to-(#243c5a)') {
        @include assert {
          @include output {
            @include md\:to-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-image: linear-gradient(null, #fff, #243c5a);
            }
          }
        }
      }

      @include it('lg\:from-(#243c5a)') {
        @include assert {
          @include output {
            @include lg\:from-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #243c5a, transparent);
            }
          }
        }
      }

      @include it('lg\:via-(#243c5a)') {
        @include assert {
          @include output {
            @include lg\:via-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(
                null,
                #fff,
                #243c5a,
                transparent
              );
            }
          }
        }
      }

      @include it('lg\:to-(#243c5a)') {
        @include assert {
          @include output {
            @include lg\:to-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-image: linear-gradient(null, #fff, #243c5a);
            }
          }
        }
      }

      @include it('xl\:from-(#243c5a)') {
        @include assert {
          @include output {
            @include xl\:from-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #243c5a, transparent);
            }
          }
        }
      }

      @include it('xl\:via-(#243c5a)') {
        @include assert {
          @include output {
            @include xl\:via-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #243c5a,
                transparent
              );
            }
          }
        }
      }

      @include it('xl\:to-(#243c5a)') {
        @include assert {
          @include output {
            @include xl\:to-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-image: linear-gradient(null, #fff, #243c5a);
            }
          }
        }
      }

      @include it('2xl\:from-(#243c5a)') {
        @include assert {
          @include output {
            @include \2xl\:from-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #243c5a, transparent);
            }
          }
        }
      }

      @include it('2xl\:via-(#243c5a)') {
        @include assert {
          @include output {
            @include \2xl\:via-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(
                null,
                #fff,
                #243c5a,
                transparent
              );
            }
          }
        }
      }

      @include it('2xl\:to-(#243c5a)') {
        @include assert {
          @include output {
            @include \2xl\:to-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-image: linear-gradient(null, #fff, #243c5a);
            }
          }
        }
      }
    }
  }
}
