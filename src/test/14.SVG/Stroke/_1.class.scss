@use '../../mode0' as *;
@use 'true' as *;

@include describe('14.SVG') {
  @include describe('stroke') {
    @include describe('Basic') {
      @include it('stroke-inherit') {
        @include assert {
          @include output {
            @include stroke-inherit;
            @include reset;
          }

          @include expect {
            stroke: inherit;
          }
        }
      }

      @include it('stroke-current') {
        @include assert {
          @include output {
            @include stroke-current;
            @include reset;
          }

          @include expect {
            stroke: currentColor;
          }
        }
      }

      @include it('stroke-transparent') {
        @include assert {
          @include output {
            @include stroke-transparent;
            @include reset;
          }

          @include expect {
            stroke: transparent;
          }
        }
      }

      @include it('stroke-slate-100') {
        @include assert {
          @include output {
            @include stroke-slate-100;
            @include reset;
          }

          @include expect {
            stroke: #f1f5f9;
          }
        }
      }

      @include it('stroke-slate-200') {
        @include assert {
          @include output {
            @include stroke-slate-200;
            @include reset;
          }

          @include expect {
            stroke: #e2e8f0;
          }
        }
      }

      @include it('stroke-slate-300') {
        @include assert {
          @include output {
            @include stroke-slate-300;
            @include reset;
          }

          @include expect {
            stroke: #cbd5e1;
          }
        }
      }

      @include it('stroke-slate-400') {
        @include assert {
          @include output {
            @include stroke-slate-400;
            @include reset;
          }

          @include expect {
            stroke: #94a3b8;
          }
        }
      }

      @include it('stroke-slate-500') {
        @include assert {
          @include output {
            @include stroke-slate-500;
            @include reset;
          }

          @include expect {
            stroke: #64748b;
          }
        }
      }

      @include it('stroke-slate-600') {
        @include assert {
          @include output {
            @include stroke-slate-600;
            @include reset;
          }

          @include expect {
            stroke: #475569;
          }
        }
      }

      @include it('stroke-slate-700') {
        @include assert {
          @include output {
            @include stroke-slate-700;
            @include reset;
          }

          @include expect {
            stroke: #334155;
          }
        }
      }

      @include it('stroke-slate-800') {
        @include assert {
          @include output {
            @include stroke-slate-800;
            @include reset;
          }

          @include expect {
            stroke: #1e293b;
          }
        }
      }

      @include it('stroke-slate-900') {
        @include assert {
          @include output {
            @include stroke-slate-900;
            @include reset;
          }

          @include expect {
            stroke: #0f172a;
          }
        }
      }

      @include it('stroke-slate-950') {
        @include assert {
          @include output {
            @include stroke-slate-950;
            @include reset;
          }

          @include expect {
            stroke: #020617;
          }
        }
      }

      @include it('stroke-gray-50') {
        @include assert {
          @include output {
            @include stroke-gray-50;
            @include reset;
          }

          @include expect {
            stroke: #f9fafb;
          }
        }
      }

      @include it('stroke-gray-100') {
        @include assert {
          @include output {
            @include stroke-gray-100;
            @include reset;
          }

          @include expect {
            stroke: #f3f4f6;
          }
        }
      }

      @include it('stroke-gray-200') {
        @include assert {
          @include output {
            @include stroke-gray-200;
            @include reset;
          }

          @include expect {
            stroke: #e5e7eb;
          }
        }
      }

      @include it('stroke-gray-300') {
        @include assert {
          @include output {
            @include stroke-gray-300;
            @include reset;
          }

          @include expect {
            stroke: #d1d5db;
          }
        }
      }

      @include it('stroke-gray-400') {
        @include assert {
          @include output {
            @include stroke-gray-400;
            @include reset;
          }

          @include expect {
            stroke: #9ca3af;
          }
        }
      }

      @include it('stroke-gray-500') {
        @include assert {
          @include output {
            @include stroke-gray-500;
            @include reset;
          }

          @include expect {
            stroke: #6b7280;
          }
        }
      }

      @include it('stroke-gray-600') {
        @include assert {
          @include output {
            @include stroke-gray-600;
            @include reset;
          }

          @include expect {
            stroke: #4b5563;
          }
        }
      }

      @include it('stroke-gray-700') {
        @include assert {
          @include output {
            @include stroke-gray-700;
            @include reset;
          }

          @include expect {
            stroke: #374151;
          }
        }
      }

      @include it('stroke-gray-800') {
        @include assert {
          @include output {
            @include stroke-gray-800;
            @include reset;
          }

          @include expect {
            stroke: #1f2937;
          }
        }
      }

      @include it('stroke-gray-900') {
        @include assert {
          @include output {
            @include stroke-gray-900;
            @include reset;
          }

          @include expect {
            stroke: #111827;
          }
        }
      }

      @include it('stroke-gray-950') {
        @include assert {
          @include output {
            @include stroke-gray-950;
            @include reset;
          }

          @include expect {
            stroke: #030712;
          }
        }
      }

      @include it('stroke-zinc-50') {
        @include assert {
          @include output {
            @include stroke-zinc-50;
            @include reset;
          }

          @include expect {
            stroke: #fafafa;
          }
        }
      }

      @include it('stroke-zinc-100') {
        @include assert {
          @include output {
            @include stroke-zinc-100;
            @include reset;
          }

          @include expect {
            stroke: #f4f4f5;
          }
        }
      }

      @include it('stroke-zinc-200') {
        @include assert {
          @include output {
            @include stroke-zinc-200;
            @include reset;
          }

          @include expect {
            stroke: #e4e4e7;
          }
        }
      }

      @include it('stroke-zinc-300') {
        @include assert {
          @include output {
            @include stroke-zinc-300;
            @include reset;
          }

          @include expect {
            stroke: #d4d4d8;
          }
        }
      }

      @include it('stroke-zinc-400') {
        @include assert {
          @include output {
            @include stroke-zinc-400;
            @include reset;
          }

          @include expect {
            stroke: #a1a1aa;
          }
        }
      }

      @include it('stroke-zinc-500') {
        @include assert {
          @include output {
            @include stroke-zinc-500;
            @include reset;
          }

          @include expect {
            stroke: #71717a;
          }
        }
      }

      @include it('stroke-zinc-600') {
        @include assert {
          @include output {
            @include stroke-zinc-600;
            @include reset;
          }

          @include expect {
            stroke: #52525b;
          }
        }
      }

      @include it('stroke-zinc-700') {
        @include assert {
          @include output {
            @include stroke-zinc-700;
            @include reset;
          }

          @include expect {
            stroke: #3f3f46;
          }
        }
      }

      @include it('stroke-zinc-800') {
        @include assert {
          @include output {
            @include stroke-zinc-800;
            @include reset;
          }

          @include expect {
            stroke: #27272a;
          }
        }
      }

      @include it('stroke-zinc-900') {
        @include assert {
          @include output {
            @include stroke-zinc-900;
            @include reset;
          }

          @include expect {
            stroke: #18181b;
          }
        }
      }

      @include it('stroke-zinc-950') {
        @include assert {
          @include output {
            @include stroke-zinc-950;
            @include reset;
          }

          @include expect {
            stroke: #09090b;
          }
        }
      }

      @include it('stroke-neutral-50') {
        @include assert {
          @include output {
            @include stroke-neutral-50;
            @include reset;
          }

          @include expect {
            stroke: #fafafa;
          }
        }
      }

      @include it('stroke-neutral-100') {
        @include assert {
          @include output {
            @include stroke-neutral-100;
            @include reset;
          }

          @include expect {
            stroke: #f5f5f5;
          }
        }
      }

      @include it('stroke-neutral-200') {
        @include assert {
          @include output {
            @include stroke-neutral-200;
            @include reset;
          }

          @include expect {
            stroke: #e5e5e5;
          }
        }
      }

      @include it('stroke-neutral-300') {
        @include assert {
          @include output {
            @include stroke-neutral-300;
            @include reset;
          }

          @include expect {
            stroke: #d4d4d4;
          }
        }
      }

      @include it('stroke-neutral-400') {
        @include assert {
          @include output {
            @include stroke-neutral-400;
            @include reset;
          }

          @include expect {
            stroke: #a3a3a3;
          }
        }
      }

      @include it('stroke-neutral-500') {
        @include assert {
          @include output {
            @include stroke-neutral-500;
            @include reset;
          }

          @include expect {
            stroke: #737373;
          }
        }
      }

      @include it('stroke-neutral-600') {
        @include assert {
          @include output {
            @include stroke-neutral-600;
            @include reset;
          }

          @include expect {
            stroke: #525252;
          }
        }
      }

      @include it('stroke-neutral-700') {
        @include assert {
          @include output {
            @include stroke-neutral-700;
            @include reset;
          }

          @include expect {
            stroke: #404040;
          }
        }
      }

      @include it('stroke-neutral-800') {
        @include assert {
          @include output {
            @include stroke-neutral-800;
            @include reset;
          }

          @include expect {
            stroke: #262626;
          }
        }
      }

      @include it('stroke-neutral-900') {
        @include assert {
          @include output {
            @include stroke-neutral-900;
            @include reset;
          }

          @include expect {
            stroke: #171717;
          }
        }
      }

      @include it('stroke-neutral-950') {
        @include assert {
          @include output {
            @include stroke-neutral-950;
            @include reset;
          }

          @include expect {
            stroke: #0a0a0a;
          }
        }
      }

      @include it('stroke-stone-50') {
        @include assert {
          @include output {
            @include stroke-stone-50;
            @include reset;
          }

          @include expect {
            stroke: #fafaf9;
          }
        }
      }

      @include it('stroke-stone-100') {
        @include assert {
          @include output {
            @include stroke-stone-100;
            @include reset;
          }

          @include expect {
            stroke: #f5f5f4;
          }
        }
      }

      @include it('stroke-stone-200') {
        @include assert {
          @include output {
            @include stroke-stone-200;
            @include reset;
          }

          @include expect {
            stroke: #e7e5e4;
          }
        }
      }

      @include it('stroke-stone-300') {
        @include assert {
          @include output {
            @include stroke-stone-300;
            @include reset;
          }

          @include expect {
            stroke: #d6d3d1;
          }
        }
      }

      @include it('stroke-stone-400') {
        @include assert {
          @include output {
            @include stroke-stone-400;
            @include reset;
          }

          @include expect {
            stroke: #a8a29e;
          }
        }
      }

      @include it('stroke-stone-500') {
        @include assert {
          @include output {
            @include stroke-stone-500;
            @include reset;
          }

          @include expect {
            stroke: #78716c;
          }
        }
      }

      @include it('stroke-stone-600') {
        @include assert {
          @include output {
            @include stroke-stone-600;
            @include reset;
          }

          @include expect {
            stroke: #57534e;
          }
        }
      }

      @include it('stroke-stone-700') {
        @include assert {
          @include output {
            @include stroke-stone-700;
            @include reset;
          }

          @include expect {
            stroke: #44403c;
          }
        }
      }

      @include it('stroke-stone-800') {
        @include assert {
          @include output {
            @include stroke-stone-800;
            @include reset;
          }

          @include expect {
            stroke: #292524;
          }
        }
      }

      @include it('stroke-stone-900') {
        @include assert {
          @include output {
            @include stroke-stone-900;
            @include reset;
          }

          @include expect {
            stroke: #1c1917;
          }
        }
      }

      @include it('stroke-stone-950') {
        @include assert {
          @include output {
            @include stroke-stone-950;
            @include reset;
          }

          @include expect {
            stroke: #0c0a09;
          }
        }
      }

      @include it('stroke-red-50') {
        @include assert {
          @include output {
            @include stroke-red-50;
            @include reset;
          }

          @include expect {
            stroke: #fef2f2;
          }
        }
      }

      @include it('stroke-red-100') {
        @include assert {
          @include output {
            @include stroke-red-100;
            @include reset;
          }

          @include expect {
            stroke: #fee2e2;
          }
        }
      }

      @include it('stroke-red-200') {
        @include assert {
          @include output {
            @include stroke-red-200;
            @include reset;
          }

          @include expect {
            stroke: #fecaca;
          }
        }
      }

      @include it('stroke-red-300') {
        @include assert {
          @include output {
            @include stroke-red-300;
            @include reset;
          }

          @include expect {
            stroke: #fca5a5;
          }
        }
      }

      @include it('stroke-red-400') {
        @include assert {
          @include output {
            @include stroke-red-400;
            @include reset;
          }

          @include expect {
            stroke: #f87171;
          }
        }
      }

      @include it('stroke-red-500') {
        @include assert {
          @include output {
            @include stroke-red-500;
            @include reset;
          }

          @include expect {
            stroke: #ef4444;
          }
        }
      }

      @include it('stroke-red-600') {
        @include assert {
          @include output {
            @include stroke-red-600;
            @include reset;
          }

          @include expect {
            stroke: #dc2626;
          }
        }
      }

      @include it('stroke-red-700') {
        @include assert {
          @include output {
            @include stroke-red-700;
            @include reset;
          }

          @include expect {
            stroke: #b91c1c;
          }
        }
      }

      @include it('stroke-red-800') {
        @include assert {
          @include output {
            @include stroke-red-800;
            @include reset;
          }

          @include expect {
            stroke: #991b1b;
          }
        }
      }

      @include it('stroke-red-900') {
        @include assert {
          @include output {
            @include stroke-red-900;
            @include reset;
          }

          @include expect {
            stroke: #7f1d1d;
          }
        }
      }

      @include it('stroke-red-950') {
        @include assert {
          @include output {
            @include stroke-red-950;
            @include reset;
          }

          @include expect {
            stroke: #450a0a;
          }
        }
      }

      @include it('stroke-orange-50') {
        @include assert {
          @include output {
            @include stroke-orange-50;
            @include reset;
          }

          @include expect {
            stroke: #fff7ed;
          }
        }
      }

      @include it('stroke-orange-100') {
        @include assert {
          @include output {
            @include stroke-orange-100;
            @include reset;
          }

          @include expect {
            stroke: #ffedd5;
          }
        }
      }

      @include it('stroke-orange-200') {
        @include assert {
          @include output {
            @include stroke-orange-200;
            @include reset;
          }

          @include expect {
            stroke: #fed7aa;
          }
        }
      }

      @include it('stroke-orange-300') {
        @include assert {
          @include output {
            @include stroke-orange-300;
            @include reset;
          }

          @include expect {
            stroke: #fdba74;
          }
        }
      }

      @include it('stroke-orange-400') {
        @include assert {
          @include output {
            @include stroke-orange-400;
            @include reset;
          }

          @include expect {
            stroke: #fb923c;
          }
        }
      }

      @include it('stroke-orange-500') {
        @include assert {
          @include output {
            @include stroke-orange-500;
            @include reset;
          }

          @include expect {
            stroke: #f97316;
          }
        }
      }

      @include it('stroke-orange-600') {
        @include assert {
          @include output {
            @include stroke-orange-600;
            @include reset;
          }

          @include expect {
            stroke: #ea580c;
          }
        }
      }

      @include it('stroke-orange-700') {
        @include assert {
          @include output {
            @include stroke-orange-700;
            @include reset;
          }

          @include expect {
            stroke: #c2410c;
          }
        }
      }

      @include it('stroke-orange-800') {
        @include assert {
          @include output {
            @include stroke-orange-800;
            @include reset;
          }

          @include expect {
            stroke: #9a3412;
          }
        }
      }

      @include it('stroke-orange-900') {
        @include assert {
          @include output {
            @include stroke-orange-900;
            @include reset;
          }

          @include expect {
            stroke: #7c2d12;
          }
        }
      }

      @include it('stroke-orange-950') {
        @include assert {
          @include output {
            @include stroke-orange-950;
            @include reset;
          }

          @include expect {
            stroke: #431407;
          }
        }
      }

      @include it('stroke-amber-50') {
        @include assert {
          @include output {
            @include stroke-amber-50;
            @include reset;
          }

          @include expect {
            stroke: #fffbeb;
          }
        }
      }

      @include it('stroke-amber-100') {
        @include assert {
          @include output {
            @include stroke-amber-100;
            @include reset;
          }

          @include expect {
            stroke: #fef3c7;
          }
        }
      }

      @include it('stroke-amber-200') {
        @include assert {
          @include output {
            @include stroke-amber-200;
            @include reset;
          }

          @include expect {
            stroke: #fde68a;
          }
        }
      }

      @include it('stroke-amber-300') {
        @include assert {
          @include output {
            @include stroke-amber-300;
            @include reset;
          }

          @include expect {
            stroke: #fcd34d;
          }
        }
      }

      @include it('stroke-amber-400') {
        @include assert {
          @include output {
            @include stroke-amber-400;
            @include reset;
          }

          @include expect {
            stroke: #fbbf24;
          }
        }
      }

      @include it('stroke-amber-500') {
        @include assert {
          @include output {
            @include stroke-amber-500;
            @include reset;
          }

          @include expect {
            stroke: #f59e0b;
          }
        }
      }

      @include it('stroke-amber-600') {
        @include assert {
          @include output {
            @include stroke-amber-600;
            @include reset;
          }

          @include expect {
            stroke: #d97706;
          }
        }
      }

      @include it('stroke-amber-700') {
        @include assert {
          @include output {
            @include stroke-amber-700;
            @include reset;
          }

          @include expect {
            stroke: #b45309;
          }
        }
      }

      @include it('stroke-amber-800') {
        @include assert {
          @include output {
            @include stroke-amber-800;
            @include reset;
          }

          @include expect {
            stroke: #92400e;
          }
        }
      }

      @include it('stroke-amber-900') {
        @include assert {
          @include output {
            @include stroke-amber-900;
            @include reset;
          }

          @include expect {
            stroke: #78350f;
          }
        }
      }

      @include it('stroke-amber-950') {
        @include assert {
          @include output {
            @include stroke-amber-950;
            @include reset;
          }

          @include expect {
            stroke: #451a03;
          }
        }
      }

      @include it('stroke-yellow-50') {
        @include assert {
          @include output {
            @include stroke-yellow-50;
            @include reset;
          }

          @include expect {
            stroke: #fefce8;
          }
        }
      }

      @include it('stroke-yellow-100') {
        @include assert {
          @include output {
            @include stroke-yellow-100;
            @include reset;
          }

          @include expect {
            stroke: #fef9c3;
          }
        }
      }

      @include it('stroke-yellow-200') {
        @include assert {
          @include output {
            @include stroke-yellow-200;
            @include reset;
          }

          @include expect {
            stroke: #fef08a;
          }
        }
      }

      @include it('stroke-yellow-300') {
        @include assert {
          @include output {
            @include stroke-yellow-300;
            @include reset;
          }

          @include expect {
            stroke: #fde047;
          }
        }
      }

      @include it('stroke-yellow-400') {
        @include assert {
          @include output {
            @include stroke-yellow-400;
            @include reset;
          }

          @include expect {
            stroke: #facc15;
          }
        }
      }

      @include it('stroke-yellow-500') {
        @include assert {
          @include output {
            @include stroke-yellow-500;
            @include reset;
          }

          @include expect {
            stroke: #eab308;
          }
        }
      }

      @include it('stroke-yellow-600') {
        @include assert {
          @include output {
            @include stroke-yellow-600;
            @include reset;
          }

          @include expect {
            stroke: #ca8a04;
          }
        }
      }

      @include it('stroke-yellow-700') {
        @include assert {
          @include output {
            @include stroke-yellow-700;
            @include reset;
          }

          @include expect {
            stroke: #a16207;
          }
        }
      }

      @include it('stroke-yellow-800') {
        @include assert {
          @include output {
            @include stroke-yellow-800;
            @include reset;
          }

          @include expect {
            stroke: #854d0e;
          }
        }
      }

      @include it('stroke-yellow-900') {
        @include assert {
          @include output {
            @include stroke-yellow-900;
            @include reset;
          }

          @include expect {
            stroke: #713f12;
          }
        }
      }

      @include it('stroke-yellow-950') {
        @include assert {
          @include output {
            @include stroke-yellow-950;
            @include reset;
          }

          @include expect {
            stroke: #422006;
          }
        }
      }

      @include it('stroke-lime-50') {
        @include assert {
          @include output {
            @include stroke-lime-50;
            @include reset;
          }

          @include expect {
            stroke: #f7fee7;
          }
        }
      }

      @include it('stroke-lime-100') {
        @include assert {
          @include output {
            @include stroke-lime-100;
            @include reset;
          }

          @include expect {
            stroke: #ecfccb;
          }
        }
      }

      @include it('stroke-lime-200') {
        @include assert {
          @include output {
            @include stroke-lime-200;
            @include reset;
          }

          @include expect {
            stroke: #d9f99d;
          }
        }
      }

      @include it('stroke-lime-300') {
        @include assert {
          @include output {
            @include stroke-lime-300;
            @include reset;
          }

          @include expect {
            stroke: #bef264;
          }
        }
      }

      @include it('stroke-lime-400') {
        @include assert {
          @include output {
            @include stroke-lime-400;
            @include reset;
          }

          @include expect {
            stroke: #a3e635;
          }
        }
      }

      @include it('stroke-lime-500') {
        @include assert {
          @include output {
            @include stroke-lime-500;
            @include reset;
          }

          @include expect {
            stroke: #84cc16;
          }
        }
      }

      @include it('stroke-lime-600') {
        @include assert {
          @include output {
            @include stroke-lime-600;
            @include reset;
          }

          @include expect {
            stroke: #65a30d;
          }
        }
      }

      @include it('stroke-lime-700') {
        @include assert {
          @include output {
            @include stroke-lime-700;
            @include reset;
          }

          @include expect {
            stroke: #4d7c0f;
          }
        }
      }

      @include it('stroke-lime-800') {
        @include assert {
          @include output {
            @include stroke-lime-800;
            @include reset;
          }

          @include expect {
            stroke: #3f6212;
          }
        }
      }

      @include it('stroke-lime-900') {
        @include assert {
          @include output {
            @include stroke-lime-900;
            @include reset;
          }

          @include expect {
            stroke: #365314;
          }
        }
      }

      @include it('stroke-lime-950') {
        @include assert {
          @include output {
            @include stroke-lime-950;
            @include reset;
          }

          @include expect {
            stroke: #1a2e05;
          }
        }
      }

      @include it('stroke-green-50') {
        @include assert {
          @include output {
            @include stroke-green-50;
            @include reset;
          }

          @include expect {
            stroke: #f0fdf4;
          }
        }
      }

      @include it('stroke-green-100') {
        @include assert {
          @include output {
            @include stroke-green-100;
            @include reset;
          }

          @include expect {
            stroke: #dcfce7;
          }
        }
      }

      @include it('stroke-green-200') {
        @include assert {
          @include output {
            @include stroke-green-200;
            @include reset;
          }

          @include expect {
            stroke: #bbf7d0;
          }
        }
      }

      @include it('stroke-green-300') {
        @include assert {
          @include output {
            @include stroke-green-300;
            @include reset;
          }

          @include expect {
            stroke: #86efac;
          }
        }
      }

      @include it('stroke-green-400') {
        @include assert {
          @include output {
            @include stroke-green-400;
            @include reset;
          }

          @include expect {
            stroke: #4ade80;
          }
        }
      }

      @include it('stroke-green-500') {
        @include assert {
          @include output {
            @include stroke-green-500;
            @include reset;
          }

          @include expect {
            stroke: #22c55e;
          }
        }
      }

      @include it('stroke-green-600') {
        @include assert {
          @include output {
            @include stroke-green-600;
            @include reset;
          }

          @include expect {
            stroke: #16a34a;
          }
        }
      }

      @include it('stroke-green-700') {
        @include assert {
          @include output {
            @include stroke-green-700;
            @include reset;
          }

          @include expect {
            stroke: #15803d;
          }
        }
      }

      @include it('stroke-green-800') {
        @include assert {
          @include output {
            @include stroke-green-800;
            @include reset;
          }

          @include expect {
            stroke: #166534;
          }
        }
      }

      @include it('stroke-green-900') {
        @include assert {
          @include output {
            @include stroke-green-900;
            @include reset;
          }

          @include expect {
            stroke: #14532d;
          }
        }
      }

      @include it('stroke-green-950') {
        @include assert {
          @include output {
            @include stroke-green-950;
            @include reset;
          }

          @include expect {
            stroke: #052e16;
          }
        }
      }

      @include it('stroke-emerald-50') {
        @include assert {
          @include output {
            @include stroke-emerald-50;
            @include reset;
          }

          @include expect {
            stroke: #ecfdf5;
          }
        }
      }

      @include it('stroke-emerald-100') {
        @include assert {
          @include output {
            @include stroke-emerald-100;
            @include reset;
          }

          @include expect {
            stroke: #d1fae5;
          }
        }
      }

      @include it('stroke-emerald-200') {
        @include assert {
          @include output {
            @include stroke-emerald-200;
            @include reset;
          }

          @include expect {
            stroke: #a7f3d0;
          }
        }
      }

      @include it('stroke-emerald-300') {
        @include assert {
          @include output {
            @include stroke-emerald-300;
            @include reset;
          }

          @include expect {
            stroke: #6ee7b7;
          }
        }
      }

      @include it('stroke-emerald-400') {
        @include assert {
          @include output {
            @include stroke-emerald-400;
            @include reset;
          }

          @include expect {
            stroke: #34d399;
          }
        }
      }

      @include it('stroke-emerald-500') {
        @include assert {
          @include output {
            @include stroke-emerald-500;
            @include reset;
          }

          @include expect {
            stroke: #10b981;
          }
        }
      }

      @include it('stroke-emerald-600') {
        @include assert {
          @include output {
            @include stroke-emerald-600;
            @include reset;
          }

          @include expect {
            stroke: #059669;
          }
        }
      }

      @include it('stroke-emerald-700') {
        @include assert {
          @include output {
            @include stroke-emerald-700;
            @include reset;
          }

          @include expect {
            stroke: #047857;
          }
        }
      }

      @include it('stroke-emerald-800') {
        @include assert {
          @include output {
            @include stroke-emerald-800;
            @include reset;
          }

          @include expect {
            stroke: #065f46;
          }
        }
      }

      @include it('stroke-emerald-900') {
        @include assert {
          @include output {
            @include stroke-emerald-900;
            @include reset;
          }

          @include expect {
            stroke: #064e3b;
          }
        }
      }

      @include it('stroke-emerald-950') {
        @include assert {
          @include output {
            @include stroke-emerald-950;
            @include reset;
          }

          @include expect {
            stroke: #022c22;
          }
        }
      }

      @include it('stroke-teal-50') {
        @include assert {
          @include output {
            @include stroke-teal-50;
            @include reset;
          }

          @include expect {
            stroke: #f0fdfa;
          }
        }
      }

      @include it('stroke-teal-100') {
        @include assert {
          @include output {
            @include stroke-teal-100;
            @include reset;
          }

          @include expect {
            stroke: #ccfbf1;
          }
        }
      }

      @include it('stroke-teal-200') {
        @include assert {
          @include output {
            @include stroke-teal-200;
            @include reset;
          }

          @include expect {
            stroke: #99f6e4;
          }
        }
      }

      @include it('stroke-teal-300') {
        @include assert {
          @include output {
            @include stroke-teal-300;
            @include reset;
          }

          @include expect {
            stroke: #5eead4;
          }
        }
      }

      @include it('stroke-teal-400') {
        @include assert {
          @include output {
            @include stroke-teal-400;
            @include reset;
          }

          @include expect {
            stroke: #2dd4bf;
          }
        }
      }

      @include it('stroke-teal-500') {
        @include assert {
          @include output {
            @include stroke-teal-500;
            @include reset;
          }

          @include expect {
            stroke: #14b8a6;
          }
        }
      }

      @include it('stroke-teal-600') {
        @include assert {
          @include output {
            @include stroke-teal-600;
            @include reset;
          }

          @include expect {
            stroke: #0d9488;
          }
        }
      }

      @include it('stroke-teal-700') {
        @include assert {
          @include output {
            @include stroke-teal-700;
            @include reset;
          }

          @include expect {
            stroke: #0f766e;
          }
        }
      }

      @include it('stroke-teal-800') {
        @include assert {
          @include output {
            @include stroke-teal-800;
            @include reset;
          }

          @include expect {
            stroke: #115e59;
          }
        }
      }

      @include it('stroke-teal-900') {
        @include assert {
          @include output {
            @include stroke-teal-900;
            @include reset;
          }

          @include expect {
            stroke: #134e4a;
          }
        }
      }

      @include it('stroke-teal-950') {
        @include assert {
          @include output {
            @include stroke-teal-950;
            @include reset;
          }

          @include expect {
            stroke: #042f2e;
          }
        }
      }

      @include it('stroke-cyan-50') {
        @include assert {
          @include output {
            @include stroke-cyan-50;
            @include reset;
          }

          @include expect {
            stroke: #ecfeff;
          }
        }
      }

      @include it('stroke-cyan-100') {
        @include assert {
          @include output {
            @include stroke-cyan-100;
            @include reset;
          }

          @include expect {
            stroke: #cffafe;
          }
        }
      }

      @include it('stroke-cyan-200') {
        @include assert {
          @include output {
            @include stroke-cyan-200;
            @include reset;
          }

          @include expect {
            stroke: #a5f3fc;
          }
        }
      }

      @include it('stroke-cyan-300') {
        @include assert {
          @include output {
            @include stroke-cyan-300;
            @include reset;
          }

          @include expect {
            stroke: #67e8f9;
          }
        }
      }

      @include it('stroke-cyan-400') {
        @include assert {
          @include output {
            @include stroke-cyan-400;
            @include reset;
          }

          @include expect {
            stroke: #22d3ee;
          }
        }
      }

      @include it('stroke-cyan-500') {
        @include assert {
          @include output {
            @include stroke-cyan-500;
            @include reset;
          }

          @include expect {
            stroke: #06b6d4;
          }
        }
      }

      @include it('stroke-cyan-600') {
        @include assert {
          @include output {
            @include stroke-cyan-600;
            @include reset;
          }

          @include expect {
            stroke: #0891b2;
          }
        }
      }

      @include it('stroke-cyan-700') {
        @include assert {
          @include output {
            @include stroke-cyan-700;
            @include reset;
          }

          @include expect {
            stroke: #0e7490;
          }
        }
      }

      @include it('stroke-cyan-800') {
        @include assert {
          @include output {
            @include stroke-cyan-800;
            @include reset;
          }

          @include expect {
            stroke: #155e75;
          }
        }
      }

      @include it('stroke-cyan-900') {
        @include assert {
          @include output {
            @include stroke-cyan-900;
            @include reset;
          }

          @include expect {
            stroke: #164e63;
          }
        }
      }

      @include it('stroke-cyan-950') {
        @include assert {
          @include output {
            @include stroke-cyan-950;
            @include reset;
          }

          @include expect {
            stroke: #083344;
          }
        }
      }

      @include it('stroke-sky-50') {
        @include assert {
          @include output {
            @include stroke-sky-50;
            @include reset;
          }

          @include expect {
            stroke: #f0f9ff;
          }
        }
      }

      @include it('stroke-sky-100') {
        @include assert {
          @include output {
            @include stroke-sky-100;
            @include reset;
          }

          @include expect {
            stroke: #e0f2fe;
          }
        }
      }

      @include it('stroke-sky-200') {
        @include assert {
          @include output {
            @include stroke-sky-200;
            @include reset;
          }

          @include expect {
            stroke: #bae6fd;
          }
        }
      }

      @include it('stroke-sky-300') {
        @include assert {
          @include output {
            @include stroke-sky-300;
            @include reset;
          }

          @include expect {
            stroke: #7dd3fc;
          }
        }
      }

      @include it('stroke-sky-400') {
        @include assert {
          @include output {
            @include stroke-sky-400;
            @include reset;
          }

          @include expect {
            stroke: #38bdf8;
          }
        }
      }

      @include it('stroke-sky-500') {
        @include assert {
          @include output {
            @include stroke-sky-500;
            @include reset;
          }

          @include expect {
            stroke: #0ea5e9;
          }
        }
      }

      @include it('stroke-sky-600') {
        @include assert {
          @include output {
            @include stroke-sky-600;
            @include reset;
          }

          @include expect {
            stroke: #0284c7;
          }
        }
      }

      @include it('stroke-sky-700') {
        @include assert {
          @include output {
            @include stroke-sky-700;
            @include reset;
          }

          @include expect {
            stroke: #0369a1;
          }
        }
      }

      @include it('stroke-sky-800') {
        @include assert {
          @include output {
            @include stroke-sky-800;
            @include reset;
          }

          @include expect {
            stroke: #075985;
          }
        }
      }

      @include it('stroke-sky-900') {
        @include assert {
          @include output {
            @include stroke-sky-900;
            @include reset;
          }

          @include expect {
            stroke: #0c4a6e;
          }
        }
      }

      @include it('stroke-sky-950') {
        @include assert {
          @include output {
            @include stroke-sky-950;
            @include reset;
          }

          @include expect {
            stroke: #082f49;
          }
        }
      }

      @include it('stroke-blue-50') {
        @include assert {
          @include output {
            @include stroke-blue-50;
            @include reset;
          }

          @include expect {
            stroke: #eff6ff;
          }
        }
      }

      @include it('stroke-blue-100') {
        @include assert {
          @include output {
            @include stroke-blue-100;
            @include reset;
          }

          @include expect {
            stroke: #dbeafe;
          }
        }
      }

      @include it('stroke-blue-200') {
        @include assert {
          @include output {
            @include stroke-blue-200;
            @include reset;
          }

          @include expect {
            stroke: #bfdbfe;
          }
        }
      }

      @include it('stroke-blue-300') {
        @include assert {
          @include output {
            @include stroke-blue-300;
            @include reset;
          }

          @include expect {
            stroke: #93c5fd;
          }
        }
      }

      @include it('stroke-blue-400') {
        @include assert {
          @include output {
            @include stroke-blue-400;
            @include reset;
          }

          @include expect {
            stroke: #60a5fa;
          }
        }
      }

      @include it('stroke-blue-500') {
        @include assert {
          @include output {
            @include stroke-blue-500;
            @include reset;
          }

          @include expect {
            stroke: #3b82f6;
          }
        }
      }

      @include it('stroke-blue-600') {
        @include assert {
          @include output {
            @include stroke-blue-600;
            @include reset;
          }

          @include expect {
            stroke: #2563eb;
          }
        }
      }

      @include it('stroke-blue-700') {
        @include assert {
          @include output {
            @include stroke-blue-700;
            @include reset;
          }

          @include expect {
            stroke: #1d4ed8;
          }
        }
      }

      @include it('stroke-blue-800') {
        @include assert {
          @include output {
            @include stroke-blue-800;
            @include reset;
          }

          @include expect {
            stroke: #1e40af;
          }
        }
      }

      @include it('stroke-blue-900') {
        @include assert {
          @include output {
            @include stroke-blue-900;
            @include reset;
          }

          @include expect {
            stroke: #1e3a8a;
          }
        }
      }

      @include it('stroke-blue-950') {
        @include assert {
          @include output {
            @include stroke-blue-950;
            @include reset;
          }

          @include expect {
            stroke: #172554;
          }
        }
      }

      @include it('stroke-indigo-50') {
        @include assert {
          @include output {
            @include stroke-indigo-50;
            @include reset;
          }

          @include expect {
            stroke: #eef2ff;
          }
        }
      }

      @include it('stroke-indigo-100') {
        @include assert {
          @include output {
            @include stroke-indigo-100;
            @include reset;
          }

          @include expect {
            stroke: #e0e7ff;
          }
        }
      }

      @include it('stroke-indigo-200') {
        @include assert {
          @include output {
            @include stroke-indigo-200;
            @include reset;
          }

          @include expect {
            stroke: #c7d2fe;
          }
        }
      }

      @include it('stroke-indigo-300') {
        @include assert {
          @include output {
            @include stroke-indigo-300;
            @include reset;
          }

          @include expect {
            stroke: #a5b4fc;
          }
        }
      }

      @include it('stroke-indigo-400') {
        @include assert {
          @include output {
            @include stroke-indigo-400;
            @include reset;
          }

          @include expect {
            stroke: #818cf8;
          }
        }
      }

      @include it('stroke-indigo-500') {
        @include assert {
          @include output {
            @include stroke-indigo-500;
            @include reset;
          }

          @include expect {
            stroke: #6366f1;
          }
        }
      }

      @include it('stroke-indigo-600') {
        @include assert {
          @include output {
            @include stroke-indigo-600;
            @include reset;
          }

          @include expect {
            stroke: #4f46e5;
          }
        }
      }

      @include it('stroke-indigo-700') {
        @include assert {
          @include output {
            @include stroke-indigo-700;
            @include reset;
          }

          @include expect {
            stroke: #4338ca;
          }
        }
      }

      @include it('stroke-indigo-800') {
        @include assert {
          @include output {
            @include stroke-indigo-800;
            @include reset;
          }

          @include expect {
            stroke: #3730a3;
          }
        }
      }

      @include it('stroke-indigo-900') {
        @include assert {
          @include output {
            @include stroke-indigo-900;
            @include reset;
          }

          @include expect {
            stroke: #312e81;
          }
        }
      }

      @include it('stroke-indigo-950') {
        @include assert {
          @include output {
            @include stroke-indigo-950;
            @include reset;
          }

          @include expect {
            stroke: #1e1b4b;
          }
        }
      }

      @include it('stroke-violet-50') {
        @include assert {
          @include output {
            @include stroke-violet-50;
            @include reset;
          }

          @include expect {
            stroke: #f5f3ff;
          }
        }
      }

      @include it('stroke-violet-100') {
        @include assert {
          @include output {
            @include stroke-violet-100;
            @include reset;
          }

          @include expect {
            stroke: #ede9fe;
          }
        }
      }

      @include it('stroke-violet-200') {
        @include assert {
          @include output {
            @include stroke-violet-200;
            @include reset;
          }

          @include expect {
            stroke: #ddd6fe;
          }
        }
      }

      @include it('stroke-violet-300') {
        @include assert {
          @include output {
            @include stroke-violet-300;
            @include reset;
          }

          @include expect {
            stroke: #c4b5fd;
          }
        }
      }

      @include it('stroke-violet-400') {
        @include assert {
          @include output {
            @include stroke-violet-400;
            @include reset;
          }

          @include expect {
            stroke: #a78bfa;
          }
        }
      }

      @include it('stroke-violet-500') {
        @include assert {
          @include output {
            @include stroke-violet-500;
            @include reset;
          }

          @include expect {
            stroke: #8b5cf6;
          }
        }
      }

      @include it('stroke-violet-600') {
        @include assert {
          @include output {
            @include stroke-violet-600;
            @include reset;
          }

          @include expect {
            stroke: #7c3aed;
          }
        }
      }

      @include it('stroke-violet-700') {
        @include assert {
          @include output {
            @include stroke-violet-700;
            @include reset;
          }

          @include expect {
            stroke: #6d28d9;
          }
        }
      }

      @include it('stroke-violet-800') {
        @include assert {
          @include output {
            @include stroke-violet-800;
            @include reset;
          }

          @include expect {
            stroke: #5b21b6;
          }
        }
      }

      @include it('stroke-violet-900') {
        @include assert {
          @include output {
            @include stroke-violet-900;
            @include reset;
          }

          @include expect {
            stroke: #4c1d95;
          }
        }
      }

      @include it('stroke-violet-950') {
        @include assert {
          @include output {
            @include stroke-violet-950;
            @include reset;
          }

          @include expect {
            stroke: #2e1065;
          }
        }
      }

      @include it('stroke-purple-50') {
        @include assert {
          @include output {
            @include stroke-purple-50;
            @include reset;
          }

          @include expect {
            stroke: #faf5ff;
          }
        }
      }

      @include it('stroke-purple-100') {
        @include assert {
          @include output {
            @include stroke-purple-100;
            @include reset;
          }

          @include expect {
            stroke: #f3e8ff;
          }
        }
      }

      @include it('stroke-purple-200') {
        @include assert {
          @include output {
            @include stroke-purple-200;
            @include reset;
          }

          @include expect {
            stroke: #e9d5ff;
          }
        }
      }

      @include it('stroke-purple-300') {
        @include assert {
          @include output {
            @include stroke-purple-300;
            @include reset;
          }

          @include expect {
            stroke: #d8b4fe;
          }
        }
      }

      @include it('stroke-purple-400') {
        @include assert {
          @include output {
            @include stroke-purple-400;
            @include reset;
          }

          @include expect {
            stroke: #c084fc;
          }
        }
      }

      @include it('stroke-purple-500') {
        @include assert {
          @include output {
            @include stroke-purple-500;
            @include reset;
          }

          @include expect {
            stroke: #a855f7;
          }
        }
      }

      @include it('stroke-purple-600') {
        @include assert {
          @include output {
            @include stroke-purple-600;
            @include reset;
          }

          @include expect {
            stroke: #9333ea;
          }
        }
      }

      @include it('stroke-purple-700') {
        @include assert {
          @include output {
            @include stroke-purple-700;
            @include reset;
          }

          @include expect {
            stroke: #7e22ce;
          }
        }
      }

      @include it('stroke-purple-800') {
        @include assert {
          @include output {
            @include stroke-purple-800;
            @include reset;
          }

          @include expect {
            stroke: #6b21a8;
          }
        }
      }

      @include it('stroke-purple-900') {
        @include assert {
          @include output {
            @include stroke-purple-900;
            @include reset;
          }

          @include expect {
            stroke: #581c87;
          }
        }
      }

      @include it('stroke-purple-950') {
        @include assert {
          @include output {
            @include stroke-purple-950;
            @include reset;
          }

          @include expect {
            stroke: #3b0764;
          }
        }
      }

      @include it('stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            stroke: #fdf4ff;
          }
        }
      }

      @include it('stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            stroke: #fae8ff;
          }
        }
      }

      @include it('stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            stroke: #f5d0fe;
          }
        }
      }

      @include it('stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            stroke: #f0abfc;
          }
        }
      }

      @include it('stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            stroke: #e879f9;
          }
        }
      }

      @include it('stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            stroke: #d946ef;
          }
        }
      }

      @include it('stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            stroke: #c026d3;
          }
        }
      }

      @include it('stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            stroke: #a21caf;
          }
        }
      }

      @include it('stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            stroke: #86198f;
          }
        }
      }

      @include it('stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            stroke: #701a75;
          }
        }
      }

      @include it('stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            stroke: #4a044e;
          }
        }
      }

      @include it('stroke-pink-50') {
        @include assert {
          @include output {
            @include stroke-pink-50;
            @include reset;
          }

          @include expect {
            stroke: #fdf2f8;
          }
        }
      }

      @include it('stroke-pink-100') {
        @include assert {
          @include output {
            @include stroke-pink-100;
            @include reset;
          }

          @include expect {
            stroke: #fce7f3;
          }
        }
      }

      @include it('stroke-pink-200') {
        @include assert {
          @include output {
            @include stroke-pink-200;
            @include reset;
          }

          @include expect {
            stroke: #fbcfe8;
          }
        }
      }

      @include it('stroke-pink-300') {
        @include assert {
          @include output {
            @include stroke-pink-300;
            @include reset;
          }

          @include expect {
            stroke: #f9a8d4;
          }
        }
      }

      @include it('stroke-pink-400') {
        @include assert {
          @include output {
            @include stroke-pink-400;
            @include reset;
          }

          @include expect {
            stroke: #f472b6;
          }
        }
      }

      @include it('stroke-pink-500') {
        @include assert {
          @include output {
            @include stroke-pink-500;
            @include reset;
          }

          @include expect {
            stroke: #ec4899;
          }
        }
      }

      @include it('stroke-pink-600') {
        @include assert {
          @include output {
            @include stroke-pink-600;
            @include reset;
          }

          @include expect {
            stroke: #db2777;
          }
        }
      }

      @include it('stroke-pink-700') {
        @include assert {
          @include output {
            @include stroke-pink-700;
            @include reset;
          }

          @include expect {
            stroke: #be185d;
          }
        }
      }

      @include it('stroke-pink-800') {
        @include assert {
          @include output {
            @include stroke-pink-800;
            @include reset;
          }

          @include expect {
            stroke: #9d174d;
          }
        }
      }

      @include it('stroke-pink-900') {
        @include assert {
          @include output {
            @include stroke-pink-900;
            @include reset;
          }

          @include expect {
            stroke: #831843;
          }
        }
      }

      @include it('stroke-pink-950') {
        @include assert {
          @include output {
            @include stroke-pink-950;
            @include reset;
          }

          @include expect {
            stroke: #500724;
          }
        }
      }

      @include it('stroke-rose-50') {
        @include assert {
          @include output {
            @include stroke-rose-50;
            @include reset;
          }

          @include expect {
            stroke: #fff1f2;
          }
        }
      }

      @include it('stroke-rose-100') {
        @include assert {
          @include output {
            @include stroke-rose-100;
            @include reset;
          }

          @include expect {
            stroke: #ffe4e6;
          }
        }
      }

      @include it('stroke-rose-200') {
        @include assert {
          @include output {
            @include stroke-rose-200;
            @include reset;
          }

          @include expect {
            stroke: #fecdd3;
          }
        }
      }

      @include it('stroke-rose-300') {
        @include assert {
          @include output {
            @include stroke-rose-300;
            @include reset;
          }

          @include expect {
            stroke: #fda4af;
          }
        }
      }

      @include it('stroke-rose-400') {
        @include assert {
          @include output {
            @include stroke-rose-400;
            @include reset;
          }

          @include expect {
            stroke: #fb7185;
          }
        }
      }

      @include it('stroke-rose-500') {
        @include assert {
          @include output {
            @include stroke-rose-500;
            @include reset;
          }

          @include expect {
            stroke: #f43f5e;
          }
        }
      }

      @include it('stroke-rose-600') {
        @include assert {
          @include output {
            @include stroke-rose-600;
            @include reset;
          }

          @include expect {
            stroke: #e11d48;
          }
        }
      }

      @include it('stroke-rose-700') {
        @include assert {
          @include output {
            @include stroke-rose-700;
            @include reset;
          }

          @include expect {
            stroke: #be123c;
          }
        }
      }

      @include it('stroke-rose-800') {
        @include assert {
          @include output {
            @include stroke-rose-800;
            @include reset;
          }

          @include expect {
            stroke: #9f1239;
          }
        }
      }

      @include it('stroke-rose-900') {
        @include assert {
          @include output {
            @include stroke-rose-900;
            @include reset;
          }

          @include expect {
            stroke: #881337;
          }
        }
      }

      @include it('stroke-rose-950') {
        @include assert {
          @include output {
            @include stroke-rose-950;
            @include reset;
          }

          @include expect {
            stroke: #4c0519;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it(sm\:'stroke-inherit') {
        @include assert {
          @include output {
            @include sm\:stroke-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: inherit;
            }
          }
        }
      }

      @include it(sm\:'stroke-current') {
        @include assert {
          @include output {
            @include sm\:stroke-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: currentColor;
            }
          }
        }
      }

      @include it(sm\:'stroke-transparent') {
        @include assert {
          @include output {
            @include sm\:stroke-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: transparent;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-100') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f1f5f9;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-200') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e2e8f0;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-300') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #cbd5e1;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-400') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #94a3b8;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-500') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #64748b;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-600') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #475569;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-700') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #334155;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-800') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1e293b;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-900') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0f172a;
            }
          }
        }
      }

      @include it(sm\:'stroke-slate-950') {
        @include assert {
          @include output {
            @include sm\:stroke-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #020617;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-50') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f9fafb;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-100') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f3f4f6;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-200') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e5e7eb;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-300') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d1d5db;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-400') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #9ca3af;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-500') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #6b7280;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-600') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4b5563;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-700') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #374151;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-800') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1f2937;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-900') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #111827;
            }
          }
        }
      }

      @include it(sm\:'stroke-gray-950') {
        @include assert {
          @include output {
            @include sm\:stroke-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #030712;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-50') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-100') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f4f4f5;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-200') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e4e4e7;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-300') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d4d4d8;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-400') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a1a1aa;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-500') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #71717a;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-600') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #52525b;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-700') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #3f3f46;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-800') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #27272a;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-900') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #18181b;
            }
          }
        }
      }

      @include it(sm\:'stroke-zinc-950') {
        @include assert {
          @include output {
            @include sm\:stroke-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #09090b;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-50') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-100') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f5f5f5;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-200') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e5e5e5;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-300') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d4d4d4;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-400') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a3a3a3;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-500') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #737373;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-600') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #525252;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-700') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #404040;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-800') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #262626;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-900') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #171717;
            }
          }
        }
      }

      @include it(sm\:'stroke-neutral-950') {
        @include assert {
          @include output {
            @include sm\:stroke-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0a0a0a;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-50') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fafaf9;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-100') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f5f5f4;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-200') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e7e5e4;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-300') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d6d3d1;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-400') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a8a29e;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-500') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #78716c;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-600') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #57534e;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-700') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #44403c;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-800') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #292524;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-900') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1c1917;
            }
          }
        }
      }

      @include it(sm\:'stroke-stone-950') {
        @include assert {
          @include output {
            @include sm\:stroke-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0c0a09;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-50') {
        @include assert {
          @include output {
            @include sm\:stroke-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fef2f2;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-100') {
        @include assert {
          @include output {
            @include sm\:stroke-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fee2e2;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-200') {
        @include assert {
          @include output {
            @include sm\:stroke-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fecaca;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-300') {
        @include assert {
          @include output {
            @include sm\:stroke-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fca5a5;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-400') {
        @include assert {
          @include output {
            @include sm\:stroke-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f87171;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-500') {
        @include assert {
          @include output {
            @include sm\:stroke-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ef4444;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-600') {
        @include assert {
          @include output {
            @include sm\:stroke-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #dc2626;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-700') {
        @include assert {
          @include output {
            @include sm\:stroke-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #b91c1c;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-800') {
        @include assert {
          @include output {
            @include sm\:stroke-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #991b1b;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-900') {
        @include assert {
          @include output {
            @include sm\:stroke-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #7f1d1d;
            }
          }
        }
      }

      @include it(sm\:'stroke-red-950') {
        @include assert {
          @include output {
            @include sm\:stroke-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #450a0a;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-50') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fff7ed;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-100') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ffedd5;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-200') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fed7aa;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-300') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fdba74;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-400') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fb923c;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-500') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f97316;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-600') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ea580c;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-700') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #c2410c;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-800') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #9a3412;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-900') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #7c2d12;
            }
          }
        }
      }

      @include it(sm\:'stroke-orange-950') {
        @include assert {
          @include output {
            @include sm\:stroke-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #431407;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-50') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fffbeb;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-100') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fef3c7;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-200') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fde68a;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-300') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fcd34d;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-400') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fbbf24;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-500') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f59e0b;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-600') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d97706;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-700') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #b45309;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-800') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #92400e;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-900') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #78350f;
            }
          }
        }
      }

      @include it(sm\:'stroke-amber-950') {
        @include assert {
          @include output {
            @include sm\:stroke-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #451a03;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-50') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fefce8;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-100') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fef9c3;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-200') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fef08a;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-300') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fde047;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-400') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #facc15;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-500') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #eab308;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-600') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ca8a04;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-700') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a16207;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-800') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #854d0e;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-900') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #713f12;
            }
          }
        }
      }

      @include it(sm\:'stroke-yellow-950') {
        @include assert {
          @include output {
            @include sm\:stroke-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #422006;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-50') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f7fee7;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-100') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ecfccb;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-200') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d9f99d;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-300') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #bef264;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-400') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a3e635;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-500') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #84cc16;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-600') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #65a30d;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-700') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4d7c0f;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-800') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #3f6212;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-900') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #365314;
            }
          }
        }
      }

      @include it(sm\:'stroke-lime-950') {
        @include assert {
          @include output {
            @include sm\:stroke-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1a2e05;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-50') {
        @include assert {
          @include output {
            @include sm\:stroke-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f0fdf4;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-100') {
        @include assert {
          @include output {
            @include sm\:stroke-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #dcfce7;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-200') {
        @include assert {
          @include output {
            @include sm\:stroke-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #bbf7d0;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-300') {
        @include assert {
          @include output {
            @include sm\:stroke-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #86efac;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-400') {
        @include assert {
          @include output {
            @include sm\:stroke-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4ade80;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-500') {
        @include assert {
          @include output {
            @include sm\:stroke-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #22c55e;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-600') {
        @include assert {
          @include output {
            @include sm\:stroke-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #16a34a;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-700') {
        @include assert {
          @include output {
            @include sm\:stroke-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #15803d;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-800') {
        @include assert {
          @include output {
            @include sm\:stroke-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #166534;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-900') {
        @include assert {
          @include output {
            @include sm\:stroke-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #14532d;
            }
          }
        }
      }

      @include it(sm\:'stroke-green-950') {
        @include assert {
          @include output {
            @include sm\:stroke-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #052e16;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-50') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ecfdf5;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-100') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d1fae5;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-200') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a7f3d0;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-300') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #6ee7b7;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-400') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #34d399;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-500') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #10b981;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-600') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #059669;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-700') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #047857;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-800') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #065f46;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-900') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #064e3b;
            }
          }
        }
      }

      @include it(sm\:'stroke-emerald-950') {
        @include assert {
          @include output {
            @include sm\:stroke-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #022c22;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-50') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f0fdfa;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-100') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ccfbf1;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-200') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #99f6e4;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-300') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #5eead4;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-400') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #2dd4bf;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-500') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #14b8a6;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-600') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0d9488;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-700') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0f766e;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-800') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #115e59;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-900') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #134e4a;
            }
          }
        }
      }

      @include it(sm\:'stroke-teal-950') {
        @include assert {
          @include output {
            @include sm\:stroke-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #042f2e;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-50') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ecfeff;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-100') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #cffafe;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-200') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a5f3fc;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-300') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #67e8f9;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-400') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #22d3ee;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-500') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #06b6d4;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-600') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0891b2;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-700') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0e7490;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-800') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #155e75;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-900') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #164e63;
            }
          }
        }
      }

      @include it(sm\:'stroke-cyan-950') {
        @include assert {
          @include output {
            @include sm\:stroke-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #083344;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-50') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f0f9ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-100') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e0f2fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-200') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #bae6fd;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-300') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #7dd3fc;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-400') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #38bdf8;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-500') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0ea5e9;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-600') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0284c7;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-700') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0369a1;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-800') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #075985;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-900') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #0c4a6e;
            }
          }
        }
      }

      @include it(sm\:'stroke-sky-950') {
        @include assert {
          @include output {
            @include sm\:stroke-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #082f49;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-50') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #eff6ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-100') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #dbeafe;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-200') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #bfdbfe;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-300') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #93c5fd;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-400') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #60a5fa;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-500') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #3b82f6;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-600') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #2563eb;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-700') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1d4ed8;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-800') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1e40af;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-900') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1e3a8a;
            }
          }
        }
      }

      @include it(sm\:'stroke-blue-950') {
        @include assert {
          @include output {
            @include sm\:stroke-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #172554;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-50') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #eef2ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-100') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e0e7ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-200') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #c7d2fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-300') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a5b4fc;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-400') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #818cf8;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-500') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #6366f1;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-600') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4f46e5;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-700') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4338ca;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-800') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #3730a3;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-900') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #312e81;
            }
          }
        }
      }

      @include it(sm\:'stroke-indigo-950') {
        @include assert {
          @include output {
            @include sm\:stroke-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #1e1b4b;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-50') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f5f3ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-100') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ede9fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-200') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ddd6fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-300') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #c4b5fd;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-400') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a78bfa;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-500') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #8b5cf6;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-600') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #7c3aed;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-700') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #6d28d9;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-800') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #5b21b6;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-900') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4c1d95;
            }
          }
        }
      }

      @include it(sm\:'stroke-violet-950') {
        @include assert {
          @include output {
            @include sm\:stroke-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #2e1065;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-50') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #faf5ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-100') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f3e8ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-200') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e9d5ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-300') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d8b4fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-400') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #c084fc;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-500') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a855f7;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-600') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #9333ea;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-700') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #7e22ce;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-800') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #6b21a8;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-900') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #581c87;
            }
          }
        }
      }

      @include it(sm\:'stroke-purple-950') {
        @include assert {
          @include output {
            @include sm\:stroke-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #3b0764;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fdf4ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fae8ff;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f5d0fe;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f0abfc;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e879f9;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #d946ef;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #c026d3;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #a21caf;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #86198f;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #701a75;
            }
          }
        }
      }

      @include it(sm\:'stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4a044e;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-50') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fdf2f8;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-100') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fce7f3;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-200') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fbcfe8;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-300') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f9a8d4;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-400') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f472b6;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-500') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ec4899;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-600') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #db2777;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-700') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #be185d;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-800') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #9d174d;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-900') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #831843;
            }
          }
        }
      }

      @include it(sm\:'stroke-pink-950') {
        @include assert {
          @include output {
            @include sm\:stroke-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #500724;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-50') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fff1f2;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-100') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #ffe4e6;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-200') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fecdd3;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-300') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fda4af;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-400') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #fb7185;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-500') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #f43f5e;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-600') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #e11d48;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-700') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #be123c;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-800') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #9f1239;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-900') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #881337;
            }
          }
        }
      }

      @include it(sm\:'stroke-rose-950') {
        @include assert {
          @include output {
            @include sm\:stroke-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #4c0519;
            }
          }
        }
      }

      @include it(md\:'stroke-inherit') {
        @include assert {
          @include output {
            @include md\:stroke-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: inherit;
            }
          }
        }
      }

      @include it(md\:'stroke-current') {
        @include assert {
          @include output {
            @include md\:stroke-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: currentColor;
            }
          }
        }
      }

      @include it(md\:'stroke-transparent') {
        @include assert {
          @include output {
            @include md\:stroke-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: transparent;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-100') {
        @include assert {
          @include output {
            @include md\:stroke-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f1f5f9;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-200') {
        @include assert {
          @include output {
            @include md\:stroke-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e2e8f0;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-300') {
        @include assert {
          @include output {
            @include md\:stroke-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #cbd5e1;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-400') {
        @include assert {
          @include output {
            @include md\:stroke-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #94a3b8;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-500') {
        @include assert {
          @include output {
            @include md\:stroke-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #64748b;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-600') {
        @include assert {
          @include output {
            @include md\:stroke-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #475569;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-700') {
        @include assert {
          @include output {
            @include md\:stroke-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #334155;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-800') {
        @include assert {
          @include output {
            @include md\:stroke-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1e293b;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-900') {
        @include assert {
          @include output {
            @include md\:stroke-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0f172a;
            }
          }
        }
      }

      @include it(md\:'stroke-slate-950') {
        @include assert {
          @include output {
            @include md\:stroke-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #020617;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-50') {
        @include assert {
          @include output {
            @include md\:stroke-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f9fafb;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-100') {
        @include assert {
          @include output {
            @include md\:stroke-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f3f4f6;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-200') {
        @include assert {
          @include output {
            @include md\:stroke-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e5e7eb;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-300') {
        @include assert {
          @include output {
            @include md\:stroke-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d1d5db;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-400') {
        @include assert {
          @include output {
            @include md\:stroke-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #9ca3af;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-500') {
        @include assert {
          @include output {
            @include md\:stroke-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #6b7280;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-600') {
        @include assert {
          @include output {
            @include md\:stroke-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4b5563;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-700') {
        @include assert {
          @include output {
            @include md\:stroke-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #374151;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-800') {
        @include assert {
          @include output {
            @include md\:stroke-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1f2937;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-900') {
        @include assert {
          @include output {
            @include md\:stroke-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #111827;
            }
          }
        }
      }

      @include it(md\:'stroke-gray-950') {
        @include assert {
          @include output {
            @include md\:stroke-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #030712;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-50') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-100') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f4f4f5;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-200') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e4e4e7;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-300') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d4d4d8;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-400') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a1a1aa;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-500') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #71717a;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-600') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #52525b;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-700') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #3f3f46;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-800') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #27272a;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-900') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #18181b;
            }
          }
        }
      }

      @include it(md\:'stroke-zinc-950') {
        @include assert {
          @include output {
            @include md\:stroke-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #09090b;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-50') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-100') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f5f5f5;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-200') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e5e5e5;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-300') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d4d4d4;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-400') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a3a3a3;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-500') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #737373;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-600') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #525252;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-700') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #404040;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-800') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #262626;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-900') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #171717;
            }
          }
        }
      }

      @include it(md\:'stroke-neutral-950') {
        @include assert {
          @include output {
            @include md\:stroke-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0a0a0a;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-50') {
        @include assert {
          @include output {
            @include md\:stroke-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fafaf9;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-100') {
        @include assert {
          @include output {
            @include md\:stroke-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f5f5f4;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-200') {
        @include assert {
          @include output {
            @include md\:stroke-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e7e5e4;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-300') {
        @include assert {
          @include output {
            @include md\:stroke-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d6d3d1;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-400') {
        @include assert {
          @include output {
            @include md\:stroke-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a8a29e;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-500') {
        @include assert {
          @include output {
            @include md\:stroke-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #78716c;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-600') {
        @include assert {
          @include output {
            @include md\:stroke-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #57534e;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-700') {
        @include assert {
          @include output {
            @include md\:stroke-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #44403c;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-800') {
        @include assert {
          @include output {
            @include md\:stroke-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #292524;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-900') {
        @include assert {
          @include output {
            @include md\:stroke-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1c1917;
            }
          }
        }
      }

      @include it(md\:'stroke-stone-950') {
        @include assert {
          @include output {
            @include md\:stroke-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0c0a09;
            }
          }
        }
      }

      @include it(md\:'stroke-red-50') {
        @include assert {
          @include output {
            @include md\:stroke-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fef2f2;
            }
          }
        }
      }

      @include it(md\:'stroke-red-100') {
        @include assert {
          @include output {
            @include md\:stroke-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fee2e2;
            }
          }
        }
      }

      @include it(md\:'stroke-red-200') {
        @include assert {
          @include output {
            @include md\:stroke-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fecaca;
            }
          }
        }
      }

      @include it(md\:'stroke-red-300') {
        @include assert {
          @include output {
            @include md\:stroke-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fca5a5;
            }
          }
        }
      }

      @include it(md\:'stroke-red-400') {
        @include assert {
          @include output {
            @include md\:stroke-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f87171;
            }
          }
        }
      }

      @include it(md\:'stroke-red-500') {
        @include assert {
          @include output {
            @include md\:stroke-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ef4444;
            }
          }
        }
      }

      @include it(md\:'stroke-red-600') {
        @include assert {
          @include output {
            @include md\:stroke-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #dc2626;
            }
          }
        }
      }

      @include it(md\:'stroke-red-700') {
        @include assert {
          @include output {
            @include md\:stroke-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #b91c1c;
            }
          }
        }
      }

      @include it(md\:'stroke-red-800') {
        @include assert {
          @include output {
            @include md\:stroke-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #991b1b;
            }
          }
        }
      }

      @include it(md\:'stroke-red-900') {
        @include assert {
          @include output {
            @include md\:stroke-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #7f1d1d;
            }
          }
        }
      }

      @include it(md\:'stroke-red-950') {
        @include assert {
          @include output {
            @include md\:stroke-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #450a0a;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-50') {
        @include assert {
          @include output {
            @include md\:stroke-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fff7ed;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-100') {
        @include assert {
          @include output {
            @include md\:stroke-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ffedd5;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-200') {
        @include assert {
          @include output {
            @include md\:stroke-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fed7aa;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-300') {
        @include assert {
          @include output {
            @include md\:stroke-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fdba74;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-400') {
        @include assert {
          @include output {
            @include md\:stroke-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fb923c;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-500') {
        @include assert {
          @include output {
            @include md\:stroke-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f97316;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-600') {
        @include assert {
          @include output {
            @include md\:stroke-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ea580c;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-700') {
        @include assert {
          @include output {
            @include md\:stroke-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #c2410c;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-800') {
        @include assert {
          @include output {
            @include md\:stroke-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #9a3412;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-900') {
        @include assert {
          @include output {
            @include md\:stroke-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #7c2d12;
            }
          }
        }
      }

      @include it(md\:'stroke-orange-950') {
        @include assert {
          @include output {
            @include md\:stroke-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #431407;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-50') {
        @include assert {
          @include output {
            @include md\:stroke-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fffbeb;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-100') {
        @include assert {
          @include output {
            @include md\:stroke-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fef3c7;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-200') {
        @include assert {
          @include output {
            @include md\:stroke-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fde68a;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-300') {
        @include assert {
          @include output {
            @include md\:stroke-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fcd34d;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-400') {
        @include assert {
          @include output {
            @include md\:stroke-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fbbf24;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-500') {
        @include assert {
          @include output {
            @include md\:stroke-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f59e0b;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-600') {
        @include assert {
          @include output {
            @include md\:stroke-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d97706;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-700') {
        @include assert {
          @include output {
            @include md\:stroke-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #b45309;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-800') {
        @include assert {
          @include output {
            @include md\:stroke-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #92400e;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-900') {
        @include assert {
          @include output {
            @include md\:stroke-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #78350f;
            }
          }
        }
      }

      @include it(md\:'stroke-amber-950') {
        @include assert {
          @include output {
            @include md\:stroke-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #451a03;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-50') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fefce8;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-100') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fef9c3;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-200') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fef08a;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-300') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fde047;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-400') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #facc15;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-500') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #eab308;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-600') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ca8a04;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-700') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a16207;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-800') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #854d0e;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-900') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #713f12;
            }
          }
        }
      }

      @include it(md\:'stroke-yellow-950') {
        @include assert {
          @include output {
            @include md\:stroke-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #422006;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-50') {
        @include assert {
          @include output {
            @include md\:stroke-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f7fee7;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-100') {
        @include assert {
          @include output {
            @include md\:stroke-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ecfccb;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-200') {
        @include assert {
          @include output {
            @include md\:stroke-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d9f99d;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-300') {
        @include assert {
          @include output {
            @include md\:stroke-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #bef264;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-400') {
        @include assert {
          @include output {
            @include md\:stroke-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a3e635;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-500') {
        @include assert {
          @include output {
            @include md\:stroke-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #84cc16;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-600') {
        @include assert {
          @include output {
            @include md\:stroke-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #65a30d;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-700') {
        @include assert {
          @include output {
            @include md\:stroke-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4d7c0f;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-800') {
        @include assert {
          @include output {
            @include md\:stroke-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #3f6212;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-900') {
        @include assert {
          @include output {
            @include md\:stroke-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #365314;
            }
          }
        }
      }

      @include it(md\:'stroke-lime-950') {
        @include assert {
          @include output {
            @include md\:stroke-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1a2e05;
            }
          }
        }
      }

      @include it(md\:'stroke-green-50') {
        @include assert {
          @include output {
            @include md\:stroke-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f0fdf4;
            }
          }
        }
      }

      @include it(md\:'stroke-green-100') {
        @include assert {
          @include output {
            @include md\:stroke-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #dcfce7;
            }
          }
        }
      }

      @include it(md\:'stroke-green-200') {
        @include assert {
          @include output {
            @include md\:stroke-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #bbf7d0;
            }
          }
        }
      }

      @include it(md\:'stroke-green-300') {
        @include assert {
          @include output {
            @include md\:stroke-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #86efac;
            }
          }
        }
      }

      @include it(md\:'stroke-green-400') {
        @include assert {
          @include output {
            @include md\:stroke-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4ade80;
            }
          }
        }
      }

      @include it(md\:'stroke-green-500') {
        @include assert {
          @include output {
            @include md\:stroke-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #22c55e;
            }
          }
        }
      }

      @include it(md\:'stroke-green-600') {
        @include assert {
          @include output {
            @include md\:stroke-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #16a34a;
            }
          }
        }
      }

      @include it(md\:'stroke-green-700') {
        @include assert {
          @include output {
            @include md\:stroke-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #15803d;
            }
          }
        }
      }

      @include it(md\:'stroke-green-800') {
        @include assert {
          @include output {
            @include md\:stroke-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #166534;
            }
          }
        }
      }

      @include it(md\:'stroke-green-900') {
        @include assert {
          @include output {
            @include md\:stroke-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #14532d;
            }
          }
        }
      }

      @include it(md\:'stroke-green-950') {
        @include assert {
          @include output {
            @include md\:stroke-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #052e16;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-50') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ecfdf5;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-100') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d1fae5;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-200') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a7f3d0;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-300') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #6ee7b7;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-400') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #34d399;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-500') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #10b981;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-600') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #059669;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-700') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #047857;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-800') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #065f46;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-900') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #064e3b;
            }
          }
        }
      }

      @include it(md\:'stroke-emerald-950') {
        @include assert {
          @include output {
            @include md\:stroke-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #022c22;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-50') {
        @include assert {
          @include output {
            @include md\:stroke-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f0fdfa;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-100') {
        @include assert {
          @include output {
            @include md\:stroke-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ccfbf1;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-200') {
        @include assert {
          @include output {
            @include md\:stroke-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #99f6e4;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-300') {
        @include assert {
          @include output {
            @include md\:stroke-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #5eead4;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-400') {
        @include assert {
          @include output {
            @include md\:stroke-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #2dd4bf;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-500') {
        @include assert {
          @include output {
            @include md\:stroke-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #14b8a6;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-600') {
        @include assert {
          @include output {
            @include md\:stroke-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0d9488;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-700') {
        @include assert {
          @include output {
            @include md\:stroke-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0f766e;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-800') {
        @include assert {
          @include output {
            @include md\:stroke-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #115e59;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-900') {
        @include assert {
          @include output {
            @include md\:stroke-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #134e4a;
            }
          }
        }
      }

      @include it(md\:'stroke-teal-950') {
        @include assert {
          @include output {
            @include md\:stroke-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #042f2e;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-50') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ecfeff;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-100') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #cffafe;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-200') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a5f3fc;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-300') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #67e8f9;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-400') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #22d3ee;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-500') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #06b6d4;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-600') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0891b2;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-700') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0e7490;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-800') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #155e75;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-900') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #164e63;
            }
          }
        }
      }

      @include it(md\:'stroke-cyan-950') {
        @include assert {
          @include output {
            @include md\:stroke-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #083344;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-50') {
        @include assert {
          @include output {
            @include md\:stroke-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f0f9ff;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-100') {
        @include assert {
          @include output {
            @include md\:stroke-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e0f2fe;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-200') {
        @include assert {
          @include output {
            @include md\:stroke-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #bae6fd;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-300') {
        @include assert {
          @include output {
            @include md\:stroke-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #7dd3fc;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-400') {
        @include assert {
          @include output {
            @include md\:stroke-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #38bdf8;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-500') {
        @include assert {
          @include output {
            @include md\:stroke-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0ea5e9;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-600') {
        @include assert {
          @include output {
            @include md\:stroke-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0284c7;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-700') {
        @include assert {
          @include output {
            @include md\:stroke-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0369a1;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-800') {
        @include assert {
          @include output {
            @include md\:stroke-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #075985;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-900') {
        @include assert {
          @include output {
            @include md\:stroke-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #0c4a6e;
            }
          }
        }
      }

      @include it(md\:'stroke-sky-950') {
        @include assert {
          @include output {
            @include md\:stroke-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #082f49;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-50') {
        @include assert {
          @include output {
            @include md\:stroke-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #eff6ff;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-100') {
        @include assert {
          @include output {
            @include md\:stroke-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #dbeafe;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-200') {
        @include assert {
          @include output {
            @include md\:stroke-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #bfdbfe;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-300') {
        @include assert {
          @include output {
            @include md\:stroke-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #93c5fd;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-400') {
        @include assert {
          @include output {
            @include md\:stroke-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #60a5fa;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-500') {
        @include assert {
          @include output {
            @include md\:stroke-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #3b82f6;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-600') {
        @include assert {
          @include output {
            @include md\:stroke-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #2563eb;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-700') {
        @include assert {
          @include output {
            @include md\:stroke-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1d4ed8;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-800') {
        @include assert {
          @include output {
            @include md\:stroke-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1e40af;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-900') {
        @include assert {
          @include output {
            @include md\:stroke-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1e3a8a;
            }
          }
        }
      }

      @include it(md\:'stroke-blue-950') {
        @include assert {
          @include output {
            @include md\:stroke-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #172554;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-50') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #eef2ff;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-100') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e0e7ff;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-200') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #c7d2fe;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-300') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a5b4fc;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-400') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #818cf8;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-500') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #6366f1;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-600') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4f46e5;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-700') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4338ca;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-800') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #3730a3;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-900') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #312e81;
            }
          }
        }
      }

      @include it(md\:'stroke-indigo-950') {
        @include assert {
          @include output {
            @include md\:stroke-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #1e1b4b;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-50') {
        @include assert {
          @include output {
            @include md\:stroke-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f5f3ff;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-100') {
        @include assert {
          @include output {
            @include md\:stroke-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ede9fe;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-200') {
        @include assert {
          @include output {
            @include md\:stroke-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ddd6fe;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-300') {
        @include assert {
          @include output {
            @include md\:stroke-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #c4b5fd;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-400') {
        @include assert {
          @include output {
            @include md\:stroke-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a78bfa;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-500') {
        @include assert {
          @include output {
            @include md\:stroke-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #8b5cf6;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-600') {
        @include assert {
          @include output {
            @include md\:stroke-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #7c3aed;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-700') {
        @include assert {
          @include output {
            @include md\:stroke-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #6d28d9;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-800') {
        @include assert {
          @include output {
            @include md\:stroke-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #5b21b6;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-900') {
        @include assert {
          @include output {
            @include md\:stroke-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4c1d95;
            }
          }
        }
      }

      @include it(md\:'stroke-violet-950') {
        @include assert {
          @include output {
            @include md\:stroke-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #2e1065;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-50') {
        @include assert {
          @include output {
            @include md\:stroke-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #faf5ff;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-100') {
        @include assert {
          @include output {
            @include md\:stroke-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f3e8ff;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-200') {
        @include assert {
          @include output {
            @include md\:stroke-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e9d5ff;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-300') {
        @include assert {
          @include output {
            @include md\:stroke-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d8b4fe;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-400') {
        @include assert {
          @include output {
            @include md\:stroke-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #c084fc;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-500') {
        @include assert {
          @include output {
            @include md\:stroke-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a855f7;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-600') {
        @include assert {
          @include output {
            @include md\:stroke-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #9333ea;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-700') {
        @include assert {
          @include output {
            @include md\:stroke-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #7e22ce;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-800') {
        @include assert {
          @include output {
            @include md\:stroke-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #6b21a8;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-900') {
        @include assert {
          @include output {
            @include md\:stroke-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #581c87;
            }
          }
        }
      }

      @include it(md\:'stroke-purple-950') {
        @include assert {
          @include output {
            @include md\:stroke-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #3b0764;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fdf4ff;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fae8ff;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f5d0fe;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f0abfc;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e879f9;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #d946ef;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #c026d3;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #a21caf;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #86198f;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #701a75;
            }
          }
        }
      }

      @include it(md\:'stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4a044e;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-50') {
        @include assert {
          @include output {
            @include md\:stroke-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fdf2f8;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-100') {
        @include assert {
          @include output {
            @include md\:stroke-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fce7f3;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-200') {
        @include assert {
          @include output {
            @include md\:stroke-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fbcfe8;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-300') {
        @include assert {
          @include output {
            @include md\:stroke-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f9a8d4;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-400') {
        @include assert {
          @include output {
            @include md\:stroke-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f472b6;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-500') {
        @include assert {
          @include output {
            @include md\:stroke-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ec4899;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-600') {
        @include assert {
          @include output {
            @include md\:stroke-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #db2777;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-700') {
        @include assert {
          @include output {
            @include md\:stroke-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #be185d;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-800') {
        @include assert {
          @include output {
            @include md\:stroke-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #9d174d;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-900') {
        @include assert {
          @include output {
            @include md\:stroke-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #831843;
            }
          }
        }
      }

      @include it(md\:'stroke-pink-950') {
        @include assert {
          @include output {
            @include md\:stroke-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #500724;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-50') {
        @include assert {
          @include output {
            @include md\:stroke-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fff1f2;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-100') {
        @include assert {
          @include output {
            @include md\:stroke-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #ffe4e6;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-200') {
        @include assert {
          @include output {
            @include md\:stroke-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fecdd3;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-300') {
        @include assert {
          @include output {
            @include md\:stroke-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fda4af;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-400') {
        @include assert {
          @include output {
            @include md\:stroke-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #fb7185;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-500') {
        @include assert {
          @include output {
            @include md\:stroke-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #f43f5e;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-600') {
        @include assert {
          @include output {
            @include md\:stroke-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #e11d48;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-700') {
        @include assert {
          @include output {
            @include md\:stroke-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #be123c;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-800') {
        @include assert {
          @include output {
            @include md\:stroke-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #9f1239;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-900') {
        @include assert {
          @include output {
            @include md\:stroke-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #881337;
            }
          }
        }
      }

      @include it(md\:'stroke-rose-950') {
        @include assert {
          @include output {
            @include md\:stroke-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #4c0519;
            }
          }
        }
      }

      @include it(lg\:'stroke-inherit') {
        @include assert {
          @include output {
            @include lg\:stroke-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: inherit;
            }
          }
        }
      }

      @include it(lg\:'stroke-current') {
        @include assert {
          @include output {
            @include lg\:stroke-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: currentColor;
            }
          }
        }
      }

      @include it(lg\:'stroke-transparent') {
        @include assert {
          @include output {
            @include lg\:stroke-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: transparent;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-100') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f1f5f9;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-200') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e2e8f0;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-300') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #cbd5e1;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-400') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #94a3b8;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-500') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #64748b;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-600') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #475569;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-700') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #334155;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-800') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1e293b;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-900') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0f172a;
            }
          }
        }
      }

      @include it(lg\:'stroke-slate-950') {
        @include assert {
          @include output {
            @include lg\:stroke-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #020617;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-50') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f9fafb;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-100') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f3f4f6;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-200') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e5e7eb;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-300') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d1d5db;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-400') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #9ca3af;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-500') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #6b7280;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-600') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4b5563;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-700') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #374151;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-800') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1f2937;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-900') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #111827;
            }
          }
        }
      }

      @include it(lg\:'stroke-gray-950') {
        @include assert {
          @include output {
            @include lg\:stroke-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #030712;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-50') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-100') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f4f4f5;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-200') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e4e4e7;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-300') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d4d4d8;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-400') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a1a1aa;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-500') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #71717a;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-600') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #52525b;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-700') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #3f3f46;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-800') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #27272a;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-900') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #18181b;
            }
          }
        }
      }

      @include it(lg\:'stroke-zinc-950') {
        @include assert {
          @include output {
            @include lg\:stroke-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #09090b;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-50') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-100') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f5f5f5;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-200') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e5e5e5;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-300') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d4d4d4;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-400') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a3a3a3;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-500') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #737373;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-600') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #525252;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-700') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #404040;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-800') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #262626;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-900') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #171717;
            }
          }
        }
      }

      @include it(lg\:'stroke-neutral-950') {
        @include assert {
          @include output {
            @include lg\:stroke-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0a0a0a;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-50') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fafaf9;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-100') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f5f5f4;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-200') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e7e5e4;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-300') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d6d3d1;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-400') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a8a29e;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-500') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #78716c;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-600') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #57534e;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-700') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #44403c;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-800') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #292524;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-900') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1c1917;
            }
          }
        }
      }

      @include it(lg\:'stroke-stone-950') {
        @include assert {
          @include output {
            @include lg\:stroke-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0c0a09;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-50') {
        @include assert {
          @include output {
            @include lg\:stroke-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fef2f2;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-100') {
        @include assert {
          @include output {
            @include lg\:stroke-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fee2e2;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-200') {
        @include assert {
          @include output {
            @include lg\:stroke-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fecaca;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-300') {
        @include assert {
          @include output {
            @include lg\:stroke-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fca5a5;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-400') {
        @include assert {
          @include output {
            @include lg\:stroke-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f87171;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-500') {
        @include assert {
          @include output {
            @include lg\:stroke-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ef4444;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-600') {
        @include assert {
          @include output {
            @include lg\:stroke-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #dc2626;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-700') {
        @include assert {
          @include output {
            @include lg\:stroke-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #b91c1c;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-800') {
        @include assert {
          @include output {
            @include lg\:stroke-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #991b1b;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-900') {
        @include assert {
          @include output {
            @include lg\:stroke-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #7f1d1d;
            }
          }
        }
      }

      @include it(lg\:'stroke-red-950') {
        @include assert {
          @include output {
            @include lg\:stroke-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #450a0a;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-50') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fff7ed;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-100') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ffedd5;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-200') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fed7aa;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-300') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fdba74;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-400') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fb923c;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-500') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f97316;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-600') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ea580c;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-700') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #c2410c;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-800') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #9a3412;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-900') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #7c2d12;
            }
          }
        }
      }

      @include it(lg\:'stroke-orange-950') {
        @include assert {
          @include output {
            @include lg\:stroke-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #431407;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-50') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fffbeb;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-100') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fef3c7;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-200') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fde68a;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-300') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fcd34d;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-400') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fbbf24;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-500') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f59e0b;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-600') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d97706;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-700') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #b45309;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-800') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #92400e;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-900') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #78350f;
            }
          }
        }
      }

      @include it(lg\:'stroke-amber-950') {
        @include assert {
          @include output {
            @include lg\:stroke-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #451a03;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-50') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fefce8;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-100') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fef9c3;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-200') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fef08a;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-300') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fde047;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-400') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #facc15;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-500') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #eab308;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-600') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ca8a04;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-700') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a16207;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-800') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #854d0e;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-900') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #713f12;
            }
          }
        }
      }

      @include it(lg\:'stroke-yellow-950') {
        @include assert {
          @include output {
            @include lg\:stroke-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #422006;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-50') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f7fee7;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-100') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ecfccb;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-200') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d9f99d;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-300') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #bef264;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-400') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a3e635;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-500') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #84cc16;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-600') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #65a30d;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-700') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4d7c0f;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-800') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #3f6212;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-900') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #365314;
            }
          }
        }
      }

      @include it(lg\:'stroke-lime-950') {
        @include assert {
          @include output {
            @include lg\:stroke-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1a2e05;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-50') {
        @include assert {
          @include output {
            @include lg\:stroke-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f0fdf4;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-100') {
        @include assert {
          @include output {
            @include lg\:stroke-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #dcfce7;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-200') {
        @include assert {
          @include output {
            @include lg\:stroke-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #bbf7d0;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-300') {
        @include assert {
          @include output {
            @include lg\:stroke-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #86efac;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-400') {
        @include assert {
          @include output {
            @include lg\:stroke-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4ade80;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-500') {
        @include assert {
          @include output {
            @include lg\:stroke-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #22c55e;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-600') {
        @include assert {
          @include output {
            @include lg\:stroke-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #16a34a;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-700') {
        @include assert {
          @include output {
            @include lg\:stroke-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #15803d;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-800') {
        @include assert {
          @include output {
            @include lg\:stroke-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #166534;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-900') {
        @include assert {
          @include output {
            @include lg\:stroke-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #14532d;
            }
          }
        }
      }

      @include it(lg\:'stroke-green-950') {
        @include assert {
          @include output {
            @include lg\:stroke-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #052e16;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-50') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ecfdf5;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-100') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d1fae5;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-200') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a7f3d0;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-300') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #6ee7b7;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-400') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #34d399;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-500') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #10b981;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-600') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #059669;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-700') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #047857;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-800') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #065f46;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-900') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #064e3b;
            }
          }
        }
      }

      @include it(lg\:'stroke-emerald-950') {
        @include assert {
          @include output {
            @include lg\:stroke-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #022c22;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-50') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f0fdfa;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-100') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ccfbf1;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-200') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #99f6e4;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-300') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #5eead4;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-400') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #2dd4bf;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-500') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #14b8a6;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-600') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0d9488;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-700') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0f766e;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-800') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #115e59;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-900') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #134e4a;
            }
          }
        }
      }

      @include it(lg\:'stroke-teal-950') {
        @include assert {
          @include output {
            @include lg\:stroke-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #042f2e;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-50') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ecfeff;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-100') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #cffafe;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-200') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a5f3fc;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-300') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #67e8f9;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-400') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #22d3ee;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-500') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #06b6d4;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-600') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0891b2;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-700') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0e7490;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-800') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #155e75;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-900') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #164e63;
            }
          }
        }
      }

      @include it(lg\:'stroke-cyan-950') {
        @include assert {
          @include output {
            @include lg\:stroke-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #083344;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-50') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f0f9ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-100') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e0f2fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-200') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #bae6fd;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-300') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #7dd3fc;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-400') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #38bdf8;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-500') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0ea5e9;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-600') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0284c7;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-700') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0369a1;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-800') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #075985;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-900') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #0c4a6e;
            }
          }
        }
      }

      @include it(lg\:'stroke-sky-950') {
        @include assert {
          @include output {
            @include lg\:stroke-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #082f49;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-50') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #eff6ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-100') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #dbeafe;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-200') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #bfdbfe;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-300') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #93c5fd;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-400') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #60a5fa;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-500') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #3b82f6;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-600') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #2563eb;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-700') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1d4ed8;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-800') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1e40af;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-900') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1e3a8a;
            }
          }
        }
      }

      @include it(lg\:'stroke-blue-950') {
        @include assert {
          @include output {
            @include lg\:stroke-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #172554;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-50') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #eef2ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-100') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e0e7ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-200') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #c7d2fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-300') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a5b4fc;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-400') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #818cf8;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-500') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #6366f1;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-600') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4f46e5;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-700') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4338ca;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-800') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #3730a3;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-900') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #312e81;
            }
          }
        }
      }

      @include it(lg\:'stroke-indigo-950') {
        @include assert {
          @include output {
            @include lg\:stroke-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #1e1b4b;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-50') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f5f3ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-100') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ede9fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-200') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ddd6fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-300') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #c4b5fd;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-400') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a78bfa;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-500') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #8b5cf6;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-600') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #7c3aed;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-700') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #6d28d9;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-800') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #5b21b6;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-900') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4c1d95;
            }
          }
        }
      }

      @include it(lg\:'stroke-violet-950') {
        @include assert {
          @include output {
            @include lg\:stroke-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #2e1065;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-50') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #faf5ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-100') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f3e8ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-200') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e9d5ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-300') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d8b4fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-400') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #c084fc;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-500') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a855f7;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-600') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #9333ea;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-700') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #7e22ce;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-800') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #6b21a8;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-900') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #581c87;
            }
          }
        }
      }

      @include it(lg\:'stroke-purple-950') {
        @include assert {
          @include output {
            @include lg\:stroke-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #3b0764;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fdf4ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fae8ff;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f5d0fe;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f0abfc;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e879f9;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #d946ef;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #c026d3;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #a21caf;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #86198f;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #701a75;
            }
          }
        }
      }

      @include it(lg\:'stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4a044e;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-50') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fdf2f8;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-100') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fce7f3;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-200') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fbcfe8;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-300') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f9a8d4;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-400') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f472b6;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-500') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ec4899;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-600') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #db2777;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-700') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #be185d;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-800') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #9d174d;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-900') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #831843;
            }
          }
        }
      }

      @include it(lg\:'stroke-pink-950') {
        @include assert {
          @include output {
            @include lg\:stroke-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #500724;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-50') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fff1f2;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-100') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #ffe4e6;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-200') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fecdd3;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-300') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fda4af;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-400') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #fb7185;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-500') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #f43f5e;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-600') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #e11d48;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-700') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #be123c;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-800') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #9f1239;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-900') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #881337;
            }
          }
        }
      }

      @include it(lg\:'stroke-rose-950') {
        @include assert {
          @include output {
            @include lg\:stroke-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #4c0519;
            }
          }
        }
      }

      @include it(xl\:'stroke-inherit') {
        @include assert {
          @include output {
            @include xl\:stroke-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: inherit;
            }
          }
        }
      }

      @include it(xl\:'stroke-current') {
        @include assert {
          @include output {
            @include xl\:stroke-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: currentColor;
            }
          }
        }
      }

      @include it(xl\:'stroke-transparent') {
        @include assert {
          @include output {
            @include xl\:stroke-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: transparent;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-100') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f1f5f9;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-200') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e2e8f0;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-300') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #cbd5e1;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-400') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #94a3b8;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-500') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #64748b;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-600') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #475569;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-700') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #334155;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-800') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1e293b;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-900') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0f172a;
            }
          }
        }
      }

      @include it(xl\:'stroke-slate-950') {
        @include assert {
          @include output {
            @include xl\:stroke-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #020617;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-50') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f9fafb;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-100') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f3f4f6;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-200') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e5e7eb;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-300') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d1d5db;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-400') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #9ca3af;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-500') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #6b7280;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-600') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4b5563;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-700') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #374151;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-800') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1f2937;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-900') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #111827;
            }
          }
        }
      }

      @include it(xl\:'stroke-gray-950') {
        @include assert {
          @include output {
            @include xl\:stroke-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #030712;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-50') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-100') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f4f4f5;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-200') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e4e4e7;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-300') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d4d4d8;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-400') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a1a1aa;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-500') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #71717a;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-600') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #52525b;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-700') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #3f3f46;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-800') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #27272a;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-900') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #18181b;
            }
          }
        }
      }

      @include it(xl\:'stroke-zinc-950') {
        @include assert {
          @include output {
            @include xl\:stroke-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #09090b;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-50') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-100') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f5f5f5;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-200') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e5e5e5;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-300') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d4d4d4;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-400') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a3a3a3;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-500') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #737373;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-600') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #525252;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-700') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #404040;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-800') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #262626;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-900') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #171717;
            }
          }
        }
      }

      @include it(xl\:'stroke-neutral-950') {
        @include assert {
          @include output {
            @include xl\:stroke-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0a0a0a;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-50') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fafaf9;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-100') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f5f5f4;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-200') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e7e5e4;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-300') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d6d3d1;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-400') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a8a29e;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-500') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #78716c;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-600') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #57534e;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-700') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #44403c;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-800') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #292524;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-900') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1c1917;
            }
          }
        }
      }

      @include it(xl\:'stroke-stone-950') {
        @include assert {
          @include output {
            @include xl\:stroke-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0c0a09;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-50') {
        @include assert {
          @include output {
            @include xl\:stroke-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fef2f2;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-100') {
        @include assert {
          @include output {
            @include xl\:stroke-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fee2e2;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-200') {
        @include assert {
          @include output {
            @include xl\:stroke-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fecaca;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-300') {
        @include assert {
          @include output {
            @include xl\:stroke-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fca5a5;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-400') {
        @include assert {
          @include output {
            @include xl\:stroke-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f87171;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-500') {
        @include assert {
          @include output {
            @include xl\:stroke-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ef4444;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-600') {
        @include assert {
          @include output {
            @include xl\:stroke-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #dc2626;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-700') {
        @include assert {
          @include output {
            @include xl\:stroke-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #b91c1c;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-800') {
        @include assert {
          @include output {
            @include xl\:stroke-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #991b1b;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-900') {
        @include assert {
          @include output {
            @include xl\:stroke-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #7f1d1d;
            }
          }
        }
      }

      @include it(xl\:'stroke-red-950') {
        @include assert {
          @include output {
            @include xl\:stroke-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #450a0a;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-50') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fff7ed;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-100') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ffedd5;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-200') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fed7aa;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-300') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fdba74;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-400') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fb923c;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-500') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f97316;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-600') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ea580c;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-700') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #c2410c;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-800') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #9a3412;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-900') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #7c2d12;
            }
          }
        }
      }

      @include it(xl\:'stroke-orange-950') {
        @include assert {
          @include output {
            @include xl\:stroke-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #431407;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-50') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fffbeb;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-100') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fef3c7;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-200') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fde68a;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-300') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fcd34d;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-400') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fbbf24;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-500') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f59e0b;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-600') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d97706;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-700') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #b45309;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-800') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #92400e;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-900') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #78350f;
            }
          }
        }
      }

      @include it(xl\:'stroke-amber-950') {
        @include assert {
          @include output {
            @include xl\:stroke-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #451a03;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-50') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fefce8;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-100') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fef9c3;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-200') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fef08a;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-300') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fde047;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-400') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #facc15;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-500') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #eab308;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-600') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ca8a04;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-700') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a16207;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-800') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #854d0e;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-900') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #713f12;
            }
          }
        }
      }

      @include it(xl\:'stroke-yellow-950') {
        @include assert {
          @include output {
            @include xl\:stroke-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #422006;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-50') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f7fee7;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-100') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ecfccb;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-200') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d9f99d;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-300') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #bef264;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-400') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a3e635;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-500') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #84cc16;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-600') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #65a30d;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-700') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4d7c0f;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-800') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #3f6212;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-900') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #365314;
            }
          }
        }
      }

      @include it(xl\:'stroke-lime-950') {
        @include assert {
          @include output {
            @include xl\:stroke-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1a2e05;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-50') {
        @include assert {
          @include output {
            @include xl\:stroke-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f0fdf4;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-100') {
        @include assert {
          @include output {
            @include xl\:stroke-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #dcfce7;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-200') {
        @include assert {
          @include output {
            @include xl\:stroke-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #bbf7d0;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-300') {
        @include assert {
          @include output {
            @include xl\:stroke-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #86efac;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-400') {
        @include assert {
          @include output {
            @include xl\:stroke-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4ade80;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-500') {
        @include assert {
          @include output {
            @include xl\:stroke-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #22c55e;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-600') {
        @include assert {
          @include output {
            @include xl\:stroke-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #16a34a;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-700') {
        @include assert {
          @include output {
            @include xl\:stroke-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #15803d;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-800') {
        @include assert {
          @include output {
            @include xl\:stroke-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #166534;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-900') {
        @include assert {
          @include output {
            @include xl\:stroke-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #14532d;
            }
          }
        }
      }

      @include it(xl\:'stroke-green-950') {
        @include assert {
          @include output {
            @include xl\:stroke-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #052e16;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-50') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ecfdf5;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-100') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d1fae5;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-200') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a7f3d0;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-300') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #6ee7b7;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-400') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #34d399;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-500') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #10b981;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-600') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #059669;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-700') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #047857;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-800') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #065f46;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-900') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #064e3b;
            }
          }
        }
      }

      @include it(xl\:'stroke-emerald-950') {
        @include assert {
          @include output {
            @include xl\:stroke-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #022c22;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-50') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f0fdfa;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-100') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ccfbf1;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-200') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #99f6e4;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-300') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #5eead4;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-400') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #2dd4bf;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-500') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #14b8a6;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-600') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0d9488;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-700') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0f766e;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-800') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #115e59;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-900') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #134e4a;
            }
          }
        }
      }

      @include it(xl\:'stroke-teal-950') {
        @include assert {
          @include output {
            @include xl\:stroke-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #042f2e;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-50') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ecfeff;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-100') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #cffafe;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-200') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a5f3fc;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-300') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #67e8f9;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-400') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #22d3ee;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-500') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #06b6d4;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-600') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0891b2;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-700') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0e7490;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-800') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #155e75;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-900') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #164e63;
            }
          }
        }
      }

      @include it(xl\:'stroke-cyan-950') {
        @include assert {
          @include output {
            @include xl\:stroke-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #083344;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-50') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f0f9ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-100') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e0f2fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-200') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #bae6fd;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-300') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #7dd3fc;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-400') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #38bdf8;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-500') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0ea5e9;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-600') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0284c7;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-700') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0369a1;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-800') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #075985;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-900') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #0c4a6e;
            }
          }
        }
      }

      @include it(xl\:'stroke-sky-950') {
        @include assert {
          @include output {
            @include xl\:stroke-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #082f49;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-50') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #eff6ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-100') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #dbeafe;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-200') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #bfdbfe;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-300') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #93c5fd;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-400') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #60a5fa;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-500') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #3b82f6;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-600') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #2563eb;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-700') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1d4ed8;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-800') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1e40af;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-900') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1e3a8a;
            }
          }
        }
      }

      @include it(xl\:'stroke-blue-950') {
        @include assert {
          @include output {
            @include xl\:stroke-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #172554;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-50') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #eef2ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-100') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e0e7ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-200') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #c7d2fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-300') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a5b4fc;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-400') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #818cf8;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-500') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #6366f1;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-600') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4f46e5;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-700') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4338ca;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-800') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #3730a3;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-900') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #312e81;
            }
          }
        }
      }

      @include it(xl\:'stroke-indigo-950') {
        @include assert {
          @include output {
            @include xl\:stroke-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #1e1b4b;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-50') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f5f3ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-100') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ede9fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-200') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ddd6fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-300') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #c4b5fd;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-400') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a78bfa;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-500') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #8b5cf6;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-600') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #7c3aed;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-700') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #6d28d9;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-800') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #5b21b6;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-900') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4c1d95;
            }
          }
        }
      }

      @include it(xl\:'stroke-violet-950') {
        @include assert {
          @include output {
            @include xl\:stroke-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #2e1065;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-50') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #faf5ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-100') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f3e8ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-200') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e9d5ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-300') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d8b4fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-400') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #c084fc;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-500') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a855f7;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-600') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #9333ea;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-700') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #7e22ce;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-800') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #6b21a8;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-900') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #581c87;
            }
          }
        }
      }

      @include it(xl\:'stroke-purple-950') {
        @include assert {
          @include output {
            @include xl\:stroke-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #3b0764;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fdf4ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fae8ff;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f5d0fe;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f0abfc;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e879f9;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #d946ef;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #c026d3;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #a21caf;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #86198f;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #701a75;
            }
          }
        }
      }

      @include it(xl\:'stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4a044e;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-50') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fdf2f8;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-100') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fce7f3;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-200') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fbcfe8;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-300') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f9a8d4;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-400') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f472b6;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-500') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ec4899;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-600') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #db2777;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-700') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #be185d;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-800') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #9d174d;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-900') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #831843;
            }
          }
        }
      }

      @include it(xl\:'stroke-pink-950') {
        @include assert {
          @include output {
            @include xl\:stroke-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #500724;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-50') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fff1f2;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-100') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #ffe4e6;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-200') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fecdd3;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-300') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fda4af;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-400') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #fb7185;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-500') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #f43f5e;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-600') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #e11d48;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-700') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #be123c;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-800') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #9f1239;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-900') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #881337;
            }
          }
        }
      }

      @include it(xl\:'stroke-rose-950') {
        @include assert {
          @include output {
            @include xl\:stroke-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #4c0519;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-inherit') {
        @include assert {
          @include output {
            @include \2xl\:stroke-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: inherit;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-current') {
        @include assert {
          @include output {
            @include \2xl\:stroke-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: currentColor;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-transparent') {
        @include assert {
          @include output {
            @include \2xl\:stroke-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: transparent;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f1f5f9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e2e8f0;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #cbd5e1;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #94a3b8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #64748b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #475569;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #334155;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1e293b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0f172a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #020617;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f9fafb;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f3f4f6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e5e7eb;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d1d5db;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #9ca3af;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #6b7280;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4b5563;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #374151;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1f2937;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #111827;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #030712;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f4f4f5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e4e4e7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d4d4d8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a1a1aa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #71717a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #52525b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #3f3f46;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #27272a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #18181b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #09090b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fafafa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f5f5f5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e5e5e5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d4d4d4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a3a3a3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #737373;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #525252;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #404040;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #262626;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #171717;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0a0a0a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fafaf9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f5f5f4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e7e5e4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d6d3d1;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a8a29e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #78716c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #57534e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #44403c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #292524;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1c1917;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0c0a09;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fef2f2;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fee2e2;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fecaca;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fca5a5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f87171;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ef4444;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #dc2626;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #b91c1c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #991b1b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #7f1d1d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-red-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #450a0a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fff7ed;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ffedd5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fed7aa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fdba74;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fb923c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f97316;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ea580c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #c2410c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #9a3412;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #7c2d12;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #431407;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fffbeb;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fef3c7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fde68a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fcd34d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fbbf24;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f59e0b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d97706;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #b45309;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #92400e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #78350f;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #451a03;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fefce8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fef9c3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fef08a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fde047;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #facc15;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #eab308;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ca8a04;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a16207;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #854d0e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #713f12;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #422006;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f7fee7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ecfccb;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d9f99d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #bef264;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a3e635;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #84cc16;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #65a30d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4d7c0f;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #3f6212;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #365314;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1a2e05;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f0fdf4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #dcfce7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #bbf7d0;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #86efac;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4ade80;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #22c55e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #16a34a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #15803d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #166534;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #14532d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-green-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #052e16;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ecfdf5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d1fae5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a7f3d0;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #6ee7b7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #34d399;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #10b981;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #059669;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #047857;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #065f46;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #064e3b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #022c22;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f0fdfa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ccfbf1;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #99f6e4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #5eead4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #2dd4bf;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #14b8a6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0d9488;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0f766e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #115e59;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #134e4a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #042f2e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ecfeff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #cffafe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a5f3fc;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #67e8f9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #22d3ee;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #06b6d4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0891b2;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0e7490;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #155e75;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #164e63;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #083344;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f0f9ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e0f2fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #bae6fd;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #7dd3fc;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #38bdf8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0ea5e9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0284c7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0369a1;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #075985;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #0c4a6e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #082f49;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #eff6ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #dbeafe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #bfdbfe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #93c5fd;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #60a5fa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #3b82f6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #2563eb;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1d4ed8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1e40af;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1e3a8a;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #172554;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #eef2ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e0e7ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #c7d2fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a5b4fc;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #818cf8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #6366f1;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4f46e5;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4338ca;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #3730a3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #312e81;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #1e1b4b;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f5f3ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ede9fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ddd6fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #c4b5fd;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a78bfa;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #8b5cf6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #7c3aed;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #6d28d9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #5b21b6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4c1d95;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #2e1065;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #faf5ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f3e8ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e9d5ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d8b4fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #c084fc;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a855f7;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #9333ea;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #7e22ce;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #6b21a8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #581c87;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #3b0764;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fdf4ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fae8ff;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f5d0fe;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f0abfc;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e879f9;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #d946ef;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #c026d3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #a21caf;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #86198f;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #701a75;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4a044e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fdf2f8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fce7f3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fbcfe8;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f9a8d4;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f472b6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ec4899;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #db2777;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #be185d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #9d174d;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #831843;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #500724;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fff1f2;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #ffe4e6;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fecdd3;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fda4af;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #fb7185;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #f43f5e;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #e11d48;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #be123c;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #9f1239;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #881337;
            }
          }
        }
      }

      @include it(\2xl\:'stroke-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:stroke-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #4c0519;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            stroke: #243c5a;
          }
        }
      }

      @include it('sm\:stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include sm\:stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              stroke: #243c5a;
            }
          }
        }
      }

      @include it('md\:stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include md\:stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              stroke: #243c5a;
            }
          }
        }
      }

      @include it('lg\:stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include lg\:stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              stroke: #243c5a;
            }
          }
        }
      }

      @include it('xl\:stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include xl\:stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              stroke: #243c5a;
            }
          }
        }
      }

      @include it('2xl\:stroke-(#243c5a)') {
        @include assert {
          @include output {
            @include \2xl\:stroke-(#243c5a);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              stroke: #243c5a;
            }
          }
        }
      }
    }
  }
}
