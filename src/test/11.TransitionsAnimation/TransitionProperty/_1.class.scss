@use '../../mode0' as *;
@use 'true' as *;

@include describe('11.Transitions & Animation') {
  @include describe('Transition Property') {
    @include describe('Basic') {
      @include it('transition-none') {
        @include assert {
          @include output {
            @include transition-none;
            @include reset;
          }

          @include expect {
            transition-property: none;
          }
        }
      }

      @include it('transition-all') {
        @include assert {
          @include output {
            @include transition-all;
            @include reset;
          }

          @include expect {
            transition-property: all;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('transition') {
        @include assert {
          @include output {
            @include transition;
            @include reset;
          }

          @include expect {
            transition-property: color, background-color, border-color,
              text-decoration-color, fill, stroke, opacity, box-shadow,
              transform, filter, backdrop-filter;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('transition-colors') {
        @include assert {
          @include output {
            @include transition-colors;
            @include reset;
          }

          @include expect {
            transition-property: color, background-color, border-color,
              text-decoration-color, fill, stroke;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('transition-opacity') {
        @include assert {
          @include output {
            @include transition-opacity;
            @include reset;
          }

          @include expect {
            transition-property: opacity;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('transition-shadow') {
        @include assert {
          @include output {
            @include transition-shadow;
            @include reset;
          }

          @include expect {
            transition-property: box-shadow;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('transition-transform') {
        @include assert {
          @include output {
            @include transition-transform;
            @include reset;
          }

          @include expect {
            transition-property: transform;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:transition-none') {
        @include assert {
          @include output {
            @include sm\:transition-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: none;
            }
          }
        }
      }

      @include it('sm\:transition-all') {
        @include assert {
          @include output {
            @include sm\:transition-all;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: all;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('sm\:transition') {
        @include assert {
          @include output {
            @include sm\:transition;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke, opacity, box-shadow,
                transform, filter, backdrop-filter;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('sm\:transition-colors') {
        @include assert {
          @include output {
            @include sm\:transition-colors;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('sm\:transition-opacity') {
        @include assert {
          @include output {
            @include sm\:transition-opacity;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: opacity;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('sm\:transition-shadow') {
        @include assert {
          @include output {
            @include sm\:transition-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: box-shadow;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('sm\:transition-transform') {
        @include assert {
          @include output {
            @include sm\:transition-transform;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: transform;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-none') {
        @include assert {
          @include output {
            @include md\:transition-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: none;
            }
          }
        }
      }

      @include it('md\:transition-all') {
        @include assert {
          @include output {
            @include md\:transition-all;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: all;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition') {
        @include assert {
          @include output {
            @include md\:transition;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke, opacity, box-shadow,
                transform, filter, backdrop-filter;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-colors') {
        @include assert {
          @include output {
            @include md\:transition-colors;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-opacity') {
        @include assert {
          @include output {
            @include md\:transition-opacity;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: opacity;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-shadow') {
        @include assert {
          @include output {
            @include md\:transition-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: box-shadow;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-transform') {
        @include assert {
          @include output {
            @include md\:transition-transform;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: transform;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-none') {
        @include assert {
          @include output {
            @include lg\:transition-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: none;
            }
          }
        }
      }

      @include it('lg\:transition-all') {
        @include assert {
          @include output {
            @include lg\:transition-all;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: all;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition') {
        @include assert {
          @include output {
            @include lg\:transition;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke, opacity, box-shadow,
                transform, filter, backdrop-filter;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-colors') {
        @include assert {
          @include output {
            @include lg\:transition-colors;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-opacity') {
        @include assert {
          @include output {
            @include lg\:transition-opacity;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: opacity;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-shadow') {
        @include assert {
          @include output {
            @include lg\:transition-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: box-shadow;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-transform') {
        @include assert {
          @include output {
            @include lg\:transition-transform;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: transform;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-none') {
        @include assert {
          @include output {
            @include xl\:transition-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: none;
            }
          }
        }
      }

      @include it('xl\:transition-all') {
        @include assert {
          @include output {
            @include xl\:transition-all;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: all;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition') {
        @include assert {
          @include output {
            @include xl\:transition;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke, opacity, box-shadow,
                transform, filter, backdrop-filter;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-colors') {
        @include assert {
          @include output {
            @include xl\:transition-colors;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-opacity') {
        @include assert {
          @include output {
            @include xl\:transition-opacity;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: opacity;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-shadow') {
        @include assert {
          @include output {
            @include xl\:transition-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: box-shadow;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-transform') {
        @include assert {
          @include output {
            @include xl\:transition-transform;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: transform;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-none') {
        @include assert {
          @include output {
            @include \2xl\:transition-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: none;
            }
          }
        }
      }

      @include it('2xl\:transition-all') {
        @include assert {
          @include output {
            @include \2xl\:transition-all;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: all;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition') {
        @include assert {
          @include output {
            @include \2xl\:transition;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke, opacity, box-shadow,
                transform, filter, backdrop-filter;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-colors') {
        @include assert {
          @include output {
            @include \2xl\:transition-colors;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: color, background-color, border-color,
                text-decoration-color, fill, stroke;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-opacity') {
        @include assert {
          @include output {
            @include \2xl\:transition-opacity;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: opacity;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-shadow') {
        @include assert {
          @include output {
            @include \2xl\:transition-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: box-shadow;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-transform') {
        @include assert {
          @include output {
            @include \2xl\:transition-transform;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: transform;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('transition-(height)') {
        @include assert {
          @include output {
            @include transition-(height);
            @include reset;
          }

          @include expect {
            transition-property: height;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            transition-duration: 150ms;
          }
        }
      }

      @include it('sm\:transition-(height)') {
        @include assert {
          @include output {
            @include sm\:transition-(height);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              transition-property: height;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('md\:transition-(height)') {
        @include assert {
          @include output {
            @include md\:transition-(height);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              transition-property: height;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('lg\:transition-(height)') {
        @include assert {
          @include output {
            @include lg\:transition-(height);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              transition-property: height;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('xl\:transition-(height)') {
        @include assert {
          @include output {
            @include xl\:transition-(height);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              transition-property: height;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('2xl\:transition-(height)') {
        @include assert {
          @include output {
            @include \2xl\:transition-(height);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              transition-property: height;
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
              transition-duration: 150ms;
            }
          }
        }
      }
    }
  }
}
