@import '../_classic_only';

@include describe('5.Typography') {
  @include describe('Hyphens') {
    @include describe('Basic') {
      @include it('hyphens-none') {
        @include assert {
          @include output {
            @include hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            hyphens: none;
          }
        }
      }

      @include it('hyphens-manual') {
        @include assert {
          @include output {
            @include hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            hyphens: manual;
          }
        }
      }

      @include it('hyphens-auto') {
        @include assert {
          @include output {
            @include hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            hyphens: auto;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:hyphens-none') {
        @include assert {
          @include output {
            @include sm\:hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              hyphens: none;
            }
          }
        }
      }

      @include it('sm\:hyphens-manual') {
        @include assert {
          @include output {
            @include sm\:hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              hyphens: manual;
            }
          }
        }
      }

      @include it('sm\:hyphens-auto') {
        @include assert {
          @include output {
            @include sm\:hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              hyphens: auto;
            }
          }
        }
      }

      @include it('md\:hyphens-none') {
        @include assert {
          @include output {
            @include md\:hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              hyphens: none;
            }
          }
        }
      }

      @include it('md\:hyphens-manual') {
        @include assert {
          @include output {
            @include md\:hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              hyphens: manual;
            }
          }
        }
      }

      @include it('md\:hyphens-auto') {
        @include assert {
          @include output {
            @include md\:hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              hyphens: auto;
            }
          }
        }
      }

      @include it('lg\:hyphens-none') {
        @include assert {
          @include output {
            @include lg\:hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              hyphens: none;
            }
          }
        }
      }

      @include it('lg\:hyphens-manual') {
        @include assert {
          @include output {
            @include lg\:hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              hyphens: manual;
            }
          }
        }
      }

      @include it('lg\:hyphens-auto') {
        @include assert {
          @include output {
            @include lg\:hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              hyphens: auto;
            }
          }
        }
      }

      @include it('xl\:hyphens-none') {
        @include assert {
          @include output {
            @include xl\:hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              hyphens: none;
            }
          }
        }
      }

      @include it('xl\:hyphens-manual') {
        @include assert {
          @include output {
            @include xl\:hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              hyphens: manual;
            }
          }
        }
      }

      @include it('xl\:hyphens-auto') {
        @include assert {
          @include output {
            @include xl\:hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              hyphens: auto;
            }
          }
        }
      }

      @include it('2xl\:hyphens-none') {
        @include assert {
          @include output {
            @include \2xl\:hyphens-none;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              hyphens: none;
            }
          }
        }
      }

      @include it('2xl\:hyphens-manual') {
        @include assert {
          @include output {
            @include \2xl\:hyphens-manual;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              hyphens: manual;
            }
          }
        }
      }

      @include it('2xl\:hyphens-auto') {
        @include assert {
          @include output {
            @include \2xl\:hyphens-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              hyphens: auto;
            }
          }
        }
      }
    }
  }
}
