@import '../_classic_only';

@include describe('5.Typography') {
  @include describe('Font Family') {
    @include describe('Basic') {
      @include it('font-sans') {
        @include assert {
          @include output {
            @include font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            font-family: ui-sans-serif, system-ui, sans-serif,
              'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
              'Noto Color Emoji';
          }
        }
      }

      @include it('font-serif') {
        @include assert {
          @include output {
            @include font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
              serif;
          }
        }
      }

      @include it('font-mono') {
        @include assert {
          @include output {
            @include font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
              'Liberation Mono', 'Courier New', monospace;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:font-sans') {
        @include assert {
          @include output {
            @include sm\:font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              font-family: ui-sans-serif, system-ui, sans-serif,
                'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
                'Noto Color Emoji';
            }
          }
        }
      }

      @include it('sm\:font-serif') {
        @include assert {
          @include output {
            @include sm\:font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
                serif;
            }
          }
        }
      }

      @include it('sm\:font-mono') {
        @include assert {
          @include output {
            @include sm\:font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            }
          }
        }
      }

      @include it('md\:font-sans') {
        @include assert {
          @include output {
            @include md\:font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              font-family: ui-sans-serif, system-ui, sans-serif,
                'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
                'Noto Color Emoji';
            }
          }
        }
      }

      @include it('md\:font-serif') {
        @include assert {
          @include output {
            @include md\:font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
                serif;
            }
          }
        }
      }

      @include it('md\:font-mono') {
        @include assert {
          @include output {
            @include md\:font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            }
          }
        }
      }

      @include it('lg\:font-sans') {
        @include assert {
          @include output {
            @include lg\:font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              font-family: ui-sans-serif, system-ui, sans-serif,
                'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
                'Noto Color Emoji';
            }
          }
        }
      }

      @include it('lg\:font-serif') {
        @include assert {
          @include output {
            @include lg\:font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
                serif;
            }
          }
        }
      }

      @include it('lg\:font-mono') {
        @include assert {
          @include output {
            @include lg\:font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            }
          }
        }
      }

      @include it('xl\:font-sans') {
        @include assert {
          @include output {
            @include xl\:font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              font-family: ui-sans-serif, system-ui, sans-serif,
                'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
                'Noto Color Emoji';
            }
          }
        }
      }

      @include it('xl\:font-serif') {
        @include assert {
          @include output {
            @include xl\:font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
                serif;
            }
          }
        }
      }

      @include it('xl\:font-mono') {
        @include assert {
          @include output {
            @include xl\:font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            }
          }
        }
      }

      @include it('2xl\:font-sans') {
        @include assert {
          @include output {
            @include \2xl\:font-sans;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              font-family: ui-sans-serif, system-ui, sans-serif,
                'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
                'Noto Color Emoji';
            }
          }
        }
      }

      @include it('2xl\:font-serif') {
        @include assert {
          @include output {
            @include \2xl\:font-serif;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              font-family: ui-serif, Georgia, Cambria, 'Times New Roman', Times,
                serif;
            }
          }
        }
      }

      @include it('2xl\:font-mono') {
        @include assert {
          @include output {
            @include \2xl\:font-mono;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it("font-('Open Sans')") {
        @include assert {
          @include output {
            @include font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            font-family: 'Open Sans';
          }
        }
      }

      @include it("sm\:font-('Open Sans')") {
        @include assert {
          @include output {
            @include sm\:font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              font-family: 'Open Sans';
            }
          }
        }
      }

      @include it("md\:font-('Open Sans')") {
        @include assert {
          @include output {
            @include md\:font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              font-family: 'Open Sans';
            }
          }
        }
      }

      @include it("lg\:font-('Open Sans')") {
        @include assert {
          @include output {
            @include lg\:font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              font-family: 'Open Sans';
            }
          }
        }
      }

      @include it("xl\:font-('Open Sans')") {
        @include assert {
          @include output {
            @include xl\:font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              font-family: 'Open Sans';
            }
          }
        }
      }

      @include it("2xl\:font-('Open Sans')") {
        @include assert {
          @include output {
            @include \2xl\:font-('Open Sans');
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              font-family: 'Open Sans';
            }
          }
        }
      }
    }
  }
}
