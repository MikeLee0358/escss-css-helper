@use '../../mode0' as *;
@use 'true' as *;

@include describe('5.Typography') {
  @include describe('List Style Type') {
    @include describe('Basic') {
      @include it('list-none') {
        @include assert {
          @include output {
            @include list-none;
            @include reset;
          }

          @include expect {
            list-style-type: none;
          }
        }
      }

      @include it('list-disc') {
        @include assert {
          @include output {
            @include list-disc;
            @include reset;
          }

          @include expect {
            list-style-type: disc;
          }
        }
      }

      @include it('list-decimal') {
        @include assert {
          @include output {
            @include list-decimal;
            @include reset;
          }

          @include expect {
            list-style-type: decimal;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:list-none') {
        @include assert {
          @include output {
            @include sm\:list-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              list-style-type: none;
            }
          }
        }
      }

      @include it('sm\:list-disc') {
        @include assert {
          @include output {
            @include sm\:list-disc;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              list-style-type: disc;
            }
          }
        }
      }

      @include it('sm\:list-decimal') {
        @include assert {
          @include output {
            @include sm\:list-decimal;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              list-style-type: decimal;
            }
          }
        }
      }

      @include it('md\:list-none') {
        @include assert {
          @include output {
            @include md\:list-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              list-style-type: none;
            }
          }
        }
      }

      @include it('md\:list-disc') {
        @include assert {
          @include output {
            @include md\:list-disc;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              list-style-type: disc;
            }
          }
        }
      }

      @include it('md\:list-decimal') {
        @include assert {
          @include output {
            @include md\:list-decimal;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              list-style-type: decimal;
            }
          }
        }
      }

      @include it('lg\:list-none') {
        @include assert {
          @include output {
            @include lg\:list-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              list-style-type: none;
            }
          }
        }
      }

      @include it('lg\:list-disc') {
        @include assert {
          @include output {
            @include lg\:list-disc;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              list-style-type: disc;
            }
          }
        }
      }

      @include it('lg\:list-decimal') {
        @include assert {
          @include output {
            @include lg\:list-decimal;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              list-style-type: decimal;
            }
          }
        }
      }

      @include it('xl\:list-none') {
        @include assert {
          @include output {
            @include xl\:list-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              list-style-type: none;
            }
          }
        }
      }

      @include it('xl\:list-disc') {
        @include assert {
          @include output {
            @include xl\:list-disc;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              list-style-type: disc;
            }
          }
        }
      }

      @include it('xl\:list-decimal') {
        @include assert {
          @include output {
            @include xl\:list-decimal;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              list-style-type: decimal;
            }
          }
        }
      }

      @include it('2xl\:list-none') {
        @include assert {
          @include output {
            @include \2xl\:list-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              list-style-type: none;
            }
          }
        }
      }

      @include it('2xl\:list-disc') {
        @include assert {
          @include output {
            @include \2xl\:list-disc;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              list-style-type: disc;
            }
          }
        }
      }

      @include it('2xl\:list-decimal') {
        @include assert {
          @include output {
            @include \2xl\:list-decimal;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              list-style-type: decimal;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('list-(upper-roman)') {
        @include assert {
          @include output {
            @include list-(upper-roman);
            @include reset;
          }

          @include expect {
            list-style-type: upper-roman;
          }
        }
      }

      @include it('sm\:list-(upper-roman)') {
        @include assert {
          @include output {
            @include sm\:list-(upper-roman);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              list-style-type: upper-roman;
            }
          }
        }
      }

      @include it('md\:list-(upper-roman)') {
        @include assert {
          @include output {
            @include md\:list-(upper-roman);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              list-style-type: upper-roman;
            }
          }
        }
      }

      @include it('lg\:list-(upper-roman)') {
        @include assert {
          @include output {
            @include lg\:list-(upper-roman);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              list-style-type: upper-roman;
            }
          }
        }
      }

      @include it('xl\:list-(upper-roman)') {
        @include assert {
          @include output {
            @include xl\:list-(upper-roman);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              list-style-type: upper-roman;
            }
          }
        }
      }

      @include it('2xl\:list-(upper-roman)') {
        @include assert {
          @include output {
            @include \2xl\:list-(upper-roman);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              list-style-type: upper-roman;
            }
          }
        }
      }
    }
  }
}
