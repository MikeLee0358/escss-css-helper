@use '../../mode0' as *;
@use 'true' as *;

@include describe('5.Typography') {
  @include describe('Text Overflow') {
    @include describe('Basic') {
      @include it('truncate') {
        @include assert {
          @include output {
            @include truncate;
            @include reset;
          }

          @include expect {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
          }
        }
      }

      @include it('text-ellipsis') {
        @include assert {
          @include output {
            @include text-ellipsis;
            @include reset;
          }

          @include expect {
            text-overflow: ellipsis;
          }
        }
      }

      @include it('text-clip') {
        @include assert {
          @include output {
            @include text-clip;
            @include reset;
          }

          @include expect {
            text-overflow: clip;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:truncate') {
        @include assert {
          @include output {
            @include sm\:truncate;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
        }
      }

      @include it('sm\:text-ellipsis') {
        @include assert {
          @include output {
            @include sm\:text-ellipsis;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              text-overflow: ellipsis;
            }
          }
        }
      }

      @include it('sm\:text-clip') {
        @include assert {
          @include output {
            @include sm\:text-clip;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              text-overflow: clip;
            }
          }
        }
      }

      @include it('md\:truncate') {
        @include assert {
          @include output {
            @include md\:truncate;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
        }
      }

      @include it('md\:text-ellipsis') {
        @include assert {
          @include output {
            @include md\:text-ellipsis;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              text-overflow: ellipsis;
            }
          }
        }
      }

      @include it('md\:text-clip') {
        @include assert {
          @include output {
            @include md\:text-clip;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              text-overflow: clip;
            }
          }
        }
      }

      @include it('lg\:truncate') {
        @include assert {
          @include output {
            @include lg\:truncate;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
        }
      }

      @include it('lg\:text-ellipsis') {
        @include assert {
          @include output {
            @include lg\:text-ellipsis;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              text-overflow: ellipsis;
            }
          }
        }
      }

      @include it('lg\:text-clip') {
        @include assert {
          @include output {
            @include lg\:text-clip;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              text-overflow: clip;
            }
          }
        }
      }

      @include it('xl\:truncate') {
        @include assert {
          @include output {
            @include xl\:truncate;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
        }
      }

      @include it('xl\:text-ellipsis') {
        @include assert {
          @include output {
            @include xl\:text-ellipsis;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              text-overflow: ellipsis;
            }
          }
        }
      }

      @include it('xl\:text-clip') {
        @include assert {
          @include output {
            @include xl\:text-clip;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              text-overflow: clip;
            }
          }
        }
      }

      @include it('2xl\:truncate') {
        @include assert {
          @include output {
            @include \2xl\:truncate;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
        }
      }

      @include it('2xl\:text-ellipsis') {
        @include assert {
          @include output {
            @include \2xl\:text-ellipsis;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              text-overflow: ellipsis;
            }
          }
        }
      }

      @include it('2xl\:text-clip') {
        @include assert {
          @include output {
            @include \2xl\:text-clip;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              text-overflow: clip;
            }
          }
        }
      }
    }
  }
}
