@use '../../mode0' as *;
@use 'true' as *;

@include describe('1.Layout') {
  @include describe('Visibility') {
    @include describe('Basic') {
      @include it('visible') {
        @include assert {
          @include output {
            @include visible;
            @include reset;
          }

          @include expect {
            visibility: visible;
          }
        }
      }

      @include it('invisible') {
        @include assert {
          @include output {
            @include invisible;
            @include reset;
          }

          @include expect {
            visibility: hidden;
          }
        }
      }

      @include it('collapse') {
        @include assert {
          @include output {
            @include collapse;
            @include reset;
          }

          @include expect {
            visibility: collapse;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:visible') {
        @include assert {
          @include output {
            @include sm\:visible;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              visibility: visible;
            }
          }
        }
      }

      @include it('sm\:invisible') {
        @include assert {
          @include output {
            @include sm\:invisible;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              visibility: hidden;
            }
          }
        }
      }

      @include it('sm\:collapse') {
        @include assert {
          @include output {
            @include sm\:collapse;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              visibility: collapse;
            }
          }
        }
      }

      @include it('md\:visible') {
        @include assert {
          @include output {
            @include md\:visible;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              visibility: visible;
            }
          }
        }
      }

      @include it('md\:invisible') {
        @include assert {
          @include output {
            @include md\:invisible;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              visibility: hidden;
            }
          }
        }
      }

      @include it('md\:collapse') {
        @include assert {
          @include output {
            @include md\:collapse;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              visibility: collapse;
            }
          }
        }
      }

      @include it('lg\:visible') {
        @include assert {
          @include output {
            @include lg\:visible;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              visibility: visible;
            }
          }
        }
      }

      @include it('lg\:invisible') {
        @include assert {
          @include output {
            @include lg\:invisible;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              visibility: hidden;
            }
          }
        }
      }

      @include it('lg\:collapse') {
        @include assert {
          @include output {
            @include lg\:collapse;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              visibility: collapse;
            }
          }
        }
      }

      @include it('xl\:visible') {
        @include assert {
          @include output {
            @include xl\:visible;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              visibility: visible;
            }
          }
        }
      }

      @include it('xl\:invisible') {
        @include assert {
          @include output {
            @include xl\:invisible;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              visibility: hidden;
            }
          }
        }
      }

      @include it('xl\:collapse') {
        @include assert {
          @include output {
            @include xl\:collapse;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              visibility: collapse;
            }
          }
        }
      }

      @include it('2xl\:visible') {
        @include assert {
          @include output {
            @include \2xl\:visible;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              visibility: visible;
            }
          }
        }
      }

      @include it('2xl\:invisible') {
        @include assert {
          @include output {
            @include \2xl\:invisible;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              visibility: hidden;
            }
          }
        }
      }

      @include it('2xl\:collapse') {
        @include assert {
          @include output {
            @include \2xl\:collapse;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              visibility: collapse;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('z-(100)') {
        @include assert {
          @include output {
            @include z-(100);
            @include reset;
          }

          @include expect {
            z-index: 100;
          }
        }
      }

      @include it('sm\:z-(100)') {
        @include assert {
          @include output {
            @include sm\:z-(100);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              z-index: 100;
            }
          }
        }
      }

      @include it('md\:z-(100)') {
        @include assert {
          @include output {
            @include md\:z-(100);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              z-index: 100;
            }
          }
        }
      }

      @include it('lg\:z-(100)') {
        @include assert {
          @include output {
            @include lg\:z-(100);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              z-index: 100;
            }
          }
        }
      }

      @include it('xl\:z-(100)') {
        @include assert {
          @include output {
            @include xl\:z-(100);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              z-index: 100;
            }
          }
        }
      }

      @include it('2xl\:z-(100)') {
        @include assert {
          @include output {
            @include \2xl\:z-(100);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              z-index: 100;
            }
          }
        }
      }
    }
  }
}
