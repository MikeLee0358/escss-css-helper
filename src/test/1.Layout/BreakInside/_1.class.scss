@use '../../mode0' as *;
@use 'true' as *;

@include describe('1.Layout') {
  @include describe('Break Inside') {
    @include describe('Basic') {
      @include it('break-inside-auto') {
        @include assert {
          @include output {
            @include break-inside-auto;
            @include reset;
          }

          @include expect {
            break-inside: auto;
          }
        }
      }

      @include it('break-inside-avoid') {
        @include assert {
          @include output {
            @include break-inside-avoid;
            @include reset;
          }

          @include expect {
            break-inside: avoid;
          }
        }
      }

      @include it('break-inside-avoid-page') {
        @include assert {
          @include output {
            @include break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            break-inside: avoid-page;
          }
        }
      }

      @include it('break-inside-avoid-column') {
        @include assert {
          @include output {
            @include break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            break-inside: avoid-column;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:break-inside-auto') {
        @include assert {
          @include output {
            @include sm\:break-inside-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              break-inside: auto;
            }
          }
        }
      }

      @include it('sm\:break-inside-avoid') {
        @include assert {
          @include output {
            @include sm\:break-inside-avoid;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              break-inside: avoid;
            }
          }
        }
      }

      @include it('sm\:break-inside-avoid-page') {
        @include assert {
          @include output {
            @include sm\:break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              break-inside: avoid-page;
            }
          }
        }
      }

      @include it('sm\:break-inside-avoid-column') {
        @include assert {
          @include output {
            @include sm\:break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              break-inside: avoid-column;
            }
          }
        }
      }

      @include it('md\:break-inside-auto') {
        @include assert {
          @include output {
            @include md\:break-inside-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              break-inside: auto;
            }
          }
        }
      }

      @include it('md\:break-inside-avoid') {
        @include assert {
          @include output {
            @include md\:break-inside-avoid;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              break-inside: avoid;
            }
          }
        }
      }

      @include it('md\:break-inside-avoid-page') {
        @include assert {
          @include output {
            @include md\:break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              break-inside: avoid-page;
            }
          }
        }
      }

      @include it('md\:break-inside-avoid-column') {
        @include assert {
          @include output {
            @include md\:break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              break-inside: avoid-column;
            }
          }
        }
      }

      @include it('lg\:break-inside-auto') {
        @include assert {
          @include output {
            @include lg\:break-inside-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              break-inside: auto;
            }
          }
        }
      }

      @include it('lg\:break-inside-avoid') {
        @include assert {
          @include output {
            @include lg\:break-inside-avoid;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              break-inside: avoid;
            }
          }
        }
      }

      @include it('lg\:break-inside-avoid-page') {
        @include assert {
          @include output {
            @include lg\:break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              break-inside: avoid-page;
            }
          }
        }
      }

      @include it('lg\:break-inside-avoid-column') {
        @include assert {
          @include output {
            @include lg\:break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              break-inside: avoid-column;
            }
          }
        }
      }

      @include it('xl\:break-inside-auto') {
        @include assert {
          @include output {
            @include xl\:break-inside-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              break-inside: auto;
            }
          }
        }
      }

      @include it('xl\:break-inside-avoid') {
        @include assert {
          @include output {
            @include xl\:break-inside-avoid;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              break-inside: avoid;
            }
          }
        }
      }

      @include it('xl\:break-inside-avoid-page') {
        @include assert {
          @include output {
            @include xl\:break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              break-inside: avoid-page;
            }
          }
        }
      }

      @include it('xl\:break-inside-avoid-column') {
        @include assert {
          @include output {
            @include xl\:break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              break-inside: avoid-column;
            }
          }
        }
      }

      @include it('2xl\:break-inside-auto') {
        @include assert {
          @include output {
            @include \2xl\:break-inside-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              break-inside: auto;
            }
          }
        }
      }

      @include it('2xl\:break-inside-avoid') {
        @include assert {
          @include output {
            @include \2xl\:break-inside-avoid;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              break-inside: avoid;
            }
          }
        }
      }

      @include it('2xl\:break-inside-avoid-page') {
        @include assert {
          @include output {
            @include \2xl\:break-inside-avoid-page;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              break-inside: avoid-page;
            }
          }
        }
      }

      @include it('2xl\:break-inside-avoid-column') {
        @include assert {
          @include output {
            @include \2xl\:break-inside-avoid-column;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              break-inside: avoid-column;
            }
          }
        }
      }
    }
  }
}
