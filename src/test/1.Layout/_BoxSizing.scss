@import '../_classic_only';

@include describe('1.Layout') {
  @include describe('Box Sizing') {
    @include describe('Basic') {
      @include it('box-border') {
        @include assert {
          @include output {
            @include box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-sizing: border-box;
          }
        }
      }

      @include it('box-content') {
        @include assert {
          @include output {
            @include box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            box-sizing: content-box;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:box-border') {
        @include assert {
          @include output {
            @include sm\:box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-sizing: border-box;
            }
          }
        }
      }

      @include it('sm\:box-content') {
        @include assert {
          @include output {
            @include sm\:box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              box-sizing: content-box;
            }
          }
        }
      }

      @include it('md\:box-border') {
        @include assert {
          @include output {
            @include md\:box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-sizing: border-box;
            }
          }
        }
      }

      @include it('md\:box-content') {
        @include assert {
          @include output {
            @include md\:box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              box-sizing: content-box;
            }
          }
        }
      }

      @include it('lg\:box-border') {
        @include assert {
          @include output {
            @include lg\:box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-sizing: border-box;
            }
          }
        }
      }

      @include it('lg\:box-content') {
        @include assert {
          @include output {
            @include lg\:box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              box-sizing: content-box;
            }
          }
        }
      }

      @include it('xl\:box-border') {
        @include assert {
          @include output {
            @include xl\:box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-sizing: border-box;
            }
          }
        }
      }

      @include it('xl\:box-content') {
        @include assert {
          @include output {
            @include xl\:box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              box-sizing: content-box;
            }
          }
        }
      }

      @include it('2xl\:box-border') {
        @include assert {
          @include output {
            @include \2xl\:box-border;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-sizing: border-box;
            }
          }
        }
      }

      @include it('2xl\:box-content') {
        @include assert {
          @include output {
            @include \2xl\:box-content;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              box-sizing: content-box;
            }
          }
        }
      }
    }
  }
}
