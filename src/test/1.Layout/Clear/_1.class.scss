@use '../../mode0' as *;
@use 'true' as *;

@include describe('1.Layout') {
  @include describe('Clear') {
    @include describe('Basic') {
      @include it('clear-start') {
        @include assert {
          @include output {
            @include clear-start;
            @include reset;
          }

          @include expect {
            clear: inline-start;
          }
        }
      }

      @include it('clear-end') {
        @include assert {
          @include output {
            @include clear-end;
            @include reset;
          }

          @include expect {
            clear: inline-end;
          }
        }
      }

      @include it('clear-left') {
        @include assert {
          @include output {
            @include clear-left;
            @include reset;
          }

          @include expect {
            clear: left;
          }
        }
      }

      @include it('clear-right') {
        @include assert {
          @include output {
            @include clear-right;
            @include reset;
          }

          @include expect {
            clear: right;
          }
        }
      }

      @include it('clear-both') {
        @include assert {
          @include output {
            @include clear-both;
            @include reset;
          }

          @include expect {
            clear: both;
          }
        }
      }

      @include it('clear-none') {
        @include assert {
          @include output {
            @include clear-none;
            @include reset;
          }

          @include expect {
            clear: none;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:clear-start') {
        @include assert {
          @include output {
            @include sm\:clear-start;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: inline-start;
            }
          }
        }
      }

      @include it('sm\:clear-end') {
        @include assert {
          @include output {
            @include sm\:clear-end;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: inline-end;
            }
          }
        }
      }

      @include it('sm\:clear-left') {
        @include assert {
          @include output {
            @include sm\:clear-left;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: left;
            }
          }
        }
      }

      @include it('sm\:clear-right') {
        @include assert {
          @include output {
            @include sm\:clear-right;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: right;
            }
          }
        }
      }

      @include it('sm\:clear-both') {
        @include assert {
          @include output {
            @include sm\:clear-both;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: both;
            }
          }
        }
      }

      @include it('sm\:clear-none') {
        @include assert {
          @include output {
            @include sm\:clear-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              clear: none;
            }
          }
        }
      }

      @include it('md\:clear-start') {
        @include assert {
          @include output {
            @include md\:clear-start;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: inline-start;
            }
          }
        }
      }

      @include it('md\:clear-end') {
        @include assert {
          @include output {
            @include md\:clear-end;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: inline-end;
            }
          }
        }
      }

      @include it('md\:clear-left') {
        @include assert {
          @include output {
            @include md\:clear-left;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: left;
            }
          }
        }
      }

      @include it('md\:clear-right') {
        @include assert {
          @include output {
            @include md\:clear-right;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: right;
            }
          }
        }
      }

      @include it('md\:clear-both') {
        @include assert {
          @include output {
            @include md\:clear-both;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: both;
            }
          }
        }
      }

      @include it('md\:clear-none') {
        @include assert {
          @include output {
            @include md\:clear-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              clear: none;
            }
          }
        }
      }

      @include it('lg\:clear-start') {
        @include assert {
          @include output {
            @include lg\:clear-start;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: inline-start;
            }
          }
        }
      }

      @include it('lg\:clear-end') {
        @include assert {
          @include output {
            @include lg\:clear-end;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: inline-end;
            }
          }
        }
      }

      @include it('lg\:clear-left') {
        @include assert {
          @include output {
            @include lg\:clear-left;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: left;
            }
          }
        }
      }

      @include it('lg\:clear-right') {
        @include assert {
          @include output {
            @include lg\:clear-right;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: right;
            }
          }
        }
      }

      @include it('lg\:clear-both') {
        @include assert {
          @include output {
            @include lg\:clear-both;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: both;
            }
          }
        }
      }

      @include it('lg\:clear-none') {
        @include assert {
          @include output {
            @include lg\:clear-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              clear: none;
            }
          }
        }
      }

      @include it('xl\:clear-start') {
        @include assert {
          @include output {
            @include xl\:clear-start;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: inline-start;
            }
          }
        }
      }

      @include it('xl\:clear-end') {
        @include assert {
          @include output {
            @include xl\:clear-end;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: inline-end;
            }
          }
        }
      }

      @include it('xl\:clear-left') {
        @include assert {
          @include output {
            @include xl\:clear-left;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: left;
            }
          }
        }
      }

      @include it('xl\:clear-right') {
        @include assert {
          @include output {
            @include xl\:clear-right;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: right;
            }
          }
        }
      }

      @include it('xl\:clear-both') {
        @include assert {
          @include output {
            @include xl\:clear-both;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: both;
            }
          }
        }
      }

      @include it('xl\:clear-none') {
        @include assert {
          @include output {
            @include xl\:clear-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              clear: none;
            }
          }
        }
      }

      @include it('2xl\:clear-start') {
        @include assert {
          @include output {
            @include \2xl\:clear-start;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: inline-start;
            }
          }
        }
      }

      @include it('2xl\:clear-end') {
        @include assert {
          @include output {
            @include \2xl\:clear-end;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: inline-end;
            }
          }
        }
      }

      @include it('2xl\:clear-left') {
        @include assert {
          @include output {
            @include \2xl\:clear-left;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: left;
            }
          }
        }
      }

      @include it('2xl\:clear-right') {
        @include assert {
          @include output {
            @include \2xl\:clear-right;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: right;
            }
          }
        }
      }

      @include it('2xl\:clear-both') {
        @include assert {
          @include output {
            @include \2xl\:clear-both;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: both;
            }
          }
        }
      }

      @include it('2xl\:clear-none') {
        @include assert {
          @include output {
            @include \2xl\:clear-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              clear: none;
            }
          }
        }
      }
    }
  }
}
