@use '../../mode0' as *;
@use 'true' as *;

@include describe('4.Size') {
  @include describe('Max-Height') {
    @include describe('Basic') {
      @include it('max-h-0') {
        @include assert {
          @include output {
            @include max-h-0;
            @include reset;
          }

          @include expect {
            max-height: 0px;
          }
        }
      }

      @include it('max-h-px') {
        @include assert {
          @include output {
            @include max-h-px;
            @include reset;
          }

          @include expect {
            max-height: 1px;
          }
        }
      }

      @include it('max-h-0\.5') {
        @include assert {
          @include output {
            @include max-h-0\.5;
            @include reset;
          }

          @include expect {
            max-height: 0.125rem;
          }
        }
      }

      @include it('max-h-1') {
        @include assert {
          @include output {
            @include max-h-1;
            @include reset;
          }

          @include expect {
            max-height: 0.25rem;
          }
        }
      }

      @include it('max-h-1\.5') {
        @include assert {
          @include output {
            @include max-h-1\.5;
            @include reset;
          }

          @include expect {
            max-height: 0.375rem;
          }
        }
      }

      @include it('max-h-2') {
        @include assert {
          @include output {
            @include max-h-2;
            @include reset;
          }

          @include expect {
            max-height: 0.5rem;
          }
        }
      }

      @include it('max-h-2\.5') {
        @include assert {
          @include output {
            @include max-h-2\.5;
            @include reset;
          }

          @include expect {
            max-height: 0.625rem;
          }
        }
      }

      @include it('max-h-3') {
        @include assert {
          @include output {
            @include max-h-3;
            @include reset;
          }

          @include expect {
            max-height: 0.75rem;
          }
        }
      }

      @include it('max-h-3\.5') {
        @include assert {
          @include output {
            @include max-h-3\.5;
            @include reset;
          }

          @include expect {
            max-height: 0.875rem;
          }
        }
      }

      @include it('max-h-4') {
        @include assert {
          @include output {
            @include max-h-4;
            @include reset;
          }

          @include expect {
            max-height: 1rem;
          }
        }
      }

      @include it('max-h-5') {
        @include assert {
          @include output {
            @include max-h-5;
            @include reset;
          }

          @include expect {
            max-height: 1.25rem;
          }
        }
      }

      @include it('max-h-6') {
        @include assert {
          @include output {
            @include max-h-6;
            @include reset;
          }

          @include expect {
            max-height: 1.5rem;
          }
        }
      }

      @include it('max-h-7') {
        @include assert {
          @include output {
            @include max-h-7;
            @include reset;
          }

          @include expect {
            max-height: 1.75rem;
          }
        }
      }

      @include it('max-h-8') {
        @include assert {
          @include output {
            @include max-h-8;
            @include reset;
          }

          @include expect {
            max-height: 2rem;
          }
        }
      }

      @include it('max-h-9') {
        @include assert {
          @include output {
            @include max-h-9;
            @include reset;
          }

          @include expect {
            max-height: 2.25rem;
          }
        }
      }

      @include it('max-h-10') {
        @include assert {
          @include output {
            @include max-h-10;
            @include reset;
          }

          @include expect {
            max-height: 2.5rem;
          }
        }
      }

      @include it('max-h-11') {
        @include assert {
          @include output {
            @include max-h-11;
            @include reset;
          }

          @include expect {
            max-height: 2.75rem;
          }
        }
      }

      @include it('max-h-12') {
        @include assert {
          @include output {
            @include max-h-12;
            @include reset;
          }

          @include expect {
            max-height: 3rem;
          }
        }
      }

      @include it('max-h-14') {
        @include assert {
          @include output {
            @include max-h-14;
            @include reset;
          }

          @include expect {
            max-height: 3.5rem;
          }
        }
      }

      @include it('max-h-16') {
        @include assert {
          @include output {
            @include max-h-16;
            @include reset;
          }

          @include expect {
            max-height: 4rem;
          }
        }
      }

      @include it('max-h-20') {
        @include assert {
          @include output {
            @include max-h-20;
            @include reset;
          }

          @include expect {
            max-height: 5rem;
          }
        }
      }

      @include it('max-h-24') {
        @include assert {
          @include output {
            @include max-h-24;
            @include reset;
          }

          @include expect {
            max-height: 6rem;
          }
        }
      }

      @include it('max-h-28') {
        @include assert {
          @include output {
            @include max-h-28;
            @include reset;
          }

          @include expect {
            max-height: 7rem;
          }
        }
      }

      @include it('max-h-32') {
        @include assert {
          @include output {
            @include max-h-32;
            @include reset;
          }

          @include expect {
            max-height: 8rem;
          }
        }
      }

      @include it('max-h-36') {
        @include assert {
          @include output {
            @include max-h-36;
            @include reset;
          }

          @include expect {
            max-height: 9rem;
          }
        }
      }

      @include it('max-h-40') {
        @include assert {
          @include output {
            @include max-h-40;
            @include reset;
          }

          @include expect {
            max-height: 10rem;
          }
        }
      }

      @include it('max-h-44') {
        @include assert {
          @include output {
            @include max-h-44;
            @include reset;
          }

          @include expect {
            max-height: 11rem;
          }
        }
      }

      @include it('max-h-48') {
        @include assert {
          @include output {
            @include max-h-48;
            @include reset;
          }

          @include expect {
            max-height: 12rem;
          }
        }
      }

      @include it('max-h-52') {
        @include assert {
          @include output {
            @include max-h-52;
            @include reset;
          }

          @include expect {
            max-height: 13rem;
          }
        }
      }

      @include it('max-h-56') {
        @include assert {
          @include output {
            @include max-h-56;
            @include reset;
          }

          @include expect {
            max-height: 14rem;
          }
        }
      }

      @include it('max-h-60') {
        @include assert {
          @include output {
            @include max-h-60;
            @include reset;
          }

          @include expect {
            max-height: 15rem;
          }
        }
      }

      @include it('max-h-64') {
        @include assert {
          @include output {
            @include max-h-64;
            @include reset;
          }

          @include expect {
            max-height: 16rem;
          }
        }
      }

      @include it('max-h-72') {
        @include assert {
          @include output {
            @include max-h-72;
            @include reset;
          }

          @include expect {
            max-height: 18rem;
          }
        }
      }

      @include it('max-h-80') {
        @include assert {
          @include output {
            @include max-h-80;
            @include reset;
          }

          @include expect {
            max-height: 20rem;
          }
        }
      }

      @include it('max-h-96') {
        @include assert {
          @include output {
            @include max-h-96;
            @include reset;
          }

          @include expect {
            max-height: 24rem;
          }
        }
      }

      @include it('max-h-none') {
        @include assert {
          @include output {
            @include max-h-none;
            @include reset;
          }

          @include expect {
            max-height: none;
          }
        }
      }

      @include it('max-h-full') {
        @include assert {
          @include output {
            @include max-h-full;
            @include reset;
          }

          @include expect {
            max-height: 100%;
          }
        }
      }

      @include it('max-h-screen') {
        @include assert {
          @include output {
            @include max-h-screen;
            @include reset;
          }

          @include expect {
            max-height: 100vh;
          }
        }
      }

      @include it('max-h-svh') {
        @include assert {
          @include output {
            @include max-h-svh;
            @include reset;
          }

          @include expect {
            max-height: 100svh;
          }
        }
      }

      @include it('max-h-lvh') {
        @include assert {
          @include output {
            @include max-h-lvh;
            @include reset;
          }

          @include expect {
            max-height: 100lvh;
          }
        }
      }

      @include it('max-h-dvh') {
        @include assert {
          @include output {
            @include max-h-dvh;
            @include reset;
          }

          @include expect {
            max-height: 100dvh;
          }
        }
      }

      @include it('max-h-min') {
        @include assert {
          @include output {
            @include max-h-min;
            @include reset;
          }

          @include expect {
            max-height: min-content;
          }
        }
      }

      @include it('max-h-max') {
        @include assert {
          @include output {
            @include max-h-max;
            @include reset;
          }

          @include expect {
            max-height: max-content;
          }
        }
      }

      @include it('max-h-fit') {
        @include assert {
          @include output {
            @include max-h-fit;
            @include reset;
          }

          @include expect {
            max-height: fit-content;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:max-h-0') {
        @include assert {
          @include output {
            @include sm\:max-h-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0px;
            }
          }
        }
      }

      @include it('sm\:max-h-px') {
        @include assert {
          @include output {
            @include sm\:max-h-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 1px;
            }
          }
        }
      }

      @include it('sm\:max-h-0\.5') {
        @include assert {
          @include output {
            @include sm\:max-h-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:max-h-1') {
        @include assert {
          @include output {
            @include sm\:max-h-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:max-h-1\.5') {
        @include assert {
          @include output {
            @include sm\:max-h-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:max-h-2') {
        @include assert {
          @include output {
            @include sm\:max-h-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:max-h-2\.5') {
        @include assert {
          @include output {
            @include sm\:max-h-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:max-h-3') {
        @include assert {
          @include output {
            @include sm\:max-h-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:max-h-3\.5') {
        @include assert {
          @include output {
            @include sm\:max-h-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:max-h-4') {
        @include assert {
          @include output {
            @include sm\:max-h-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 1rem;
            }
          }
        }
      }

      @include it('sm\:max-h-5') {
        @include assert {
          @include output {
            @include sm\:max-h-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:max-h-6') {
        @include assert {
          @include output {
            @include sm\:max-h-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:max-h-7') {
        @include assert {
          @include output {
            @include sm\:max-h-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:max-h-8') {
        @include assert {
          @include output {
            @include sm\:max-h-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 2rem;
            }
          }
        }
      }

      @include it('sm\:max-h-9') {
        @include assert {
          @include output {
            @include sm\:max-h-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:max-h-10') {
        @include assert {
          @include output {
            @include sm\:max-h-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:max-h-11') {
        @include assert {
          @include output {
            @include sm\:max-h-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:max-h-12') {
        @include assert {
          @include output {
            @include sm\:max-h-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 3rem;
            }
          }
        }
      }

      @include it('sm\:max-h-14') {
        @include assert {
          @include output {
            @include sm\:max-h-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:max-h-16') {
        @include assert {
          @include output {
            @include sm\:max-h-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 4rem;
            }
          }
        }
      }

      @include it('sm\:max-h-20') {
        @include assert {
          @include output {
            @include sm\:max-h-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 5rem;
            }
          }
        }
      }

      @include it('sm\:max-h-24') {
        @include assert {
          @include output {
            @include sm\:max-h-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 6rem;
            }
          }
        }
      }

      @include it('sm\:max-h-28') {
        @include assert {
          @include output {
            @include sm\:max-h-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 7rem;
            }
          }
        }
      }

      @include it('sm\:max-h-32') {
        @include assert {
          @include output {
            @include sm\:max-h-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 8rem;
            }
          }
        }
      }

      @include it('sm\:max-h-36') {
        @include assert {
          @include output {
            @include sm\:max-h-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 9rem;
            }
          }
        }
      }

      @include it('sm\:max-h-40') {
        @include assert {
          @include output {
            @include sm\:max-h-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 10rem;
            }
          }
        }
      }

      @include it('sm\:max-h-44') {
        @include assert {
          @include output {
            @include sm\:max-h-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 11rem;
            }
          }
        }
      }

      @include it('sm\:max-h-48') {
        @include assert {
          @include output {
            @include sm\:max-h-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 12rem;
            }
          }
        }
      }

      @include it('sm\:max-h-52') {
        @include assert {
          @include output {
            @include sm\:max-h-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 13rem;
            }
          }
        }
      }

      @include it('sm\:max-h-56') {
        @include assert {
          @include output {
            @include sm\:max-h-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 14rem;
            }
          }
        }
      }

      @include it('sm\:max-h-60') {
        @include assert {
          @include output {
            @include sm\:max-h-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 15rem;
            }
          }
        }
      }

      @include it('sm\:max-h-64') {
        @include assert {
          @include output {
            @include sm\:max-h-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 16rem;
            }
          }
        }
      }

      @include it('sm\:max-h-72') {
        @include assert {
          @include output {
            @include sm\:max-h-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 18rem;
            }
          }
        }
      }

      @include it('sm\:max-h-80') {
        @include assert {
          @include output {
            @include sm\:max-h-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 20rem;
            }
          }
        }
      }

      @include it('sm\:max-h-96') {
        @include assert {
          @include output {
            @include sm\:max-h-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 24rem;
            }
          }
        }
      }

      @include it('sm\:max-h-none') {
        @include assert {
          @include output {
            @include sm\:max-h-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: none;
            }
          }
        }
      }

      @include it('sm\:max-h-full') {
        @include assert {
          @include output {
            @include sm\:max-h-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 100%;
            }
          }
        }
      }

      @include it('sm\:max-h-screen') {
        @include assert {
          @include output {
            @include sm\:max-h-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 100vh;
            }
          }
        }
      }

      @include it('sm\:max-h-svh') {
        @include assert {
          @include output {
            @include sm\:max-h-svh;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 100svh;
            }
          }
        }
      }

      @include it('sm\:max-h-lvh') {
        @include assert {
          @include output {
            @include sm\:max-h-lvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 100lvh;
            }
          }
        }
      }

      @include it('sm\:max-h-dvh') {
        @include assert {
          @include output {
            @include sm\:max-h-dvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 100dvh;
            }
          }
        }
      }

      @include it('sm\:max-h-min') {
        @include assert {
          @include output {
            @include sm\:max-h-min;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: min-content;
            }
          }
        }
      }

      @include it('sm\:max-h-max') {
        @include assert {
          @include output {
            @include sm\:max-h-max;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: max-content;
            }
          }
        }
      }

      @include it('sm\:max-h-fit') {
        @include assert {
          @include output {
            @include sm\:max-h-fit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: fit-content;
            }
          }
        }
      }

      @include it('md\:max-h-0') {
        @include assert {
          @include output {
            @include md\:max-h-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0px;
            }
          }
        }
      }

      @include it('md\:max-h-px') {
        @include assert {
          @include output {
            @include md\:max-h-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 1px;
            }
          }
        }
      }

      @include it('md\:max-h-0\.5') {
        @include assert {
          @include output {
            @include md\:max-h-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.125rem;
            }
          }
        }
      }

      @include it('md\:max-h-1') {
        @include assert {
          @include output {
            @include md\:max-h-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.25rem;
            }
          }
        }
      }

      @include it('md\:max-h-1\.5') {
        @include assert {
          @include output {
            @include md\:max-h-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.375rem;
            }
          }
        }
      }

      @include it('md\:max-h-2') {
        @include assert {
          @include output {
            @include md\:max-h-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.5rem;
            }
          }
        }
      }

      @include it('md\:max-h-2\.5') {
        @include assert {
          @include output {
            @include md\:max-h-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.625rem;
            }
          }
        }
      }

      @include it('md\:max-h-3') {
        @include assert {
          @include output {
            @include md\:max-h-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.75rem;
            }
          }
        }
      }

      @include it('md\:max-h-3\.5') {
        @include assert {
          @include output {
            @include md\:max-h-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 0.875rem;
            }
          }
        }
      }

      @include it('md\:max-h-4') {
        @include assert {
          @include output {
            @include md\:max-h-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 1rem;
            }
          }
        }
      }

      @include it('md\:max-h-5') {
        @include assert {
          @include output {
            @include md\:max-h-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 1.25rem;
            }
          }
        }
      }

      @include it('md\:max-h-6') {
        @include assert {
          @include output {
            @include md\:max-h-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 1.5rem;
            }
          }
        }
      }

      @include it('md\:max-h-7') {
        @include assert {
          @include output {
            @include md\:max-h-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 1.75rem;
            }
          }
        }
      }

      @include it('md\:max-h-8') {
        @include assert {
          @include output {
            @include md\:max-h-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 2rem;
            }
          }
        }
      }

      @include it('md\:max-h-9') {
        @include assert {
          @include output {
            @include md\:max-h-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 2.25rem;
            }
          }
        }
      }

      @include it('md\:max-h-10') {
        @include assert {
          @include output {
            @include md\:max-h-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 2.5rem;
            }
          }
        }
      }

      @include it('md\:max-h-11') {
        @include assert {
          @include output {
            @include md\:max-h-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 2.75rem;
            }
          }
        }
      }

      @include it('md\:max-h-12') {
        @include assert {
          @include output {
            @include md\:max-h-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 3rem;
            }
          }
        }
      }

      @include it('md\:max-h-14') {
        @include assert {
          @include output {
            @include md\:max-h-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 3.5rem;
            }
          }
        }
      }

      @include it('md\:max-h-16') {
        @include assert {
          @include output {
            @include md\:max-h-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 4rem;
            }
          }
        }
      }

      @include it('md\:max-h-20') {
        @include assert {
          @include output {
            @include md\:max-h-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 5rem;
            }
          }
        }
      }

      @include it('md\:max-h-24') {
        @include assert {
          @include output {
            @include md\:max-h-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 6rem;
            }
          }
        }
      }

      @include it('md\:max-h-28') {
        @include assert {
          @include output {
            @include md\:max-h-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 7rem;
            }
          }
        }
      }

      @include it('md\:max-h-32') {
        @include assert {
          @include output {
            @include md\:max-h-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 8rem;
            }
          }
        }
      }

      @include it('md\:max-h-36') {
        @include assert {
          @include output {
            @include md\:max-h-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 9rem;
            }
          }
        }
      }

      @include it('md\:max-h-40') {
        @include assert {
          @include output {
            @include md\:max-h-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 10rem;
            }
          }
        }
      }

      @include it('md\:max-h-44') {
        @include assert {
          @include output {
            @include md\:max-h-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 11rem;
            }
          }
        }
      }

      @include it('md\:max-h-48') {
        @include assert {
          @include output {
            @include md\:max-h-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 12rem;
            }
          }
        }
      }

      @include it('md\:max-h-52') {
        @include assert {
          @include output {
            @include md\:max-h-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 13rem;
            }
          }
        }
      }

      @include it('md\:max-h-56') {
        @include assert {
          @include output {
            @include md\:max-h-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 14rem;
            }
          }
        }
      }

      @include it('md\:max-h-60') {
        @include assert {
          @include output {
            @include md\:max-h-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 15rem;
            }
          }
        }
      }

      @include it('md\:max-h-64') {
        @include assert {
          @include output {
            @include md\:max-h-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 16rem;
            }
          }
        }
      }

      @include it('md\:max-h-72') {
        @include assert {
          @include output {
            @include md\:max-h-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 18rem;
            }
          }
        }
      }

      @include it('md\:max-h-80') {
        @include assert {
          @include output {
            @include md\:max-h-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 20rem;
            }
          }
        }
      }

      @include it('md\:max-h-96') {
        @include assert {
          @include output {
            @include md\:max-h-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 24rem;
            }
          }
        }
      }

      @include it('md\:max-h-none') {
        @include assert {
          @include output {
            @include md\:max-h-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: none;
            }
          }
        }
      }

      @include it('md\:max-h-full') {
        @include assert {
          @include output {
            @include md\:max-h-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 100%;
            }
          }
        }
      }

      @include it('md\:max-h-screen') {
        @include assert {
          @include output {
            @include md\:max-h-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 100vh;
            }
          }
        }
      }

      @include it('md\:max-h-svh') {
        @include assert {
          @include output {
            @include md\:max-h-svh;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 100svh;
            }
          }
        }
      }

      @include it('md\:max-h-lvh') {
        @include assert {
          @include output {
            @include md\:max-h-lvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 100lvh;
            }
          }
        }
      }

      @include it('md\:max-h-dvh') {
        @include assert {
          @include output {
            @include md\:max-h-dvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 100dvh;
            }
          }
        }
      }

      @include it('md\:max-h-min') {
        @include assert {
          @include output {
            @include md\:max-h-min;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: min-content;
            }
          }
        }
      }

      @include it('md\:max-h-max') {
        @include assert {
          @include output {
            @include md\:max-h-max;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: max-content;
            }
          }
        }
      }

      @include it('md\:max-h-fit') {
        @include assert {
          @include output {
            @include md\:max-h-fit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: fit-content;
            }
          }
        }
      }

      @include it('lg\:max-h-0') {
        @include assert {
          @include output {
            @include lg\:max-h-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0px;
            }
          }
        }
      }

      @include it('lg\:max-h-px') {
        @include assert {
          @include output {
            @include lg\:max-h-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 1px;
            }
          }
        }
      }

      @include it('lg\:max-h-0\.5') {
        @include assert {
          @include output {
            @include lg\:max-h-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:max-h-1') {
        @include assert {
          @include output {
            @include lg\:max-h-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:max-h-1\.5') {
        @include assert {
          @include output {
            @include lg\:max-h-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:max-h-2') {
        @include assert {
          @include output {
            @include lg\:max-h-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:max-h-2\.5') {
        @include assert {
          @include output {
            @include lg\:max-h-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:max-h-3') {
        @include assert {
          @include output {
            @include lg\:max-h-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:max-h-3\.5') {
        @include assert {
          @include output {
            @include lg\:max-h-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:max-h-4') {
        @include assert {
          @include output {
            @include lg\:max-h-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 1rem;
            }
          }
        }
      }

      @include it('lg\:max-h-5') {
        @include assert {
          @include output {
            @include lg\:max-h-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:max-h-6') {
        @include assert {
          @include output {
            @include lg\:max-h-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:max-h-7') {
        @include assert {
          @include output {
            @include lg\:max-h-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:max-h-8') {
        @include assert {
          @include output {
            @include lg\:max-h-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 2rem;
            }
          }
        }
      }

      @include it('lg\:max-h-9') {
        @include assert {
          @include output {
            @include lg\:max-h-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:max-h-10') {
        @include assert {
          @include output {
            @include lg\:max-h-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:max-h-11') {
        @include assert {
          @include output {
            @include lg\:max-h-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:max-h-12') {
        @include assert {
          @include output {
            @include lg\:max-h-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 3rem;
            }
          }
        }
      }

      @include it('lg\:max-h-14') {
        @include assert {
          @include output {
            @include lg\:max-h-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:max-h-16') {
        @include assert {
          @include output {
            @include lg\:max-h-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 4rem;
            }
          }
        }
      }

      @include it('lg\:max-h-20') {
        @include assert {
          @include output {
            @include lg\:max-h-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 5rem;
            }
          }
        }
      }

      @include it('lg\:max-h-24') {
        @include assert {
          @include output {
            @include lg\:max-h-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 6rem;
            }
          }
        }
      }

      @include it('lg\:max-h-28') {
        @include assert {
          @include output {
            @include lg\:max-h-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 7rem;
            }
          }
        }
      }

      @include it('lg\:max-h-32') {
        @include assert {
          @include output {
            @include lg\:max-h-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 8rem;
            }
          }
        }
      }

      @include it('lg\:max-h-36') {
        @include assert {
          @include output {
            @include lg\:max-h-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 9rem;
            }
          }
        }
      }

      @include it('lg\:max-h-40') {
        @include assert {
          @include output {
            @include lg\:max-h-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 10rem;
            }
          }
        }
      }

      @include it('lg\:max-h-44') {
        @include assert {
          @include output {
            @include lg\:max-h-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 11rem;
            }
          }
        }
      }

      @include it('lg\:max-h-48') {
        @include assert {
          @include output {
            @include lg\:max-h-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 12rem;
            }
          }
        }
      }

      @include it('lg\:max-h-52') {
        @include assert {
          @include output {
            @include lg\:max-h-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 13rem;
            }
          }
        }
      }

      @include it('lg\:max-h-56') {
        @include assert {
          @include output {
            @include lg\:max-h-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 14rem;
            }
          }
        }
      }

      @include it('lg\:max-h-60') {
        @include assert {
          @include output {
            @include lg\:max-h-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 15rem;
            }
          }
        }
      }

      @include it('lg\:max-h-64') {
        @include assert {
          @include output {
            @include lg\:max-h-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 16rem;
            }
          }
        }
      }

      @include it('lg\:max-h-72') {
        @include assert {
          @include output {
            @include lg\:max-h-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 18rem;
            }
          }
        }
      }

      @include it('lg\:max-h-80') {
        @include assert {
          @include output {
            @include lg\:max-h-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 20rem;
            }
          }
        }
      }

      @include it('lg\:max-h-96') {
        @include assert {
          @include output {
            @include lg\:max-h-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 24rem;
            }
          }
        }
      }

      @include it('lg\:max-h-none') {
        @include assert {
          @include output {
            @include lg\:max-h-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: none;
            }
          }
        }
      }

      @include it('lg\:max-h-full') {
        @include assert {
          @include output {
            @include lg\:max-h-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 100%;
            }
          }
        }
      }

      @include it('lg\:max-h-screen') {
        @include assert {
          @include output {
            @include lg\:max-h-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 100vh;
            }
          }
        }
      }

      @include it('lg\:max-h-svh') {
        @include assert {
          @include output {
            @include lg\:max-h-svh;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 100svh;
            }
          }
        }
      }

      @include it('lg\:max-h-lvh') {
        @include assert {
          @include output {
            @include lg\:max-h-lvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 100lvh;
            }
          }
        }
      }

      @include it('lg\:max-h-dvh') {
        @include assert {
          @include output {
            @include lg\:max-h-dvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 100dvh;
            }
          }
        }
      }

      @include it('lg\:max-h-min') {
        @include assert {
          @include output {
            @include lg\:max-h-min;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: min-content;
            }
          }
        }
      }

      @include it('lg\:max-h-max') {
        @include assert {
          @include output {
            @include lg\:max-h-max;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: max-content;
            }
          }
        }
      }

      @include it('lg\:max-h-fit') {
        @include assert {
          @include output {
            @include lg\:max-h-fit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: fit-content;
            }
          }
        }
      }

      @include it('xl\:max-h-0') {
        @include assert {
          @include output {
            @include xl\:max-h-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0px;
            }
          }
        }
      }

      @include it('xl\:max-h-px') {
        @include assert {
          @include output {
            @include xl\:max-h-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 1px;
            }
          }
        }
      }

      @include it('xl\:max-h-0\.5') {
        @include assert {
          @include output {
            @include xl\:max-h-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:max-h-1') {
        @include assert {
          @include output {
            @include xl\:max-h-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:max-h-1\.5') {
        @include assert {
          @include output {
            @include xl\:max-h-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:max-h-2') {
        @include assert {
          @include output {
            @include xl\:max-h-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:max-h-2\.5') {
        @include assert {
          @include output {
            @include xl\:max-h-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:max-h-3') {
        @include assert {
          @include output {
            @include xl\:max-h-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:max-h-3\.5') {
        @include assert {
          @include output {
            @include xl\:max-h-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:max-h-4') {
        @include assert {
          @include output {
            @include xl\:max-h-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 1rem;
            }
          }
        }
      }

      @include it('xl\:max-h-5') {
        @include assert {
          @include output {
            @include xl\:max-h-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:max-h-6') {
        @include assert {
          @include output {
            @include xl\:max-h-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:max-h-7') {
        @include assert {
          @include output {
            @include xl\:max-h-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:max-h-8') {
        @include assert {
          @include output {
            @include xl\:max-h-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 2rem;
            }
          }
        }
      }

      @include it('xl\:max-h-9') {
        @include assert {
          @include output {
            @include xl\:max-h-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:max-h-10') {
        @include assert {
          @include output {
            @include xl\:max-h-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:max-h-11') {
        @include assert {
          @include output {
            @include xl\:max-h-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:max-h-12') {
        @include assert {
          @include output {
            @include xl\:max-h-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 3rem;
            }
          }
        }
      }

      @include it('xl\:max-h-14') {
        @include assert {
          @include output {
            @include xl\:max-h-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:max-h-16') {
        @include assert {
          @include output {
            @include xl\:max-h-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 4rem;
            }
          }
        }
      }

      @include it('xl\:max-h-20') {
        @include assert {
          @include output {
            @include xl\:max-h-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 5rem;
            }
          }
        }
      }

      @include it('xl\:max-h-24') {
        @include assert {
          @include output {
            @include xl\:max-h-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 6rem;
            }
          }
        }
      }

      @include it('xl\:max-h-28') {
        @include assert {
          @include output {
            @include xl\:max-h-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 7rem;
            }
          }
        }
      }

      @include it('xl\:max-h-32') {
        @include assert {
          @include output {
            @include xl\:max-h-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 8rem;
            }
          }
        }
      }

      @include it('xl\:max-h-36') {
        @include assert {
          @include output {
            @include xl\:max-h-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 9rem;
            }
          }
        }
      }

      @include it('xl\:max-h-40') {
        @include assert {
          @include output {
            @include xl\:max-h-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 10rem;
            }
          }
        }
      }

      @include it('xl\:max-h-44') {
        @include assert {
          @include output {
            @include xl\:max-h-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 11rem;
            }
          }
        }
      }

      @include it('xl\:max-h-48') {
        @include assert {
          @include output {
            @include xl\:max-h-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 12rem;
            }
          }
        }
      }

      @include it('xl\:max-h-52') {
        @include assert {
          @include output {
            @include xl\:max-h-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 13rem;
            }
          }
        }
      }

      @include it('xl\:max-h-56') {
        @include assert {
          @include output {
            @include xl\:max-h-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 14rem;
            }
          }
        }
      }

      @include it('xl\:max-h-60') {
        @include assert {
          @include output {
            @include xl\:max-h-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 15rem;
            }
          }
        }
      }

      @include it('xl\:max-h-64') {
        @include assert {
          @include output {
            @include xl\:max-h-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 16rem;
            }
          }
        }
      }

      @include it('xl\:max-h-72') {
        @include assert {
          @include output {
            @include xl\:max-h-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 18rem;
            }
          }
        }
      }

      @include it('xl\:max-h-80') {
        @include assert {
          @include output {
            @include xl\:max-h-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 20rem;
            }
          }
        }
      }

      @include it('xl\:max-h-96') {
        @include assert {
          @include output {
            @include xl\:max-h-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 24rem;
            }
          }
        }
      }

      @include it('xl\:max-h-none') {
        @include assert {
          @include output {
            @include xl\:max-h-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: none;
            }
          }
        }
      }

      @include it('xl\:max-h-full') {
        @include assert {
          @include output {
            @include xl\:max-h-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 100%;
            }
          }
        }
      }

      @include it('xl\:max-h-screen') {
        @include assert {
          @include output {
            @include xl\:max-h-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 100vh;
            }
          }
        }
      }

      @include it('xl\:max-h-svh') {
        @include assert {
          @include output {
            @include xl\:max-h-svh;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 100svh;
            }
          }
        }
      }

      @include it('xl\:max-h-lvh') {
        @include assert {
          @include output {
            @include xl\:max-h-lvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 100lvh;
            }
          }
        }
      }

      @include it('xl\:max-h-dvh') {
        @include assert {
          @include output {
            @include xl\:max-h-dvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 100dvh;
            }
          }
        }
      }

      @include it('xl\:max-h-min') {
        @include assert {
          @include output {
            @include xl\:max-h-min;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: min-content;
            }
          }
        }
      }

      @include it('xl\:max-h-max') {
        @include assert {
          @include output {
            @include xl\:max-h-max;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: max-content;
            }
          }
        }
      }

      @include it('xl\:max-h-fit') {
        @include assert {
          @include output {
            @include xl\:max-h-fit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: fit-content;
            }
          }
        }
      }

      @include it('2xl\:max-h-0') {
        @include assert {
          @include output {
            @include \2xl\:max-h-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0px;
            }
          }
        }
      }

      @include it('2xl\:max-h-px') {
        @include assert {
          @include output {
            @include \2xl\:max-h-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 1px;
            }
          }
        }
      }

      @include it('2xl\:max-h-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:max-h-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-1') {
        @include assert {
          @include output {
            @include \2xl\:max-h-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:max-h-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-2') {
        @include assert {
          @include output {
            @include \2xl\:max-h-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:max-h-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-3') {
        @include assert {
          @include output {
            @include \2xl\:max-h-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:max-h-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-4') {
        @include assert {
          @include output {
            @include \2xl\:max-h-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 1rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-5') {
        @include assert {
          @include output {
            @include \2xl\:max-h-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-6') {
        @include assert {
          @include output {
            @include \2xl\:max-h-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-7') {
        @include assert {
          @include output {
            @include \2xl\:max-h-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-8') {
        @include assert {
          @include output {
            @include \2xl\:max-h-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 2rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-9') {
        @include assert {
          @include output {
            @include \2xl\:max-h-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-10') {
        @include assert {
          @include output {
            @include \2xl\:max-h-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-11') {
        @include assert {
          @include output {
            @include \2xl\:max-h-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-12') {
        @include assert {
          @include output {
            @include \2xl\:max-h-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 3rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-14') {
        @include assert {
          @include output {
            @include \2xl\:max-h-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-16') {
        @include assert {
          @include output {
            @include \2xl\:max-h-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 4rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-20') {
        @include assert {
          @include output {
            @include \2xl\:max-h-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 5rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-24') {
        @include assert {
          @include output {
            @include \2xl\:max-h-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 6rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-28') {
        @include assert {
          @include output {
            @include \2xl\:max-h-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 7rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-32') {
        @include assert {
          @include output {
            @include \2xl\:max-h-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 8rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-36') {
        @include assert {
          @include output {
            @include \2xl\:max-h-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 9rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-40') {
        @include assert {
          @include output {
            @include \2xl\:max-h-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 10rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-44') {
        @include assert {
          @include output {
            @include \2xl\:max-h-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 11rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-48') {
        @include assert {
          @include output {
            @include \2xl\:max-h-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 12rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-52') {
        @include assert {
          @include output {
            @include \2xl\:max-h-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 13rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-56') {
        @include assert {
          @include output {
            @include \2xl\:max-h-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 14rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-60') {
        @include assert {
          @include output {
            @include \2xl\:max-h-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 15rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-64') {
        @include assert {
          @include output {
            @include \2xl\:max-h-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 16rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-72') {
        @include assert {
          @include output {
            @include \2xl\:max-h-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 18rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-80') {
        @include assert {
          @include output {
            @include \2xl\:max-h-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 20rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-96') {
        @include assert {
          @include output {
            @include \2xl\:max-h-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 24rem;
            }
          }
        }
      }

      @include it('2xl\:max-h-none') {
        @include assert {
          @include output {
            @include \2xl\:max-h-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: none;
            }
          }
        }
      }

      @include it('2xl\:max-h-full') {
        @include assert {
          @include output {
            @include \2xl\:max-h-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 100%;
            }
          }
        }
      }

      @include it('2xl\:max-h-screen') {
        @include assert {
          @include output {
            @include \2xl\:max-h-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 100vh;
            }
          }
        }
      }

      @include it('2xl\:max-h-svh') {
        @include assert {
          @include output {
            @include \2xl\:max-h-svh;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 100svh;
            }
          }
        }
      }

      @include it('2xl\:max-h-lvh') {
        @include assert {
          @include output {
            @include \2xl\:max-h-lvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 100lvh;
            }
          }
        }
      }

      @include it('2xl\:max-h-dvh') {
        @include assert {
          @include output {
            @include \2xl\:max-h-dvh;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 100dvh;
            }
          }
        }
      }

      @include it('2xl\:max-h-min') {
        @include assert {
          @include output {
            @include \2xl\:max-h-min;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: min-content;
            }
          }
        }
      }

      @include it('2xl\:max-h-max') {
        @include assert {
          @include output {
            @include \2xl\:max-h-max;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: max-content;
            }
          }
        }
      }

      @include it('2xl\:max-h-fit') {
        @include assert {
          @include output {
            @include \2xl\:max-h-fit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: fit-content;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('max-h-(220px)') {
        @include assert {
          @include output {
            @include max-h-(220px);
            @include reset;
          }

          @include expect {
            max-height: 220px;
          }
        }
      }

      @include it('sm\:max-h-(220px)') {
        @include assert {
          @include output {
            @include sm\:max-h-(220px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              max-height: 220px;
            }
          }
        }
      }

      @include it('md\:max-h-(220px)') {
        @include assert {
          @include output {
            @include md\:max-h-(220px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              max-height: 220px;
            }
          }
        }
      }

      @include it('lg\:max-h-(220px)') {
        @include assert {
          @include output {
            @include lg\:max-h-(220px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              max-height: 220px;
            }
          }
        }
      }

      @include it('xl\:max-h-(220px)') {
        @include assert {
          @include output {
            @include xl\:max-h-(220px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              max-height: 220px;
            }
          }
        }
      }

      @include it('2xl\:max-h-(220px)') {
        @include assert {
          @include output {
            @include \2xl\:max-h-(220px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              max-height: 220px;
            }
          }
        }
      }
    }
  }
}
