@use '../../mode0' as *;
@use 'true' as *;

@include describe('8.Effects') {
  @include describe('Background Blend Mode') {
    @include describe('Basic') {
      @include it('bg-blend-normal') {
        @include assert {
          @include output {
            @include bg-blend-normal;
            @include reset;
          }

          @include expect {
            background-blend-mode: normal;
          }
        }
      }

      @include it('bg-blend-multiply') {
        @include assert {
          @include output {
            @include bg-blend-multiply;
            @include reset;
          }

          @include expect {
            background-blend-mode: multiply;
          }
        }
      }

      @include it('bg-blend-screen') {
        @include assert {
          @include output {
            @include bg-blend-screen;
            @include reset;
          }

          @include expect {
            background-blend-mode: screen;
          }
        }
      }

      @include it('bg-blend-overlay') {
        @include assert {
          @include output {
            @include bg-blend-overlay;
            @include reset;
          }

          @include expect {
            background-blend-mode: overlay;
          }
        }
      }

      @include it('bg-blend-darken') {
        @include assert {
          @include output {
            @include bg-blend-darken;
            @include reset;
          }

          @include expect {
            background-blend-mode: darken;
          }
        }
      }

      @include it('bg-blend-lighten') {
        @include assert {
          @include output {
            @include bg-blend-lighten;
            @include reset;
          }

          @include expect {
            background-blend-mode: lighten;
          }
        }
      }

      @include it('bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            background-blend-mode: color-dodge;
          }
        }
      }

      @include it('bg-blend-color-burn') {
        @include assert {
          @include output {
            @include bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            background-blend-mode: color-burn;
          }
        }
      }

      @include it('bg-blend-hard-light') {
        @include assert {
          @include output {
            @include bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            background-blend-mode: hard-light;
          }
        }
      }

      @include it('bg-blend-soft-light') {
        @include assert {
          @include output {
            @include bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            background-blend-mode: soft-light;
          }
        }
      }

      @include it('bg-blend-difference') {
        @include assert {
          @include output {
            @include bg-blend-difference;
            @include reset;
          }

          @include expect {
            background-blend-mode: difference;
          }
        }
      }

      @include it('bg-blend-exclusion') {
        @include assert {
          @include output {
            @include bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            background-blend-mode: exclusion;
          }
        }
      }

      @include it('bg-blend-hue') {
        @include assert {
          @include output {
            @include bg-blend-hue;
            @include reset;
          }

          @include expect {
            background-blend-mode: hue;
          }
        }
      }

      @include it('bg-blend-saturation') {
        @include assert {
          @include output {
            @include bg-blend-saturation;
            @include reset;
          }

          @include expect {
            background-blend-mode: saturation;
          }
        }
      }

      @include it('bg-blend-color') {
        @include assert {
          @include output {
            @include bg-blend-color;
            @include reset;
          }

          @include expect {
            background-blend-mode: color;
          }
        }
      }

      @include it('bg-blend-luminosity') {
        @include assert {
          @include output {
            @include bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            background-blend-mode: luminosity;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:bg-blend-normal') {
        @include assert {
          @include output {
            @include sm\:bg-blend-normal;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: normal;
            }
          }
        }
      }

      @include it('sm\:bg-blend-multiply') {
        @include assert {
          @include output {
            @include sm\:bg-blend-multiply;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: multiply;
            }
          }
        }
      }

      @include it('sm\:bg-blend-screen') {
        @include assert {
          @include output {
            @include sm\:bg-blend-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: screen;
            }
          }
        }
      }

      @include it('sm\:bg-blend-overlay') {
        @include assert {
          @include output {
            @include sm\:bg-blend-overlay;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: overlay;
            }
          }
        }
      }

      @include it('sm\:bg-blend-darken') {
        @include assert {
          @include output {
            @include sm\:bg-blend-darken;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: darken;
            }
          }
        }
      }

      @include it('sm\:bg-blend-lighten') {
        @include assert {
          @include output {
            @include sm\:bg-blend-lighten;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: lighten;
            }
          }
        }
      }

      @include it('sm\:bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include sm\:bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: color-dodge;
            }
          }
        }
      }

      @include it('sm\:bg-blend-color-burn') {
        @include assert {
          @include output {
            @include sm\:bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: color-burn;
            }
          }
        }
      }

      @include it('sm\:bg-blend-hard-light') {
        @include assert {
          @include output {
            @include sm\:bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: hard-light;
            }
          }
        }
      }

      @include it('sm\:bg-blend-soft-light') {
        @include assert {
          @include output {
            @include sm\:bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: soft-light;
            }
          }
        }
      }

      @include it('sm\:bg-blend-difference') {
        @include assert {
          @include output {
            @include sm\:bg-blend-difference;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: difference;
            }
          }
        }
      }

      @include it('sm\:bg-blend-exclusion') {
        @include assert {
          @include output {
            @include sm\:bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: exclusion;
            }
          }
        }
      }

      @include it('sm\:bg-blend-hue') {
        @include assert {
          @include output {
            @include sm\:bg-blend-hue;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: hue;
            }
          }
        }
      }

      @include it('sm\:bg-blend-saturation') {
        @include assert {
          @include output {
            @include sm\:bg-blend-saturation;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: saturation;
            }
          }
        }
      }

      @include it('sm\:bg-blend-color') {
        @include assert {
          @include output {
            @include sm\:bg-blend-color;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: color;
            }
          }
        }
      }

      @include it('sm\:bg-blend-luminosity') {
        @include assert {
          @include output {
            @include sm\:bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              background-blend-mode: luminosity;
            }
          }
        }
      }

      @include it('md\:bg-blend-normal') {
        @include assert {
          @include output {
            @include md\:bg-blend-normal;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: normal;
            }
          }
        }
      }

      @include it('md\:bg-blend-multiply') {
        @include assert {
          @include output {
            @include md\:bg-blend-multiply;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: multiply;
            }
          }
        }
      }

      @include it('md\:bg-blend-screen') {
        @include assert {
          @include output {
            @include md\:bg-blend-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: screen;
            }
          }
        }
      }

      @include it('md\:bg-blend-overlay') {
        @include assert {
          @include output {
            @include md\:bg-blend-overlay;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: overlay;
            }
          }
        }
      }

      @include it('md\:bg-blend-darken') {
        @include assert {
          @include output {
            @include md\:bg-blend-darken;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: darken;
            }
          }
        }
      }

      @include it('md\:bg-blend-lighten') {
        @include assert {
          @include output {
            @include md\:bg-blend-lighten;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: lighten;
            }
          }
        }
      }

      @include it('md\:bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include md\:bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: color-dodge;
            }
          }
        }
      }

      @include it('md\:bg-blend-color-burn') {
        @include assert {
          @include output {
            @include md\:bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: color-burn;
            }
          }
        }
      }

      @include it('md\:bg-blend-hard-light') {
        @include assert {
          @include output {
            @include md\:bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: hard-light;
            }
          }
        }
      }

      @include it('md\:bg-blend-soft-light') {
        @include assert {
          @include output {
            @include md\:bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: soft-light;
            }
          }
        }
      }

      @include it('md\:bg-blend-difference') {
        @include assert {
          @include output {
            @include md\:bg-blend-difference;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: difference;
            }
          }
        }
      }

      @include it('md\:bg-blend-exclusion') {
        @include assert {
          @include output {
            @include md\:bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: exclusion;
            }
          }
        }
      }

      @include it('md\:bg-blend-hue') {
        @include assert {
          @include output {
            @include md\:bg-blend-hue;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: hue;
            }
          }
        }
      }

      @include it('md\:bg-blend-saturation') {
        @include assert {
          @include output {
            @include md\:bg-blend-saturation;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: saturation;
            }
          }
        }
      }

      @include it('md\:bg-blend-color') {
        @include assert {
          @include output {
            @include md\:bg-blend-color;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: color;
            }
          }
        }
      }

      @include it('md\:bg-blend-luminosity') {
        @include assert {
          @include output {
            @include md\:bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              background-blend-mode: luminosity;
            }
          }
        }
      }

      @include it('lg\:bg-blend-normal') {
        @include assert {
          @include output {
            @include lg\:bg-blend-normal;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: normal;
            }
          }
        }
      }

      @include it('lg\:bg-blend-multiply') {
        @include assert {
          @include output {
            @include lg\:bg-blend-multiply;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: multiply;
            }
          }
        }
      }

      @include it('lg\:bg-blend-screen') {
        @include assert {
          @include output {
            @include lg\:bg-blend-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: screen;
            }
          }
        }
      }

      @include it('lg\:bg-blend-overlay') {
        @include assert {
          @include output {
            @include lg\:bg-blend-overlay;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: overlay;
            }
          }
        }
      }

      @include it('lg\:bg-blend-darken') {
        @include assert {
          @include output {
            @include lg\:bg-blend-darken;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: darken;
            }
          }
        }
      }

      @include it('lg\:bg-blend-lighten') {
        @include assert {
          @include output {
            @include lg\:bg-blend-lighten;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: lighten;
            }
          }
        }
      }

      @include it('lg\:bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include lg\:bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: color-dodge;
            }
          }
        }
      }

      @include it('lg\:bg-blend-color-burn') {
        @include assert {
          @include output {
            @include lg\:bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: color-burn;
            }
          }
        }
      }

      @include it('lg\:bg-blend-hard-light') {
        @include assert {
          @include output {
            @include lg\:bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: hard-light;
            }
          }
        }
      }

      @include it('lg\:bg-blend-soft-light') {
        @include assert {
          @include output {
            @include lg\:bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: soft-light;
            }
          }
        }
      }

      @include it('lg\:bg-blend-difference') {
        @include assert {
          @include output {
            @include lg\:bg-blend-difference;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: difference;
            }
          }
        }
      }

      @include it('lg\:bg-blend-exclusion') {
        @include assert {
          @include output {
            @include lg\:bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: exclusion;
            }
          }
        }
      }

      @include it('lg\:bg-blend-hue') {
        @include assert {
          @include output {
            @include lg\:bg-blend-hue;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: hue;
            }
          }
        }
      }

      @include it('lg\:bg-blend-saturation') {
        @include assert {
          @include output {
            @include lg\:bg-blend-saturation;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: saturation;
            }
          }
        }
      }

      @include it('lg\:bg-blend-color') {
        @include assert {
          @include output {
            @include lg\:bg-blend-color;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: color;
            }
          }
        }
      }

      @include it('lg\:bg-blend-luminosity') {
        @include assert {
          @include output {
            @include lg\:bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              background-blend-mode: luminosity;
            }
          }
        }
      }

      @include it('xl\:bg-blend-normal') {
        @include assert {
          @include output {
            @include xl\:bg-blend-normal;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: normal;
            }
          }
        }
      }

      @include it('xl\:bg-blend-multiply') {
        @include assert {
          @include output {
            @include xl\:bg-blend-multiply;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: multiply;
            }
          }
        }
      }

      @include it('xl\:bg-blend-screen') {
        @include assert {
          @include output {
            @include xl\:bg-blend-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: screen;
            }
          }
        }
      }

      @include it('xl\:bg-blend-overlay') {
        @include assert {
          @include output {
            @include xl\:bg-blend-overlay;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: overlay;
            }
          }
        }
      }

      @include it('xl\:bg-blend-darken') {
        @include assert {
          @include output {
            @include xl\:bg-blend-darken;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: darken;
            }
          }
        }
      }

      @include it('xl\:bg-blend-lighten') {
        @include assert {
          @include output {
            @include xl\:bg-blend-lighten;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: lighten;
            }
          }
        }
      }

      @include it('xl\:bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include xl\:bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: color-dodge;
            }
          }
        }
      }

      @include it('xl\:bg-blend-color-burn') {
        @include assert {
          @include output {
            @include xl\:bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: color-burn;
            }
          }
        }
      }

      @include it('xl\:bg-blend-hard-light') {
        @include assert {
          @include output {
            @include xl\:bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: hard-light;
            }
          }
        }
      }

      @include it('xl\:bg-blend-soft-light') {
        @include assert {
          @include output {
            @include xl\:bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: soft-light;
            }
          }
        }
      }

      @include it('xl\:bg-blend-difference') {
        @include assert {
          @include output {
            @include xl\:bg-blend-difference;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: difference;
            }
          }
        }
      }

      @include it('xl\:bg-blend-exclusion') {
        @include assert {
          @include output {
            @include xl\:bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: exclusion;
            }
          }
        }
      }

      @include it('xl\:bg-blend-hue') {
        @include assert {
          @include output {
            @include xl\:bg-blend-hue;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: hue;
            }
          }
        }
      }

      @include it('xl\:bg-blend-saturation') {
        @include assert {
          @include output {
            @include xl\:bg-blend-saturation;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: saturation;
            }
          }
        }
      }

      @include it('xl\:bg-blend-color') {
        @include assert {
          @include output {
            @include xl\:bg-blend-color;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: color;
            }
          }
        }
      }

      @include it('xl\:bg-blend-luminosity') {
        @include assert {
          @include output {
            @include xl\:bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              background-blend-mode: luminosity;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-normal') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-normal;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: normal;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-multiply') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-multiply;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: multiply;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-screen') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-screen;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: screen;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-overlay') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-overlay;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: overlay;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-darken') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-darken;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: darken;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-lighten') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-lighten;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: lighten;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-color-dodge') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-color-dodge;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: color-dodge;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-color-burn') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-color-burn;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: color-burn;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-hard-light') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-hard-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: hard-light;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-soft-light') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-soft-light;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: soft-light;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-difference') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-difference;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: difference;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-exclusion') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-exclusion;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: exclusion;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-hue') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-hue;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: hue;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-saturation') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-saturation;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: saturation;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-color') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-color;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: color;
            }
          }
        }
      }

      @include it('2xl\:bg-blend-luminosity') {
        @include assert {
          @include output {
            @include \2xl\:bg-blend-luminosity;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              background-blend-mode: luminosity;
            }
          }
        }
      }
    }
  }
}
