@use '../../mode0' as *;
@use 'true' as *;

@include describe('8.Effects') {
  @include describe('Box Shadow Color') {
    @include describe('Basic') {
      @include it('shadow-inherit') {
        @include assert {
          @include output {
            @include shadow-inherit;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 inherit;
          }
        }
      }

      @include it('shadow-current') {
        @include assert {
          @include output {
            @include shadow-current;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 currentColor;
          }
        }
      }

      @include it('shadow-transparent') {
        @include assert {
          @include output {
            @include shadow-transparent;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 transparent;
          }
        }
      }

      @include it('shadow-slate-100') {
        @include assert {
          @include output {
            @include shadow-slate-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f1f5f9;
          }
        }
      }

      @include it('shadow-slate-200') {
        @include assert {
          @include output {
            @include shadow-slate-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e2e8f0;
          }
        }
      }

      @include it('shadow-slate-300') {
        @include assert {
          @include output {
            @include shadow-slate-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #cbd5e1;
          }
        }
      }

      @include it('shadow-slate-400') {
        @include assert {
          @include output {
            @include shadow-slate-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #94a3b8;
          }
        }
      }

      @include it('shadow-slate-500') {
        @include assert {
          @include output {
            @include shadow-slate-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #64748b;
          }
        }
      }

      @include it('shadow-slate-600') {
        @include assert {
          @include output {
            @include shadow-slate-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #475569;
          }
        }
      }

      @include it('shadow-slate-700') {
        @include assert {
          @include output {
            @include shadow-slate-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #334155;
          }
        }
      }

      @include it('shadow-slate-800') {
        @include assert {
          @include output {
            @include shadow-slate-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e293b;
          }
        }
      }

      @include it('shadow-slate-900') {
        @include assert {
          @include output {
            @include shadow-slate-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0f172a;
          }
        }
      }

      @include it('shadow-slate-950') {
        @include assert {
          @include output {
            @include shadow-slate-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #020617;
          }
        }
      }

      @include it('shadow-gray-50') {
        @include assert {
          @include output {
            @include shadow-gray-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f9fafb;
          }
        }
      }

      @include it('shadow-gray-100') {
        @include assert {
          @include output {
            @include shadow-gray-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f3f4f6;
          }
        }
      }

      @include it('shadow-gray-200') {
        @include assert {
          @include output {
            @include shadow-gray-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e5e7eb;
          }
        }
      }

      @include it('shadow-gray-300') {
        @include assert {
          @include output {
            @include shadow-gray-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d1d5db;
          }
        }
      }

      @include it('shadow-gray-400') {
        @include assert {
          @include output {
            @include shadow-gray-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9ca3af;
          }
        }
      }

      @include it('shadow-gray-500') {
        @include assert {
          @include output {
            @include shadow-gray-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6b7280;
          }
        }
      }

      @include it('shadow-gray-600') {
        @include assert {
          @include output {
            @include shadow-gray-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4b5563;
          }
        }
      }

      @include it('shadow-gray-700') {
        @include assert {
          @include output {
            @include shadow-gray-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #374151;
          }
        }
      }

      @include it('shadow-gray-800') {
        @include assert {
          @include output {
            @include shadow-gray-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1f2937;
          }
        }
      }

      @include it('shadow-gray-900') {
        @include assert {
          @include output {
            @include shadow-gray-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #111827;
          }
        }
      }

      @include it('shadow-gray-950') {
        @include assert {
          @include output {
            @include shadow-gray-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #030712;
          }
        }
      }

      @include it('shadow-zinc-50') {
        @include assert {
          @include output {
            @include shadow-zinc-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafafa;
          }
        }
      }

      @include it('shadow-zinc-100') {
        @include assert {
          @include output {
            @include shadow-zinc-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f4f4f5;
          }
        }
      }

      @include it('shadow-zinc-200') {
        @include assert {
          @include output {
            @include shadow-zinc-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e4e4e7;
          }
        }
      }

      @include it('shadow-zinc-300') {
        @include assert {
          @include output {
            @include shadow-zinc-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d4d4d8;
          }
        }
      }

      @include it('shadow-zinc-400') {
        @include assert {
          @include output {
            @include shadow-zinc-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a1a1aa;
          }
        }
      }

      @include it('shadow-zinc-500') {
        @include assert {
          @include output {
            @include shadow-zinc-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #71717a;
          }
        }
      }

      @include it('shadow-zinc-600') {
        @include assert {
          @include output {
            @include shadow-zinc-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #52525b;
          }
        }
      }

      @include it('shadow-zinc-700') {
        @include assert {
          @include output {
            @include shadow-zinc-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3f3f46;
          }
        }
      }

      @include it('shadow-zinc-800') {
        @include assert {
          @include output {
            @include shadow-zinc-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #27272a;
          }
        }
      }

      @include it('shadow-zinc-900') {
        @include assert {
          @include output {
            @include shadow-zinc-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #18181b;
          }
        }
      }

      @include it('shadow-zinc-950') {
        @include assert {
          @include output {
            @include shadow-zinc-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #09090b;
          }
        }
      }

      @include it('shadow-neutral-50') {
        @include assert {
          @include output {
            @include shadow-neutral-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafafa;
          }
        }
      }

      @include it('shadow-neutral-100') {
        @include assert {
          @include output {
            @include shadow-neutral-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5f5f5;
          }
        }
      }

      @include it('shadow-neutral-200') {
        @include assert {
          @include output {
            @include shadow-neutral-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e5e5e5;
          }
        }
      }

      @include it('shadow-neutral-300') {
        @include assert {
          @include output {
            @include shadow-neutral-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d4d4d4;
          }
        }
      }

      @include it('shadow-neutral-400') {
        @include assert {
          @include output {
            @include shadow-neutral-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a3a3a3;
          }
        }
      }

      @include it('shadow-neutral-500') {
        @include assert {
          @include output {
            @include shadow-neutral-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #737373;
          }
        }
      }

      @include it('shadow-neutral-600') {
        @include assert {
          @include output {
            @include shadow-neutral-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #525252;
          }
        }
      }

      @include it('shadow-neutral-700') {
        @include assert {
          @include output {
            @include shadow-neutral-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #404040;
          }
        }
      }

      @include it('shadow-neutral-800') {
        @include assert {
          @include output {
            @include shadow-neutral-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #262626;
          }
        }
      }

      @include it('shadow-neutral-900') {
        @include assert {
          @include output {
            @include shadow-neutral-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #171717;
          }
        }
      }

      @include it('shadow-neutral-950') {
        @include assert {
          @include output {
            @include shadow-neutral-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0a0a0a;
          }
        }
      }

      @include it('shadow-stone-50') {
        @include assert {
          @include output {
            @include shadow-stone-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafaf9;
          }
        }
      }

      @include it('shadow-stone-100') {
        @include assert {
          @include output {
            @include shadow-stone-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5f5f4;
          }
        }
      }

      @include it('shadow-stone-200') {
        @include assert {
          @include output {
            @include shadow-stone-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e7e5e4;
          }
        }
      }

      @include it('shadow-stone-300') {
        @include assert {
          @include output {
            @include shadow-stone-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d6d3d1;
          }
        }
      }

      @include it('shadow-stone-400') {
        @include assert {
          @include output {
            @include shadow-stone-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a8a29e;
          }
        }
      }

      @include it('shadow-stone-500') {
        @include assert {
          @include output {
            @include shadow-stone-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #78716c;
          }
        }
      }

      @include it('shadow-stone-600') {
        @include assert {
          @include output {
            @include shadow-stone-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #57534e;
          }
        }
      }

      @include it('shadow-stone-700') {
        @include assert {
          @include output {
            @include shadow-stone-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #44403c;
          }
        }
      }

      @include it('shadow-stone-800') {
        @include assert {
          @include output {
            @include shadow-stone-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #292524;
          }
        }
      }

      @include it('shadow-stone-900') {
        @include assert {
          @include output {
            @include shadow-stone-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1c1917;
          }
        }
      }

      @include it('shadow-stone-950') {
        @include assert {
          @include output {
            @include shadow-stone-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0c0a09;
          }
        }
      }

      @include it('shadow-red-50') {
        @include assert {
          @include output {
            @include shadow-red-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef2f2;
          }
        }
      }

      @include it('shadow-red-100') {
        @include assert {
          @include output {
            @include shadow-red-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fee2e2;
          }
        }
      }

      @include it('shadow-red-200') {
        @include assert {
          @include output {
            @include shadow-red-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fecaca;
          }
        }
      }

      @include it('shadow-red-300') {
        @include assert {
          @include output {
            @include shadow-red-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fca5a5;
          }
        }
      }

      @include it('shadow-red-400') {
        @include assert {
          @include output {
            @include shadow-red-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f87171;
          }
        }
      }

      @include it('shadow-red-500') {
        @include assert {
          @include output {
            @include shadow-red-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ef4444;
          }
        }
      }

      @include it('shadow-red-600') {
        @include assert {
          @include output {
            @include shadow-red-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dc2626;
          }
        }
      }

      @include it('shadow-red-700') {
        @include assert {
          @include output {
            @include shadow-red-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #b91c1c;
          }
        }
      }

      @include it('shadow-red-800') {
        @include assert {
          @include output {
            @include shadow-red-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #991b1b;
          }
        }
      }

      @include it('shadow-red-900') {
        @include assert {
          @include output {
            @include shadow-red-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7f1d1d;
          }
        }
      }

      @include it('shadow-red-950') {
        @include assert {
          @include output {
            @include shadow-red-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #450a0a;
          }
        }
      }

      @include it('shadow-orange-50') {
        @include assert {
          @include output {
            @include shadow-orange-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff7ed;
          }
        }
      }

      @include it('shadow-orange-100') {
        @include assert {
          @include output {
            @include shadow-orange-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ffedd5;
          }
        }
      }

      @include it('shadow-orange-200') {
        @include assert {
          @include output {
            @include shadow-orange-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fed7aa;
          }
        }
      }

      @include it('shadow-orange-300') {
        @include assert {
          @include output {
            @include shadow-orange-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdba74;
          }
        }
      }

      @include it('shadow-orange-400') {
        @include assert {
          @include output {
            @include shadow-orange-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fb923c;
          }
        }
      }

      @include it('shadow-orange-500') {
        @include assert {
          @include output {
            @include shadow-orange-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f97316;
          }
        }
      }

      @include it('shadow-orange-600') {
        @include assert {
          @include output {
            @include shadow-orange-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ea580c;
          }
        }
      }

      @include it('shadow-orange-700') {
        @include assert {
          @include output {
            @include shadow-orange-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c2410c;
          }
        }
      }

      @include it('shadow-orange-800') {
        @include assert {
          @include output {
            @include shadow-orange-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9a3412;
          }
        }
      }

      @include it('shadow-orange-900') {
        @include assert {
          @include output {
            @include shadow-orange-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7c2d12;
          }
        }
      }

      @include it('shadow-orange-950') {
        @include assert {
          @include output {
            @include shadow-orange-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #431407;
          }
        }
      }

      @include it('shadow-amber-50') {
        @include assert {
          @include output {
            @include shadow-amber-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fffbeb;
          }
        }
      }

      @include it('shadow-amber-100') {
        @include assert {
          @include output {
            @include shadow-amber-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef3c7;
          }
        }
      }

      @include it('shadow-amber-200') {
        @include assert {
          @include output {
            @include shadow-amber-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fde68a;
          }
        }
      }

      @include it('shadow-amber-300') {
        @include assert {
          @include output {
            @include shadow-amber-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fcd34d;
          }
        }
      }

      @include it('shadow-amber-400') {
        @include assert {
          @include output {
            @include shadow-amber-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fbbf24;
          }
        }
      }

      @include it('shadow-amber-500') {
        @include assert {
          @include output {
            @include shadow-amber-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f59e0b;
          }
        }
      }

      @include it('shadow-amber-600') {
        @include assert {
          @include output {
            @include shadow-amber-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d97706;
          }
        }
      }

      @include it('shadow-amber-700') {
        @include assert {
          @include output {
            @include shadow-amber-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #b45309;
          }
        }
      }

      @include it('shadow-amber-800') {
        @include assert {
          @include output {
            @include shadow-amber-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #92400e;
          }
        }
      }

      @include it('shadow-amber-900') {
        @include assert {
          @include output {
            @include shadow-amber-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #78350f;
          }
        }
      }

      @include it('shadow-amber-950') {
        @include assert {
          @include output {
            @include shadow-amber-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #451a03;
          }
        }
      }

      @include it('shadow-yellow-50') {
        @include assert {
          @include output {
            @include shadow-yellow-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fefce8;
          }
        }
      }

      @include it('shadow-yellow-100') {
        @include assert {
          @include output {
            @include shadow-yellow-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef9c3;
          }
        }
      }

      @include it('shadow-yellow-200') {
        @include assert {
          @include output {
            @include shadow-yellow-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef08a;
          }
        }
      }

      @include it('shadow-yellow-300') {
        @include assert {
          @include output {
            @include shadow-yellow-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fde047;
          }
        }
      }

      @include it('shadow-yellow-400') {
        @include assert {
          @include output {
            @include shadow-yellow-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #facc15;
          }
        }
      }

      @include it('shadow-yellow-500') {
        @include assert {
          @include output {
            @include shadow-yellow-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eab308;
          }
        }
      }

      @include it('shadow-yellow-600') {
        @include assert {
          @include output {
            @include shadow-yellow-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ca8a04;
          }
        }
      }

      @include it('shadow-yellow-700') {
        @include assert {
          @include output {
            @include shadow-yellow-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a16207;
          }
        }
      }

      @include it('shadow-yellow-800') {
        @include assert {
          @include output {
            @include shadow-yellow-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #854d0e;
          }
        }
      }

      @include it('shadow-yellow-900') {
        @include assert {
          @include output {
            @include shadow-yellow-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #713f12;
          }
        }
      }

      @include it('shadow-yellow-950') {
        @include assert {
          @include output {
            @include shadow-yellow-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #422006;
          }
        }
      }

      @include it('shadow-lime-50') {
        @include assert {
          @include output {
            @include shadow-lime-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f7fee7;
          }
        }
      }

      @include it('shadow-lime-100') {
        @include assert {
          @include output {
            @include shadow-lime-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfccb;
          }
        }
      }

      @include it('shadow-lime-200') {
        @include assert {
          @include output {
            @include shadow-lime-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d9f99d;
          }
        }
      }

      @include it('shadow-lime-300') {
        @include assert {
          @include output {
            @include shadow-lime-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bef264;
          }
        }
      }

      @include it('shadow-lime-400') {
        @include assert {
          @include output {
            @include shadow-lime-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a3e635;
          }
        }
      }

      @include it('shadow-lime-500') {
        @include assert {
          @include output {
            @include shadow-lime-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #84cc16;
          }
        }
      }

      @include it('shadow-lime-600') {
        @include assert {
          @include output {
            @include shadow-lime-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #65a30d;
          }
        }
      }

      @include it('shadow-lime-700') {
        @include assert {
          @include output {
            @include shadow-lime-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4d7c0f;
          }
        }
      }

      @include it('shadow-lime-800') {
        @include assert {
          @include output {
            @include shadow-lime-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3f6212;
          }
        }
      }

      @include it('shadow-lime-900') {
        @include assert {
          @include output {
            @include shadow-lime-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #365314;
          }
        }
      }

      @include it('shadow-lime-950') {
        @include assert {
          @include output {
            @include shadow-lime-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1a2e05;
          }
        }
      }

      @include it('shadow-green-50') {
        @include assert {
          @include output {
            @include shadow-green-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0fdf4;
          }
        }
      }

      @include it('shadow-green-100') {
        @include assert {
          @include output {
            @include shadow-green-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dcfce7;
          }
        }
      }

      @include it('shadow-green-200') {
        @include assert {
          @include output {
            @include shadow-green-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bbf7d0;
          }
        }
      }

      @include it('shadow-green-300') {
        @include assert {
          @include output {
            @include shadow-green-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #86efac;
          }
        }
      }

      @include it('shadow-green-400') {
        @include assert {
          @include output {
            @include shadow-green-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4ade80;
          }
        }
      }

      @include it('shadow-green-500') {
        @include assert {
          @include output {
            @include shadow-green-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #22c55e;
          }
        }
      }

      @include it('shadow-green-600') {
        @include assert {
          @include output {
            @include shadow-green-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #16a34a;
          }
        }
      }

      @include it('shadow-green-700') {
        @include assert {
          @include output {
            @include shadow-green-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #15803d;
          }
        }
      }

      @include it('shadow-green-800') {
        @include assert {
          @include output {
            @include shadow-green-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #166534;
          }
        }
      }

      @include it('shadow-green-900') {
        @include assert {
          @include output {
            @include shadow-green-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #14532d;
          }
        }
      }

      @include it('shadow-green-950') {
        @include assert {
          @include output {
            @include shadow-green-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #052e16;
          }
        }
      }

      @include it('shadow-emerald-50') {
        @include assert {
          @include output {
            @include shadow-emerald-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfdf5;
          }
        }
      }

      @include it('shadow-emerald-100') {
        @include assert {
          @include output {
            @include shadow-emerald-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d1fae5;
          }
        }
      }

      @include it('shadow-emerald-200') {
        @include assert {
          @include output {
            @include shadow-emerald-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a7f3d0;
          }
        }
      }

      @include it('shadow-emerald-300') {
        @include assert {
          @include output {
            @include shadow-emerald-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6ee7b7;
          }
        }
      }

      @include it('shadow-emerald-400') {
        @include assert {
          @include output {
            @include shadow-emerald-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #34d399;
          }
        }
      }

      @include it('shadow-emerald-500') {
        @include assert {
          @include output {
            @include shadow-emerald-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #10b981;
          }
        }
      }

      @include it('shadow-emerald-600') {
        @include assert {
          @include output {
            @include shadow-emerald-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #059669;
          }
        }
      }

      @include it('shadow-emerald-700') {
        @include assert {
          @include output {
            @include shadow-emerald-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #047857;
          }
        }
      }

      @include it('shadow-emerald-800') {
        @include assert {
          @include output {
            @include shadow-emerald-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #065f46;
          }
        }
      }

      @include it('shadow-emerald-900') {
        @include assert {
          @include output {
            @include shadow-emerald-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #064e3b;
          }
        }
      }

      @include it('shadow-emerald-950') {
        @include assert {
          @include output {
            @include shadow-emerald-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #022c22;
          }
        }
      }

      @include it('shadow-teal-50') {
        @include assert {
          @include output {
            @include shadow-teal-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0fdfa;
          }
        }
      }

      @include it('shadow-teal-100') {
        @include assert {
          @include output {
            @include shadow-teal-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ccfbf1;
          }
        }
      }

      @include it('shadow-teal-200') {
        @include assert {
          @include output {
            @include shadow-teal-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #99f6e4;
          }
        }
      }

      @include it('shadow-teal-300') {
        @include assert {
          @include output {
            @include shadow-teal-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #5eead4;
          }
        }
      }

      @include it('shadow-teal-400') {
        @include assert {
          @include output {
            @include shadow-teal-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2dd4bf;
          }
        }
      }

      @include it('shadow-teal-500') {
        @include assert {
          @include output {
            @include shadow-teal-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #14b8a6;
          }
        }
      }

      @include it('shadow-teal-600') {
        @include assert {
          @include output {
            @include shadow-teal-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0d9488;
          }
        }
      }

      @include it('shadow-teal-700') {
        @include assert {
          @include output {
            @include shadow-teal-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0f766e;
          }
        }
      }

      @include it('shadow-teal-800') {
        @include assert {
          @include output {
            @include shadow-teal-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #115e59;
          }
        }
      }

      @include it('shadow-teal-900') {
        @include assert {
          @include output {
            @include shadow-teal-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #134e4a;
          }
        }
      }

      @include it('shadow-teal-950') {
        @include assert {
          @include output {
            @include shadow-teal-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #042f2e;
          }
        }
      }

      @include it('shadow-cyan-50') {
        @include assert {
          @include output {
            @include shadow-cyan-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfeff;
          }
        }
      }

      @include it('shadow-cyan-100') {
        @include assert {
          @include output {
            @include shadow-cyan-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #cffafe;
          }
        }
      }

      @include it('shadow-cyan-200') {
        @include assert {
          @include output {
            @include shadow-cyan-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a5f3fc;
          }
        }
      }

      @include it('shadow-cyan-300') {
        @include assert {
          @include output {
            @include shadow-cyan-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #67e8f9;
          }
        }
      }

      @include it('shadow-cyan-400') {
        @include assert {
          @include output {
            @include shadow-cyan-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #22d3ee;
          }
        }
      }

      @include it('shadow-cyan-500') {
        @include assert {
          @include output {
            @include shadow-cyan-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #06b6d4;
          }
        }
      }

      @include it('shadow-cyan-600') {
        @include assert {
          @include output {
            @include shadow-cyan-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0891b2;
          }
        }
      }

      @include it('shadow-cyan-700') {
        @include assert {
          @include output {
            @include shadow-cyan-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0e7490;
          }
        }
      }

      @include it('shadow-cyan-800') {
        @include assert {
          @include output {
            @include shadow-cyan-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #155e75;
          }
        }
      }

      @include it('shadow-cyan-900') {
        @include assert {
          @include output {
            @include shadow-cyan-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #164e63;
          }
        }
      }

      @include it('shadow-cyan-950') {
        @include assert {
          @include output {
            @include shadow-cyan-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #083344;
          }
        }
      }

      @include it('shadow-sky-50') {
        @include assert {
          @include output {
            @include shadow-sky-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0f9ff;
          }
        }
      }

      @include it('shadow-sky-100') {
        @include assert {
          @include output {
            @include shadow-sky-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e0f2fe;
          }
        }
      }

      @include it('shadow-sky-200') {
        @include assert {
          @include output {
            @include shadow-sky-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bae6fd;
          }
        }
      }

      @include it('shadow-sky-300') {
        @include assert {
          @include output {
            @include shadow-sky-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7dd3fc;
          }
        }
      }

      @include it('shadow-sky-400') {
        @include assert {
          @include output {
            @include shadow-sky-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #38bdf8;
          }
        }
      }

      @include it('shadow-sky-500') {
        @include assert {
          @include output {
            @include shadow-sky-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0ea5e9;
          }
        }
      }

      @include it('shadow-sky-600') {
        @include assert {
          @include output {
            @include shadow-sky-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0284c7;
          }
        }
      }

      @include it('shadow-sky-700') {
        @include assert {
          @include output {
            @include shadow-sky-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0369a1;
          }
        }
      }

      @include it('shadow-sky-800') {
        @include assert {
          @include output {
            @include shadow-sky-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #075985;
          }
        }
      }

      @include it('shadow-sky-900') {
        @include assert {
          @include output {
            @include shadow-sky-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0c4a6e;
          }
        }
      }

      @include it('shadow-sky-950') {
        @include assert {
          @include output {
            @include shadow-sky-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #082f49;
          }
        }
      }

      @include it('shadow-blue-50') {
        @include assert {
          @include output {
            @include shadow-blue-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eff6ff;
          }
        }
      }

      @include it('shadow-blue-100') {
        @include assert {
          @include output {
            @include shadow-blue-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dbeafe;
          }
        }
      }

      @include it('shadow-blue-200') {
        @include assert {
          @include output {
            @include shadow-blue-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bfdbfe;
          }
        }
      }

      @include it('shadow-blue-300') {
        @include assert {
          @include output {
            @include shadow-blue-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #93c5fd;
          }
        }
      }

      @include it('shadow-blue-400') {
        @include assert {
          @include output {
            @include shadow-blue-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #60a5fa;
          }
        }
      }

      @include it('shadow-blue-500') {
        @include assert {
          @include output {
            @include shadow-blue-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3b82f6;
          }
        }
      }

      @include it('shadow-blue-600') {
        @include assert {
          @include output {
            @include shadow-blue-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2563eb;
          }
        }
      }

      @include it('shadow-blue-700') {
        @include assert {
          @include output {
            @include shadow-blue-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1d4ed8;
          }
        }
      }

      @include it('shadow-blue-800') {
        @include assert {
          @include output {
            @include shadow-blue-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e40af;
          }
        }
      }

      @include it('shadow-blue-900') {
        @include assert {
          @include output {
            @include shadow-blue-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e3a8a;
          }
        }
      }

      @include it('shadow-blue-950') {
        @include assert {
          @include output {
            @include shadow-blue-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #172554;
          }
        }
      }

      @include it('shadow-indigo-50') {
        @include assert {
          @include output {
            @include shadow-indigo-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eef2ff;
          }
        }
      }

      @include it('shadow-indigo-100') {
        @include assert {
          @include output {
            @include shadow-indigo-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e0e7ff;
          }
        }
      }

      @include it('shadow-indigo-200') {
        @include assert {
          @include output {
            @include shadow-indigo-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c7d2fe;
          }
        }
      }

      @include it('shadow-indigo-300') {
        @include assert {
          @include output {
            @include shadow-indigo-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a5b4fc;
          }
        }
      }

      @include it('shadow-indigo-400') {
        @include assert {
          @include output {
            @include shadow-indigo-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #818cf8;
          }
        }
      }

      @include it('shadow-indigo-500') {
        @include assert {
          @include output {
            @include shadow-indigo-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6366f1;
          }
        }
      }

      @include it('shadow-indigo-600') {
        @include assert {
          @include output {
            @include shadow-indigo-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4f46e5;
          }
        }
      }

      @include it('shadow-indigo-700') {
        @include assert {
          @include output {
            @include shadow-indigo-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4338ca;
          }
        }
      }

      @include it('shadow-indigo-800') {
        @include assert {
          @include output {
            @include shadow-indigo-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3730a3;
          }
        }
      }

      @include it('shadow-indigo-900') {
        @include assert {
          @include output {
            @include shadow-indigo-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #312e81;
          }
        }
      }

      @include it('shadow-indigo-950') {
        @include assert {
          @include output {
            @include shadow-indigo-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e1b4b;
          }
        }
      }

      @include it('shadow-violet-50') {
        @include assert {
          @include output {
            @include shadow-violet-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5f3ff;
          }
        }
      }

      @include it('shadow-violet-100') {
        @include assert {
          @include output {
            @include shadow-violet-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ede9fe;
          }
        }
      }

      @include it('shadow-violet-200') {
        @include assert {
          @include output {
            @include shadow-violet-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ddd6fe;
          }
        }
      }

      @include it('shadow-violet-300') {
        @include assert {
          @include output {
            @include shadow-violet-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c4b5fd;
          }
        }
      }

      @include it('shadow-violet-400') {
        @include assert {
          @include output {
            @include shadow-violet-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a78bfa;
          }
        }
      }

      @include it('shadow-violet-500') {
        @include assert {
          @include output {
            @include shadow-violet-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #8b5cf6;
          }
        }
      }

      @include it('shadow-violet-600') {
        @include assert {
          @include output {
            @include shadow-violet-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7c3aed;
          }
        }
      }

      @include it('shadow-violet-700') {
        @include assert {
          @include output {
            @include shadow-violet-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6d28d9;
          }
        }
      }

      @include it('shadow-violet-800') {
        @include assert {
          @include output {
            @include shadow-violet-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #5b21b6;
          }
        }
      }

      @include it('shadow-violet-900') {
        @include assert {
          @include output {
            @include shadow-violet-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4c1d95;
          }
        }
      }

      @include it('shadow-violet-950') {
        @include assert {
          @include output {
            @include shadow-violet-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2e1065;
          }
        }
      }

      @include it('shadow-purple-50') {
        @include assert {
          @include output {
            @include shadow-purple-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #faf5ff;
          }
        }
      }

      @include it('shadow-purple-100') {
        @include assert {
          @include output {
            @include shadow-purple-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f3e8ff;
          }
        }
      }

      @include it('shadow-purple-200') {
        @include assert {
          @include output {
            @include shadow-purple-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e9d5ff;
          }
        }
      }

      @include it('shadow-purple-300') {
        @include assert {
          @include output {
            @include shadow-purple-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d8b4fe;
          }
        }
      }

      @include it('shadow-purple-400') {
        @include assert {
          @include output {
            @include shadow-purple-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c084fc;
          }
        }
      }

      @include it('shadow-purple-500') {
        @include assert {
          @include output {
            @include shadow-purple-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a855f7;
          }
        }
      }

      @include it('shadow-purple-600') {
        @include assert {
          @include output {
            @include shadow-purple-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9333ea;
          }
        }
      }

      @include it('shadow-purple-700') {
        @include assert {
          @include output {
            @include shadow-purple-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7e22ce;
          }
        }
      }

      @include it('shadow-purple-800') {
        @include assert {
          @include output {
            @include shadow-purple-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6b21a8;
          }
        }
      }

      @include it('shadow-purple-900') {
        @include assert {
          @include output {
            @include shadow-purple-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #581c87;
          }
        }
      }

      @include it('shadow-purple-950') {
        @include assert {
          @include output {
            @include shadow-purple-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3b0764;
          }
        }
      }

      @include it('shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdf4ff;
          }
        }
      }

      @include it('shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fae8ff;
          }
        }
      }

      @include it('shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5d0fe;
          }
        }
      }

      @include it('shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0abfc;
          }
        }
      }

      @include it('shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e879f9;
          }
        }
      }

      @include it('shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d946ef;
          }
        }
      }

      @include it('shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c026d3;
          }
        }
      }

      @include it('shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a21caf;
          }
        }
      }

      @include it('shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #86198f;
          }
        }
      }

      @include it('shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #701a75;
          }
        }
      }

      @include it('shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4a044e;
          }
        }
      }

      @include it('shadow-pink-50') {
        @include assert {
          @include output {
            @include shadow-pink-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdf2f8;
          }
        }
      }

      @include it('shadow-pink-100') {
        @include assert {
          @include output {
            @include shadow-pink-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fce7f3;
          }
        }
      }

      @include it('shadow-pink-200') {
        @include assert {
          @include output {
            @include shadow-pink-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fbcfe8;
          }
        }
      }

      @include it('shadow-pink-300') {
        @include assert {
          @include output {
            @include shadow-pink-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f9a8d4;
          }
        }
      }

      @include it('shadow-pink-400') {
        @include assert {
          @include output {
            @include shadow-pink-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f472b6;
          }
        }
      }

      @include it('shadow-pink-500') {
        @include assert {
          @include output {
            @include shadow-pink-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ec4899;
          }
        }
      }

      @include it('shadow-pink-600') {
        @include assert {
          @include output {
            @include shadow-pink-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #db2777;
          }
        }
      }

      @include it('shadow-pink-700') {
        @include assert {
          @include output {
            @include shadow-pink-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #be185d;
          }
        }
      }

      @include it('shadow-pink-800') {
        @include assert {
          @include output {
            @include shadow-pink-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9d174d;
          }
        }
      }

      @include it('shadow-pink-900') {
        @include assert {
          @include output {
            @include shadow-pink-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #831843;
          }
        }
      }

      @include it('shadow-pink-950') {
        @include assert {
          @include output {
            @include shadow-pink-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #500724;
          }
        }
      }

      @include it('shadow-rose-50') {
        @include assert {
          @include output {
            @include shadow-rose-50;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff1f2;
          }
        }
      }

      @include it('shadow-rose-100') {
        @include assert {
          @include output {
            @include shadow-rose-100;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ffe4e6;
          }
        }
      }

      @include it('shadow-rose-200') {
        @include assert {
          @include output {
            @include shadow-rose-200;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fecdd3;
          }
        }
      }

      @include it('shadow-rose-300') {
        @include assert {
          @include output {
            @include shadow-rose-300;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fda4af;
          }
        }
      }

      @include it('shadow-rose-400') {
        @include assert {
          @include output {
            @include shadow-rose-400;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fb7185;
          }
        }
      }

      @include it('shadow-rose-500') {
        @include assert {
          @include output {
            @include shadow-rose-500;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f43f5e;
          }
        }
      }

      @include it('shadow-rose-600') {
        @include assert {
          @include output {
            @include shadow-rose-600;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e11d48;
          }
        }
      }

      @include it('shadow-rose-700') {
        @include assert {
          @include output {
            @include shadow-rose-700;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #be123c;
          }
        }
      }

      @include it('shadow-rose-800') {
        @include assert {
          @include output {
            @include shadow-rose-800;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9f1239;
          }
        }
      }

      @include it('shadow-rose-900') {
        @include assert {
          @include output {
            @include shadow-rose-900;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #881337;
          }
        }
      }

      @include it('shadow-rose-950') {
        @include assert {
          @include output {
            @include shadow-rose-950;
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4c0519;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:shadow-inherit') {
        @include assert {
          @include output {
            @include sm\:shadow-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 inherit;
            }
          }
        }
      }

      @include it('sm\:shadow-current') {
        @include assert {
          @include output {
            @include sm\:shadow-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 currentColor;
            }
          }
        }
      }

      @include it('sm\:shadow-transparent') {
        @include assert {
          @include output {
            @include sm\:shadow-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 transparent;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-100') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f1f5f9;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-200') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e2e8f0;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-300') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cbd5e1;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-400') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #94a3b8;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-500') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #64748b;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-600') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #475569;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-700') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #334155;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-800') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e293b;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-900') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f172a;
            }
          }
        }
      }

      @include it('sm\:shadow-slate-950') {
        @include assert {
          @include output {
            @include sm\:shadow-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #020617;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-50') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9fafb;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-100') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3f4f6;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-200') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e7eb;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-300') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1d5db;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-400') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9ca3af;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-500') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b7280;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-600') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4b5563;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-700') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #374151;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-800') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1f2937;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-900') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #111827;
            }
          }
        }
      }

      @include it('sm\:shadow-gray-950') {
        @include assert {
          @include output {
            @include sm\:shadow-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #030712;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-50') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-100') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f4f4f5;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-200') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e4e4e7;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-300') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d8;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-400') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a1a1aa;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-500') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #71717a;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-600') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #52525b;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-700') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f3f46;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-800') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #27272a;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-900') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #18181b;
            }
          }
        }
      }

      @include it('sm\:shadow-zinc-950') {
        @include assert {
          @include output {
            @include sm\:shadow-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #09090b;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-50') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-100') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f5;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-200') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e5e5;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-300') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d4;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-400') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3a3a3;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-500') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #737373;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-600') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #525252;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-700') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #404040;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-800') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #262626;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-900') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #171717;
            }
          }
        }
      }

      @include it('sm\:shadow-neutral-950') {
        @include assert {
          @include output {
            @include sm\:shadow-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0a0a0a;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-50') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafaf9;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-100') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f4;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-200') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e7e5e4;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-300') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d6d3d1;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-400') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a8a29e;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-500') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78716c;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-600') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #57534e;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-700') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #44403c;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-800') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #292524;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-900') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1c1917;
            }
          }
        }
      }

      @include it('sm\:shadow-stone-950') {
        @include assert {
          @include output {
            @include sm\:shadow-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c0a09;
            }
          }
        }
      }

      @include it('sm\:shadow-red-50') {
        @include assert {
          @include output {
            @include sm\:shadow-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef2f2;
            }
          }
        }
      }

      @include it('sm\:shadow-red-100') {
        @include assert {
          @include output {
            @include sm\:shadow-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fee2e2;
            }
          }
        }
      }

      @include it('sm\:shadow-red-200') {
        @include assert {
          @include output {
            @include sm\:shadow-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecaca;
            }
          }
        }
      }

      @include it('sm\:shadow-red-300') {
        @include assert {
          @include output {
            @include sm\:shadow-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fca5a5;
            }
          }
        }
      }

      @include it('sm\:shadow-red-400') {
        @include assert {
          @include output {
            @include sm\:shadow-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f87171;
            }
          }
        }
      }

      @include it('sm\:shadow-red-500') {
        @include assert {
          @include output {
            @include sm\:shadow-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ef4444;
            }
          }
        }
      }

      @include it('sm\:shadow-red-600') {
        @include assert {
          @include output {
            @include sm\:shadow-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dc2626;
            }
          }
        }
      }

      @include it('sm\:shadow-red-700') {
        @include assert {
          @include output {
            @include sm\:shadow-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b91c1c;
            }
          }
        }
      }

      @include it('sm\:shadow-red-800') {
        @include assert {
          @include output {
            @include sm\:shadow-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #991b1b;
            }
          }
        }
      }

      @include it('sm\:shadow-red-900') {
        @include assert {
          @include output {
            @include sm\:shadow-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7f1d1d;
            }
          }
        }
      }

      @include it('sm\:shadow-red-950') {
        @include assert {
          @include output {
            @include sm\:shadow-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #450a0a;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-50') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff7ed;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-100') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffedd5;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-200') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fed7aa;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-300') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdba74;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-400') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb923c;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-500') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f97316;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-600') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ea580c;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-700') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c2410c;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-800') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9a3412;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-900') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c2d12;
            }
          }
        }
      }

      @include it('sm\:shadow-orange-950') {
        @include assert {
          @include output {
            @include sm\:shadow-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #431407;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-50') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fffbeb;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-100') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef3c7;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-200') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde68a;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-300') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fcd34d;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-400') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbbf24;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-500') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f59e0b;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-600') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d97706;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-700') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b45309;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-800') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #92400e;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-900') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78350f;
            }
          }
        }
      }

      @include it('sm\:shadow-amber-950') {
        @include assert {
          @include output {
            @include sm\:shadow-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #451a03;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-50') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fefce8;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-100') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef9c3;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-200') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef08a;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-300') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde047;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-400') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #facc15;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-500') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eab308;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-600') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ca8a04;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-700') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a16207;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-800') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #854d0e;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-900') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #713f12;
            }
          }
        }
      }

      @include it('sm\:shadow-yellow-950') {
        @include assert {
          @include output {
            @include sm\:shadow-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #422006;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-50') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f7fee7;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-100') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfccb;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-200') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d9f99d;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-300') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bef264;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-400') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3e635;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-500') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #84cc16;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-600') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #65a30d;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-700') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4d7c0f;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-800') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f6212;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-900') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #365314;
            }
          }
        }
      }

      @include it('sm\:shadow-lime-950') {
        @include assert {
          @include output {
            @include sm\:shadow-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1a2e05;
            }
          }
        }
      }

      @include it('sm\:shadow-green-50') {
        @include assert {
          @include output {
            @include sm\:shadow-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdf4;
            }
          }
        }
      }

      @include it('sm\:shadow-green-100') {
        @include assert {
          @include output {
            @include sm\:shadow-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dcfce7;
            }
          }
        }
      }

      @include it('sm\:shadow-green-200') {
        @include assert {
          @include output {
            @include sm\:shadow-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bbf7d0;
            }
          }
        }
      }

      @include it('sm\:shadow-green-300') {
        @include assert {
          @include output {
            @include sm\:shadow-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86efac;
            }
          }
        }
      }

      @include it('sm\:shadow-green-400') {
        @include assert {
          @include output {
            @include sm\:shadow-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4ade80;
            }
          }
        }
      }

      @include it('sm\:shadow-green-500') {
        @include assert {
          @include output {
            @include sm\:shadow-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22c55e;
            }
          }
        }
      }

      @include it('sm\:shadow-green-600') {
        @include assert {
          @include output {
            @include sm\:shadow-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #16a34a;
            }
          }
        }
      }

      @include it('sm\:shadow-green-700') {
        @include assert {
          @include output {
            @include sm\:shadow-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #15803d;
            }
          }
        }
      }

      @include it('sm\:shadow-green-800') {
        @include assert {
          @include output {
            @include sm\:shadow-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #166534;
            }
          }
        }
      }

      @include it('sm\:shadow-green-900') {
        @include assert {
          @include output {
            @include sm\:shadow-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14532d;
            }
          }
        }
      }

      @include it('sm\:shadow-green-950') {
        @include assert {
          @include output {
            @include sm\:shadow-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #052e16;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-50') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfdf5;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-100') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1fae5;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-200') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a7f3d0;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-300') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6ee7b7;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-400') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #34d399;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-500') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #10b981;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-600') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #059669;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-700') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #047857;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-800') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #065f46;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-900') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #064e3b;
            }
          }
        }
      }

      @include it('sm\:shadow-emerald-950') {
        @include assert {
          @include output {
            @include sm\:shadow-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #022c22;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-50') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdfa;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-100') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ccfbf1;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-200') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #99f6e4;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-300') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5eead4;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-400') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2dd4bf;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-500') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14b8a6;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-600') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0d9488;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-700') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f766e;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-800') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #115e59;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-900') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #134e4a;
            }
          }
        }
      }

      @include it('sm\:shadow-teal-950') {
        @include assert {
          @include output {
            @include sm\:shadow-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #042f2e;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-50') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfeff;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-100') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cffafe;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-200') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5f3fc;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-300') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #67e8f9;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-400') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22d3ee;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-500') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #06b6d4;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-600') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0891b2;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-700') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0e7490;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-800') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #155e75;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-900') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #164e63;
            }
          }
        }
      }

      @include it('sm\:shadow-cyan-950') {
        @include assert {
          @include output {
            @include sm\:shadow-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #083344;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-50') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0f9ff;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-100') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0f2fe;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-200') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bae6fd;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-300') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7dd3fc;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-400') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #38bdf8;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-500') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0ea5e9;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-600') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0284c7;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-700') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0369a1;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-800') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #075985;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-900') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c4a6e;
            }
          }
        }
      }

      @include it('sm\:shadow-sky-950') {
        @include assert {
          @include output {
            @include sm\:shadow-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #082f49;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-50') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eff6ff;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-100') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dbeafe;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-200') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bfdbfe;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-300') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #93c5fd;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-400') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #60a5fa;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-500') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b82f6;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-600') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2563eb;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-700') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1d4ed8;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-800') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e40af;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-900') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e3a8a;
            }
          }
        }
      }

      @include it('sm\:shadow-blue-950') {
        @include assert {
          @include output {
            @include sm\:shadow-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #172554;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-50') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eef2ff;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-100') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0e7ff;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-200') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c7d2fe;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-300') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5b4fc;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-400') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #818cf8;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-500') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6366f1;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-600') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4f46e5;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-700') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4338ca;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-800') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3730a3;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-900') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #312e81;
            }
          }
        }
      }

      @include it('sm\:shadow-indigo-950') {
        @include assert {
          @include output {
            @include sm\:shadow-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e1b4b;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-50') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f3ff;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-100') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ede9fe;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-200') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ddd6fe;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-300') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c4b5fd;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-400') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a78bfa;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-500') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #8b5cf6;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-600') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c3aed;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-700') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6d28d9;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-800') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5b21b6;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-900') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c1d95;
            }
          }
        }
      }

      @include it('sm\:shadow-violet-950') {
        @include assert {
          @include output {
            @include sm\:shadow-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2e1065;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-50') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #faf5ff;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-100') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3e8ff;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-200') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e9d5ff;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-300') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d8b4fe;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-400') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c084fc;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-500') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a855f7;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-600') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9333ea;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-700') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7e22ce;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-800') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b21a8;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-900') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #581c87;
            }
          }
        }
      }

      @include it('sm\:shadow-purple-950') {
        @include assert {
          @include output {
            @include sm\:shadow-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b0764;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf4ff;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fae8ff;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5d0fe;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0abfc;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e879f9;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d946ef;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c026d3;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a21caf;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86198f;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #701a75;
            }
          }
        }
      }

      @include it('sm\:shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4a044e;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-50') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf2f8;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-100') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fce7f3;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-200') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbcfe8;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-300') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9a8d4;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-400') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f472b6;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-500') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ec4899;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-600') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #db2777;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-700') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be185d;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-800') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9d174d;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-900') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #831843;
            }
          }
        }
      }

      @include it('sm\:shadow-pink-950') {
        @include assert {
          @include output {
            @include sm\:shadow-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #500724;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-50') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff1f2;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-100') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffe4e6;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-200') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecdd3;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-300') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fda4af;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-400') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb7185;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-500') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f43f5e;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-600') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e11d48;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-700') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be123c;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-800') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9f1239;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-900') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #881337;
            }
          }
        }
      }

      @include it('sm\:shadow-rose-950') {
        @include assert {
          @include output {
            @include sm\:shadow-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c0519;
            }
          }
        }
      }

      @include it('md\:shadow-inherit') {
        @include assert {
          @include output {
            @include md\:shadow-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 inherit;
            }
          }
        }
      }

      @include it('md\:shadow-current') {
        @include assert {
          @include output {
            @include md\:shadow-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 currentColor;
            }
          }
        }
      }

      @include it('md\:shadow-transparent') {
        @include assert {
          @include output {
            @include md\:shadow-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 transparent;
            }
          }
        }
      }

      @include it('md\:shadow-slate-100') {
        @include assert {
          @include output {
            @include md\:shadow-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f1f5f9;
            }
          }
        }
      }

      @include it('md\:shadow-slate-200') {
        @include assert {
          @include output {
            @include md\:shadow-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e2e8f0;
            }
          }
        }
      }

      @include it('md\:shadow-slate-300') {
        @include assert {
          @include output {
            @include md\:shadow-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cbd5e1;
            }
          }
        }
      }

      @include it('md\:shadow-slate-400') {
        @include assert {
          @include output {
            @include md\:shadow-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #94a3b8;
            }
          }
        }
      }

      @include it('md\:shadow-slate-500') {
        @include assert {
          @include output {
            @include md\:shadow-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #64748b;
            }
          }
        }
      }

      @include it('md\:shadow-slate-600') {
        @include assert {
          @include output {
            @include md\:shadow-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #475569;
            }
          }
        }
      }

      @include it('md\:shadow-slate-700') {
        @include assert {
          @include output {
            @include md\:shadow-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #334155;
            }
          }
        }
      }

      @include it('md\:shadow-slate-800') {
        @include assert {
          @include output {
            @include md\:shadow-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e293b;
            }
          }
        }
      }

      @include it('md\:shadow-slate-900') {
        @include assert {
          @include output {
            @include md\:shadow-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f172a;
            }
          }
        }
      }

      @include it('md\:shadow-slate-950') {
        @include assert {
          @include output {
            @include md\:shadow-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #020617;
            }
          }
        }
      }

      @include it('md\:shadow-gray-50') {
        @include assert {
          @include output {
            @include md\:shadow-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9fafb;
            }
          }
        }
      }

      @include it('md\:shadow-gray-100') {
        @include assert {
          @include output {
            @include md\:shadow-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3f4f6;
            }
          }
        }
      }

      @include it('md\:shadow-gray-200') {
        @include assert {
          @include output {
            @include md\:shadow-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e7eb;
            }
          }
        }
      }

      @include it('md\:shadow-gray-300') {
        @include assert {
          @include output {
            @include md\:shadow-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1d5db;
            }
          }
        }
      }

      @include it('md\:shadow-gray-400') {
        @include assert {
          @include output {
            @include md\:shadow-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9ca3af;
            }
          }
        }
      }

      @include it('md\:shadow-gray-500') {
        @include assert {
          @include output {
            @include md\:shadow-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b7280;
            }
          }
        }
      }

      @include it('md\:shadow-gray-600') {
        @include assert {
          @include output {
            @include md\:shadow-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4b5563;
            }
          }
        }
      }

      @include it('md\:shadow-gray-700') {
        @include assert {
          @include output {
            @include md\:shadow-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #374151;
            }
          }
        }
      }

      @include it('md\:shadow-gray-800') {
        @include assert {
          @include output {
            @include md\:shadow-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1f2937;
            }
          }
        }
      }

      @include it('md\:shadow-gray-900') {
        @include assert {
          @include output {
            @include md\:shadow-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #111827;
            }
          }
        }
      }

      @include it('md\:shadow-gray-950') {
        @include assert {
          @include output {
            @include md\:shadow-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #030712;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-50') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-100') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f4f4f5;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-200') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e4e4e7;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-300') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d8;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-400') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a1a1aa;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-500') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #71717a;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-600') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #52525b;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-700') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f3f46;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-800') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #27272a;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-900') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #18181b;
            }
          }
        }
      }

      @include it('md\:shadow-zinc-950') {
        @include assert {
          @include output {
            @include md\:shadow-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #09090b;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-50') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-100') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f5;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-200') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e5e5;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-300') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d4;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-400') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3a3a3;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-500') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #737373;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-600') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #525252;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-700') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #404040;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-800') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #262626;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-900') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #171717;
            }
          }
        }
      }

      @include it('md\:shadow-neutral-950') {
        @include assert {
          @include output {
            @include md\:shadow-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0a0a0a;
            }
          }
        }
      }

      @include it('md\:shadow-stone-50') {
        @include assert {
          @include output {
            @include md\:shadow-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafaf9;
            }
          }
        }
      }

      @include it('md\:shadow-stone-100') {
        @include assert {
          @include output {
            @include md\:shadow-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f4;
            }
          }
        }
      }

      @include it('md\:shadow-stone-200') {
        @include assert {
          @include output {
            @include md\:shadow-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e7e5e4;
            }
          }
        }
      }

      @include it('md\:shadow-stone-300') {
        @include assert {
          @include output {
            @include md\:shadow-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d6d3d1;
            }
          }
        }
      }

      @include it('md\:shadow-stone-400') {
        @include assert {
          @include output {
            @include md\:shadow-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a8a29e;
            }
          }
        }
      }

      @include it('md\:shadow-stone-500') {
        @include assert {
          @include output {
            @include md\:shadow-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78716c;
            }
          }
        }
      }

      @include it('md\:shadow-stone-600') {
        @include assert {
          @include output {
            @include md\:shadow-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #57534e;
            }
          }
        }
      }

      @include it('md\:shadow-stone-700') {
        @include assert {
          @include output {
            @include md\:shadow-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #44403c;
            }
          }
        }
      }

      @include it('md\:shadow-stone-800') {
        @include assert {
          @include output {
            @include md\:shadow-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #292524;
            }
          }
        }
      }

      @include it('md\:shadow-stone-900') {
        @include assert {
          @include output {
            @include md\:shadow-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1c1917;
            }
          }
        }
      }

      @include it('md\:shadow-stone-950') {
        @include assert {
          @include output {
            @include md\:shadow-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c0a09;
            }
          }
        }
      }

      @include it('md\:shadow-red-50') {
        @include assert {
          @include output {
            @include md\:shadow-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef2f2;
            }
          }
        }
      }

      @include it('md\:shadow-red-100') {
        @include assert {
          @include output {
            @include md\:shadow-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fee2e2;
            }
          }
        }
      }

      @include it('md\:shadow-red-200') {
        @include assert {
          @include output {
            @include md\:shadow-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecaca;
            }
          }
        }
      }

      @include it('md\:shadow-red-300') {
        @include assert {
          @include output {
            @include md\:shadow-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fca5a5;
            }
          }
        }
      }

      @include it('md\:shadow-red-400') {
        @include assert {
          @include output {
            @include md\:shadow-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f87171;
            }
          }
        }
      }

      @include it('md\:shadow-red-500') {
        @include assert {
          @include output {
            @include md\:shadow-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ef4444;
            }
          }
        }
      }

      @include it('md\:shadow-red-600') {
        @include assert {
          @include output {
            @include md\:shadow-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dc2626;
            }
          }
        }
      }

      @include it('md\:shadow-red-700') {
        @include assert {
          @include output {
            @include md\:shadow-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b91c1c;
            }
          }
        }
      }

      @include it('md\:shadow-red-800') {
        @include assert {
          @include output {
            @include md\:shadow-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #991b1b;
            }
          }
        }
      }

      @include it('md\:shadow-red-900') {
        @include assert {
          @include output {
            @include md\:shadow-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7f1d1d;
            }
          }
        }
      }

      @include it('md\:shadow-red-950') {
        @include assert {
          @include output {
            @include md\:shadow-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #450a0a;
            }
          }
        }
      }

      @include it('md\:shadow-orange-50') {
        @include assert {
          @include output {
            @include md\:shadow-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff7ed;
            }
          }
        }
      }

      @include it('md\:shadow-orange-100') {
        @include assert {
          @include output {
            @include md\:shadow-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffedd5;
            }
          }
        }
      }

      @include it('md\:shadow-orange-200') {
        @include assert {
          @include output {
            @include md\:shadow-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fed7aa;
            }
          }
        }
      }

      @include it('md\:shadow-orange-300') {
        @include assert {
          @include output {
            @include md\:shadow-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdba74;
            }
          }
        }
      }

      @include it('md\:shadow-orange-400') {
        @include assert {
          @include output {
            @include md\:shadow-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb923c;
            }
          }
        }
      }

      @include it('md\:shadow-orange-500') {
        @include assert {
          @include output {
            @include md\:shadow-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f97316;
            }
          }
        }
      }

      @include it('md\:shadow-orange-600') {
        @include assert {
          @include output {
            @include md\:shadow-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ea580c;
            }
          }
        }
      }

      @include it('md\:shadow-orange-700') {
        @include assert {
          @include output {
            @include md\:shadow-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c2410c;
            }
          }
        }
      }

      @include it('md\:shadow-orange-800') {
        @include assert {
          @include output {
            @include md\:shadow-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9a3412;
            }
          }
        }
      }

      @include it('md\:shadow-orange-900') {
        @include assert {
          @include output {
            @include md\:shadow-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c2d12;
            }
          }
        }
      }

      @include it('md\:shadow-orange-950') {
        @include assert {
          @include output {
            @include md\:shadow-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #431407;
            }
          }
        }
      }

      @include it('md\:shadow-amber-50') {
        @include assert {
          @include output {
            @include md\:shadow-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fffbeb;
            }
          }
        }
      }

      @include it('md\:shadow-amber-100') {
        @include assert {
          @include output {
            @include md\:shadow-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef3c7;
            }
          }
        }
      }

      @include it('md\:shadow-amber-200') {
        @include assert {
          @include output {
            @include md\:shadow-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde68a;
            }
          }
        }
      }

      @include it('md\:shadow-amber-300') {
        @include assert {
          @include output {
            @include md\:shadow-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fcd34d;
            }
          }
        }
      }

      @include it('md\:shadow-amber-400') {
        @include assert {
          @include output {
            @include md\:shadow-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbbf24;
            }
          }
        }
      }

      @include it('md\:shadow-amber-500') {
        @include assert {
          @include output {
            @include md\:shadow-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f59e0b;
            }
          }
        }
      }

      @include it('md\:shadow-amber-600') {
        @include assert {
          @include output {
            @include md\:shadow-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d97706;
            }
          }
        }
      }

      @include it('md\:shadow-amber-700') {
        @include assert {
          @include output {
            @include md\:shadow-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b45309;
            }
          }
        }
      }

      @include it('md\:shadow-amber-800') {
        @include assert {
          @include output {
            @include md\:shadow-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #92400e;
            }
          }
        }
      }

      @include it('md\:shadow-amber-900') {
        @include assert {
          @include output {
            @include md\:shadow-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78350f;
            }
          }
        }
      }

      @include it('md\:shadow-amber-950') {
        @include assert {
          @include output {
            @include md\:shadow-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #451a03;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-50') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fefce8;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-100') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef9c3;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-200') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef08a;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-300') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde047;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-400') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #facc15;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-500') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eab308;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-600') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ca8a04;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-700') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a16207;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-800') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #854d0e;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-900') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #713f12;
            }
          }
        }
      }

      @include it('md\:shadow-yellow-950') {
        @include assert {
          @include output {
            @include md\:shadow-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #422006;
            }
          }
        }
      }

      @include it('md\:shadow-lime-50') {
        @include assert {
          @include output {
            @include md\:shadow-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f7fee7;
            }
          }
        }
      }

      @include it('md\:shadow-lime-100') {
        @include assert {
          @include output {
            @include md\:shadow-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfccb;
            }
          }
        }
      }

      @include it('md\:shadow-lime-200') {
        @include assert {
          @include output {
            @include md\:shadow-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d9f99d;
            }
          }
        }
      }

      @include it('md\:shadow-lime-300') {
        @include assert {
          @include output {
            @include md\:shadow-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bef264;
            }
          }
        }
      }

      @include it('md\:shadow-lime-400') {
        @include assert {
          @include output {
            @include md\:shadow-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3e635;
            }
          }
        }
      }

      @include it('md\:shadow-lime-500') {
        @include assert {
          @include output {
            @include md\:shadow-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #84cc16;
            }
          }
        }
      }

      @include it('md\:shadow-lime-600') {
        @include assert {
          @include output {
            @include md\:shadow-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #65a30d;
            }
          }
        }
      }

      @include it('md\:shadow-lime-700') {
        @include assert {
          @include output {
            @include md\:shadow-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4d7c0f;
            }
          }
        }
      }

      @include it('md\:shadow-lime-800') {
        @include assert {
          @include output {
            @include md\:shadow-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f6212;
            }
          }
        }
      }

      @include it('md\:shadow-lime-900') {
        @include assert {
          @include output {
            @include md\:shadow-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #365314;
            }
          }
        }
      }

      @include it('md\:shadow-lime-950') {
        @include assert {
          @include output {
            @include md\:shadow-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1a2e05;
            }
          }
        }
      }

      @include it('md\:shadow-green-50') {
        @include assert {
          @include output {
            @include md\:shadow-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdf4;
            }
          }
        }
      }

      @include it('md\:shadow-green-100') {
        @include assert {
          @include output {
            @include md\:shadow-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dcfce7;
            }
          }
        }
      }

      @include it('md\:shadow-green-200') {
        @include assert {
          @include output {
            @include md\:shadow-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bbf7d0;
            }
          }
        }
      }

      @include it('md\:shadow-green-300') {
        @include assert {
          @include output {
            @include md\:shadow-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86efac;
            }
          }
        }
      }

      @include it('md\:shadow-green-400') {
        @include assert {
          @include output {
            @include md\:shadow-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4ade80;
            }
          }
        }
      }

      @include it('md\:shadow-green-500') {
        @include assert {
          @include output {
            @include md\:shadow-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22c55e;
            }
          }
        }
      }

      @include it('md\:shadow-green-600') {
        @include assert {
          @include output {
            @include md\:shadow-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #16a34a;
            }
          }
        }
      }

      @include it('md\:shadow-green-700') {
        @include assert {
          @include output {
            @include md\:shadow-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #15803d;
            }
          }
        }
      }

      @include it('md\:shadow-green-800') {
        @include assert {
          @include output {
            @include md\:shadow-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #166534;
            }
          }
        }
      }

      @include it('md\:shadow-green-900') {
        @include assert {
          @include output {
            @include md\:shadow-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14532d;
            }
          }
        }
      }

      @include it('md\:shadow-green-950') {
        @include assert {
          @include output {
            @include md\:shadow-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #052e16;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-50') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfdf5;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-100') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1fae5;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-200') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a7f3d0;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-300') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6ee7b7;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-400') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #34d399;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-500') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #10b981;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-600') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #059669;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-700') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #047857;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-800') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #065f46;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-900') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #064e3b;
            }
          }
        }
      }

      @include it('md\:shadow-emerald-950') {
        @include assert {
          @include output {
            @include md\:shadow-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #022c22;
            }
          }
        }
      }

      @include it('md\:shadow-teal-50') {
        @include assert {
          @include output {
            @include md\:shadow-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdfa;
            }
          }
        }
      }

      @include it('md\:shadow-teal-100') {
        @include assert {
          @include output {
            @include md\:shadow-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ccfbf1;
            }
          }
        }
      }

      @include it('md\:shadow-teal-200') {
        @include assert {
          @include output {
            @include md\:shadow-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #99f6e4;
            }
          }
        }
      }

      @include it('md\:shadow-teal-300') {
        @include assert {
          @include output {
            @include md\:shadow-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5eead4;
            }
          }
        }
      }

      @include it('md\:shadow-teal-400') {
        @include assert {
          @include output {
            @include md\:shadow-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2dd4bf;
            }
          }
        }
      }

      @include it('md\:shadow-teal-500') {
        @include assert {
          @include output {
            @include md\:shadow-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14b8a6;
            }
          }
        }
      }

      @include it('md\:shadow-teal-600') {
        @include assert {
          @include output {
            @include md\:shadow-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0d9488;
            }
          }
        }
      }

      @include it('md\:shadow-teal-700') {
        @include assert {
          @include output {
            @include md\:shadow-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f766e;
            }
          }
        }
      }

      @include it('md\:shadow-teal-800') {
        @include assert {
          @include output {
            @include md\:shadow-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #115e59;
            }
          }
        }
      }

      @include it('md\:shadow-teal-900') {
        @include assert {
          @include output {
            @include md\:shadow-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #134e4a;
            }
          }
        }
      }

      @include it('md\:shadow-teal-950') {
        @include assert {
          @include output {
            @include md\:shadow-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #042f2e;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-50') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfeff;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-100') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cffafe;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-200') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5f3fc;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-300') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #67e8f9;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-400') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22d3ee;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-500') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #06b6d4;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-600') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0891b2;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-700') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0e7490;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-800') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #155e75;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-900') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #164e63;
            }
          }
        }
      }

      @include it('md\:shadow-cyan-950') {
        @include assert {
          @include output {
            @include md\:shadow-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #083344;
            }
          }
        }
      }

      @include it('md\:shadow-sky-50') {
        @include assert {
          @include output {
            @include md\:shadow-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0f9ff;
            }
          }
        }
      }

      @include it('md\:shadow-sky-100') {
        @include assert {
          @include output {
            @include md\:shadow-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0f2fe;
            }
          }
        }
      }

      @include it('md\:shadow-sky-200') {
        @include assert {
          @include output {
            @include md\:shadow-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bae6fd;
            }
          }
        }
      }

      @include it('md\:shadow-sky-300') {
        @include assert {
          @include output {
            @include md\:shadow-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7dd3fc;
            }
          }
        }
      }

      @include it('md\:shadow-sky-400') {
        @include assert {
          @include output {
            @include md\:shadow-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #38bdf8;
            }
          }
        }
      }

      @include it('md\:shadow-sky-500') {
        @include assert {
          @include output {
            @include md\:shadow-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0ea5e9;
            }
          }
        }
      }

      @include it('md\:shadow-sky-600') {
        @include assert {
          @include output {
            @include md\:shadow-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0284c7;
            }
          }
        }
      }

      @include it('md\:shadow-sky-700') {
        @include assert {
          @include output {
            @include md\:shadow-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0369a1;
            }
          }
        }
      }

      @include it('md\:shadow-sky-800') {
        @include assert {
          @include output {
            @include md\:shadow-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #075985;
            }
          }
        }
      }

      @include it('md\:shadow-sky-900') {
        @include assert {
          @include output {
            @include md\:shadow-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c4a6e;
            }
          }
        }
      }

      @include it('md\:shadow-sky-950') {
        @include assert {
          @include output {
            @include md\:shadow-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #082f49;
            }
          }
        }
      }

      @include it('md\:shadow-blue-50') {
        @include assert {
          @include output {
            @include md\:shadow-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eff6ff;
            }
          }
        }
      }

      @include it('md\:shadow-blue-100') {
        @include assert {
          @include output {
            @include md\:shadow-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dbeafe;
            }
          }
        }
      }

      @include it('md\:shadow-blue-200') {
        @include assert {
          @include output {
            @include md\:shadow-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bfdbfe;
            }
          }
        }
      }

      @include it('md\:shadow-blue-300') {
        @include assert {
          @include output {
            @include md\:shadow-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #93c5fd;
            }
          }
        }
      }

      @include it('md\:shadow-blue-400') {
        @include assert {
          @include output {
            @include md\:shadow-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #60a5fa;
            }
          }
        }
      }

      @include it('md\:shadow-blue-500') {
        @include assert {
          @include output {
            @include md\:shadow-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b82f6;
            }
          }
        }
      }

      @include it('md\:shadow-blue-600') {
        @include assert {
          @include output {
            @include md\:shadow-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2563eb;
            }
          }
        }
      }

      @include it('md\:shadow-blue-700') {
        @include assert {
          @include output {
            @include md\:shadow-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1d4ed8;
            }
          }
        }
      }

      @include it('md\:shadow-blue-800') {
        @include assert {
          @include output {
            @include md\:shadow-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e40af;
            }
          }
        }
      }

      @include it('md\:shadow-blue-900') {
        @include assert {
          @include output {
            @include md\:shadow-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e3a8a;
            }
          }
        }
      }

      @include it('md\:shadow-blue-950') {
        @include assert {
          @include output {
            @include md\:shadow-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #172554;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-50') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eef2ff;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-100') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0e7ff;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-200') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c7d2fe;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-300') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5b4fc;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-400') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #818cf8;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-500') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6366f1;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-600') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4f46e5;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-700') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4338ca;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-800') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3730a3;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-900') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #312e81;
            }
          }
        }
      }

      @include it('md\:shadow-indigo-950') {
        @include assert {
          @include output {
            @include md\:shadow-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e1b4b;
            }
          }
        }
      }

      @include it('md\:shadow-violet-50') {
        @include assert {
          @include output {
            @include md\:shadow-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f3ff;
            }
          }
        }
      }

      @include it('md\:shadow-violet-100') {
        @include assert {
          @include output {
            @include md\:shadow-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ede9fe;
            }
          }
        }
      }

      @include it('md\:shadow-violet-200') {
        @include assert {
          @include output {
            @include md\:shadow-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ddd6fe;
            }
          }
        }
      }

      @include it('md\:shadow-violet-300') {
        @include assert {
          @include output {
            @include md\:shadow-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c4b5fd;
            }
          }
        }
      }

      @include it('md\:shadow-violet-400') {
        @include assert {
          @include output {
            @include md\:shadow-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a78bfa;
            }
          }
        }
      }

      @include it('md\:shadow-violet-500') {
        @include assert {
          @include output {
            @include md\:shadow-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #8b5cf6;
            }
          }
        }
      }

      @include it('md\:shadow-violet-600') {
        @include assert {
          @include output {
            @include md\:shadow-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c3aed;
            }
          }
        }
      }

      @include it('md\:shadow-violet-700') {
        @include assert {
          @include output {
            @include md\:shadow-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6d28d9;
            }
          }
        }
      }

      @include it('md\:shadow-violet-800') {
        @include assert {
          @include output {
            @include md\:shadow-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5b21b6;
            }
          }
        }
      }

      @include it('md\:shadow-violet-900') {
        @include assert {
          @include output {
            @include md\:shadow-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c1d95;
            }
          }
        }
      }

      @include it('md\:shadow-violet-950') {
        @include assert {
          @include output {
            @include md\:shadow-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2e1065;
            }
          }
        }
      }

      @include it('md\:shadow-purple-50') {
        @include assert {
          @include output {
            @include md\:shadow-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #faf5ff;
            }
          }
        }
      }

      @include it('md\:shadow-purple-100') {
        @include assert {
          @include output {
            @include md\:shadow-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3e8ff;
            }
          }
        }
      }

      @include it('md\:shadow-purple-200') {
        @include assert {
          @include output {
            @include md\:shadow-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e9d5ff;
            }
          }
        }
      }

      @include it('md\:shadow-purple-300') {
        @include assert {
          @include output {
            @include md\:shadow-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d8b4fe;
            }
          }
        }
      }

      @include it('md\:shadow-purple-400') {
        @include assert {
          @include output {
            @include md\:shadow-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c084fc;
            }
          }
        }
      }

      @include it('md\:shadow-purple-500') {
        @include assert {
          @include output {
            @include md\:shadow-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a855f7;
            }
          }
        }
      }

      @include it('md\:shadow-purple-600') {
        @include assert {
          @include output {
            @include md\:shadow-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9333ea;
            }
          }
        }
      }

      @include it('md\:shadow-purple-700') {
        @include assert {
          @include output {
            @include md\:shadow-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7e22ce;
            }
          }
        }
      }

      @include it('md\:shadow-purple-800') {
        @include assert {
          @include output {
            @include md\:shadow-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b21a8;
            }
          }
        }
      }

      @include it('md\:shadow-purple-900') {
        @include assert {
          @include output {
            @include md\:shadow-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #581c87;
            }
          }
        }
      }

      @include it('md\:shadow-purple-950') {
        @include assert {
          @include output {
            @include md\:shadow-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b0764;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf4ff;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fae8ff;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5d0fe;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0abfc;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e879f9;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d946ef;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c026d3;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a21caf;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86198f;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #701a75;
            }
          }
        }
      }

      @include it('md\:shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4a044e;
            }
          }
        }
      }

      @include it('md\:shadow-pink-50') {
        @include assert {
          @include output {
            @include md\:shadow-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf2f8;
            }
          }
        }
      }

      @include it('md\:shadow-pink-100') {
        @include assert {
          @include output {
            @include md\:shadow-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fce7f3;
            }
          }
        }
      }

      @include it('md\:shadow-pink-200') {
        @include assert {
          @include output {
            @include md\:shadow-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbcfe8;
            }
          }
        }
      }

      @include it('md\:shadow-pink-300') {
        @include assert {
          @include output {
            @include md\:shadow-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9a8d4;
            }
          }
        }
      }

      @include it('md\:shadow-pink-400') {
        @include assert {
          @include output {
            @include md\:shadow-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f472b6;
            }
          }
        }
      }

      @include it('md\:shadow-pink-500') {
        @include assert {
          @include output {
            @include md\:shadow-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ec4899;
            }
          }
        }
      }

      @include it('md\:shadow-pink-600') {
        @include assert {
          @include output {
            @include md\:shadow-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #db2777;
            }
          }
        }
      }

      @include it('md\:shadow-pink-700') {
        @include assert {
          @include output {
            @include md\:shadow-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be185d;
            }
          }
        }
      }

      @include it('md\:shadow-pink-800') {
        @include assert {
          @include output {
            @include md\:shadow-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9d174d;
            }
          }
        }
      }

      @include it('md\:shadow-pink-900') {
        @include assert {
          @include output {
            @include md\:shadow-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #831843;
            }
          }
        }
      }

      @include it('md\:shadow-pink-950') {
        @include assert {
          @include output {
            @include md\:shadow-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #500724;
            }
          }
        }
      }

      @include it('md\:shadow-rose-50') {
        @include assert {
          @include output {
            @include md\:shadow-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff1f2;
            }
          }
        }
      }

      @include it('md\:shadow-rose-100') {
        @include assert {
          @include output {
            @include md\:shadow-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffe4e6;
            }
          }
        }
      }

      @include it('md\:shadow-rose-200') {
        @include assert {
          @include output {
            @include md\:shadow-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecdd3;
            }
          }
        }
      }

      @include it('md\:shadow-rose-300') {
        @include assert {
          @include output {
            @include md\:shadow-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fda4af;
            }
          }
        }
      }

      @include it('md\:shadow-rose-400') {
        @include assert {
          @include output {
            @include md\:shadow-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb7185;
            }
          }
        }
      }

      @include it('md\:shadow-rose-500') {
        @include assert {
          @include output {
            @include md\:shadow-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f43f5e;
            }
          }
        }
      }

      @include it('md\:shadow-rose-600') {
        @include assert {
          @include output {
            @include md\:shadow-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e11d48;
            }
          }
        }
      }

      @include it('md\:shadow-rose-700') {
        @include assert {
          @include output {
            @include md\:shadow-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be123c;
            }
          }
        }
      }

      @include it('md\:shadow-rose-800') {
        @include assert {
          @include output {
            @include md\:shadow-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9f1239;
            }
          }
        }
      }

      @include it('md\:shadow-rose-900') {
        @include assert {
          @include output {
            @include md\:shadow-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #881337;
            }
          }
        }
      }

      @include it('md\:shadow-rose-950') {
        @include assert {
          @include output {
            @include md\:shadow-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c0519;
            }
          }
        }
      }

      @include it('lg\:shadow-inherit') {
        @include assert {
          @include output {
            @include lg\:shadow-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 inherit;
            }
          }
        }
      }

      @include it('lg\:shadow-current') {
        @include assert {
          @include output {
            @include lg\:shadow-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 currentColor;
            }
          }
        }
      }

      @include it('lg\:shadow-transparent') {
        @include assert {
          @include output {
            @include lg\:shadow-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 transparent;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-100') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f1f5f9;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-200') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e2e8f0;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-300') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cbd5e1;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-400') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #94a3b8;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-500') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #64748b;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-600') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #475569;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-700') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #334155;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-800') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e293b;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-900') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f172a;
            }
          }
        }
      }

      @include it('lg\:shadow-slate-950') {
        @include assert {
          @include output {
            @include lg\:shadow-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #020617;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-50') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9fafb;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-100') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3f4f6;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-200') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e7eb;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-300') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1d5db;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-400') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9ca3af;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-500') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b7280;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-600') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4b5563;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-700') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #374151;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-800') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1f2937;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-900') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #111827;
            }
          }
        }
      }

      @include it('lg\:shadow-gray-950') {
        @include assert {
          @include output {
            @include lg\:shadow-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #030712;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-50') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-100') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f4f4f5;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-200') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e4e4e7;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-300') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d8;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-400') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a1a1aa;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-500') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #71717a;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-600') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #52525b;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-700') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f3f46;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-800') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #27272a;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-900') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #18181b;
            }
          }
        }
      }

      @include it('lg\:shadow-zinc-950') {
        @include assert {
          @include output {
            @include lg\:shadow-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #09090b;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-50') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-100') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f5;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-200') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e5e5;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-300') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d4;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-400') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3a3a3;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-500') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #737373;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-600') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #525252;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-700') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #404040;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-800') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #262626;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-900') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #171717;
            }
          }
        }
      }

      @include it('lg\:shadow-neutral-950') {
        @include assert {
          @include output {
            @include lg\:shadow-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0a0a0a;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-50') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafaf9;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-100') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f4;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-200') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e7e5e4;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-300') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d6d3d1;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-400') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a8a29e;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-500') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78716c;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-600') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #57534e;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-700') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #44403c;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-800') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #292524;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-900') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1c1917;
            }
          }
        }
      }

      @include it('lg\:shadow-stone-950') {
        @include assert {
          @include output {
            @include lg\:shadow-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c0a09;
            }
          }
        }
      }

      @include it('lg\:shadow-red-50') {
        @include assert {
          @include output {
            @include lg\:shadow-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef2f2;
            }
          }
        }
      }

      @include it('lg\:shadow-red-100') {
        @include assert {
          @include output {
            @include lg\:shadow-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fee2e2;
            }
          }
        }
      }

      @include it('lg\:shadow-red-200') {
        @include assert {
          @include output {
            @include lg\:shadow-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecaca;
            }
          }
        }
      }

      @include it('lg\:shadow-red-300') {
        @include assert {
          @include output {
            @include lg\:shadow-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fca5a5;
            }
          }
        }
      }

      @include it('lg\:shadow-red-400') {
        @include assert {
          @include output {
            @include lg\:shadow-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f87171;
            }
          }
        }
      }

      @include it('lg\:shadow-red-500') {
        @include assert {
          @include output {
            @include lg\:shadow-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ef4444;
            }
          }
        }
      }

      @include it('lg\:shadow-red-600') {
        @include assert {
          @include output {
            @include lg\:shadow-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dc2626;
            }
          }
        }
      }

      @include it('lg\:shadow-red-700') {
        @include assert {
          @include output {
            @include lg\:shadow-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b91c1c;
            }
          }
        }
      }

      @include it('lg\:shadow-red-800') {
        @include assert {
          @include output {
            @include lg\:shadow-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #991b1b;
            }
          }
        }
      }

      @include it('lg\:shadow-red-900') {
        @include assert {
          @include output {
            @include lg\:shadow-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7f1d1d;
            }
          }
        }
      }

      @include it('lg\:shadow-red-950') {
        @include assert {
          @include output {
            @include lg\:shadow-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #450a0a;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-50') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff7ed;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-100') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffedd5;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-200') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fed7aa;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-300') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdba74;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-400') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb923c;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-500') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f97316;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-600') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ea580c;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-700') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c2410c;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-800') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9a3412;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-900') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c2d12;
            }
          }
        }
      }

      @include it('lg\:shadow-orange-950') {
        @include assert {
          @include output {
            @include lg\:shadow-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #431407;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-50') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fffbeb;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-100') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef3c7;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-200') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde68a;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-300') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fcd34d;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-400') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbbf24;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-500') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f59e0b;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-600') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d97706;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-700') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b45309;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-800') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #92400e;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-900') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78350f;
            }
          }
        }
      }

      @include it('lg\:shadow-amber-950') {
        @include assert {
          @include output {
            @include lg\:shadow-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #451a03;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-50') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fefce8;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-100') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef9c3;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-200') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef08a;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-300') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde047;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-400') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #facc15;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-500') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eab308;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-600') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ca8a04;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-700') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a16207;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-800') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #854d0e;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-900') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #713f12;
            }
          }
        }
      }

      @include it('lg\:shadow-yellow-950') {
        @include assert {
          @include output {
            @include lg\:shadow-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #422006;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-50') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f7fee7;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-100') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfccb;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-200') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d9f99d;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-300') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bef264;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-400') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3e635;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-500') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #84cc16;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-600') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #65a30d;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-700') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4d7c0f;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-800') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f6212;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-900') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #365314;
            }
          }
        }
      }

      @include it('lg\:shadow-lime-950') {
        @include assert {
          @include output {
            @include lg\:shadow-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1a2e05;
            }
          }
        }
      }

      @include it('lg\:shadow-green-50') {
        @include assert {
          @include output {
            @include lg\:shadow-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdf4;
            }
          }
        }
      }

      @include it('lg\:shadow-green-100') {
        @include assert {
          @include output {
            @include lg\:shadow-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dcfce7;
            }
          }
        }
      }

      @include it('lg\:shadow-green-200') {
        @include assert {
          @include output {
            @include lg\:shadow-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bbf7d0;
            }
          }
        }
      }

      @include it('lg\:shadow-green-300') {
        @include assert {
          @include output {
            @include lg\:shadow-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86efac;
            }
          }
        }
      }

      @include it('lg\:shadow-green-400') {
        @include assert {
          @include output {
            @include lg\:shadow-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4ade80;
            }
          }
        }
      }

      @include it('lg\:shadow-green-500') {
        @include assert {
          @include output {
            @include lg\:shadow-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22c55e;
            }
          }
        }
      }

      @include it('lg\:shadow-green-600') {
        @include assert {
          @include output {
            @include lg\:shadow-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #16a34a;
            }
          }
        }
      }

      @include it('lg\:shadow-green-700') {
        @include assert {
          @include output {
            @include lg\:shadow-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #15803d;
            }
          }
        }
      }

      @include it('lg\:shadow-green-800') {
        @include assert {
          @include output {
            @include lg\:shadow-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #166534;
            }
          }
        }
      }

      @include it('lg\:shadow-green-900') {
        @include assert {
          @include output {
            @include lg\:shadow-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14532d;
            }
          }
        }
      }

      @include it('lg\:shadow-green-950') {
        @include assert {
          @include output {
            @include lg\:shadow-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #052e16;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-50') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfdf5;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-100') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1fae5;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-200') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a7f3d0;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-300') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6ee7b7;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-400') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #34d399;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-500') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #10b981;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-600') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #059669;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-700') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #047857;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-800') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #065f46;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-900') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #064e3b;
            }
          }
        }
      }

      @include it('lg\:shadow-emerald-950') {
        @include assert {
          @include output {
            @include lg\:shadow-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #022c22;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-50') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdfa;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-100') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ccfbf1;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-200') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #99f6e4;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-300') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5eead4;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-400') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2dd4bf;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-500') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14b8a6;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-600') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0d9488;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-700') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f766e;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-800') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #115e59;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-900') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #134e4a;
            }
          }
        }
      }

      @include it('lg\:shadow-teal-950') {
        @include assert {
          @include output {
            @include lg\:shadow-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #042f2e;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-50') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfeff;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-100') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cffafe;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-200') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5f3fc;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-300') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #67e8f9;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-400') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22d3ee;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-500') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #06b6d4;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-600') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0891b2;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-700') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0e7490;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-800') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #155e75;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-900') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #164e63;
            }
          }
        }
      }

      @include it('lg\:shadow-cyan-950') {
        @include assert {
          @include output {
            @include lg\:shadow-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #083344;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-50') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0f9ff;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-100') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0f2fe;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-200') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bae6fd;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-300') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7dd3fc;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-400') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #38bdf8;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-500') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0ea5e9;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-600') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0284c7;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-700') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0369a1;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-800') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #075985;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-900') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c4a6e;
            }
          }
        }
      }

      @include it('lg\:shadow-sky-950') {
        @include assert {
          @include output {
            @include lg\:shadow-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #082f49;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-50') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eff6ff;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-100') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dbeafe;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-200') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bfdbfe;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-300') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #93c5fd;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-400') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #60a5fa;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-500') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b82f6;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-600') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2563eb;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-700') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1d4ed8;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-800') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e40af;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-900') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e3a8a;
            }
          }
        }
      }

      @include it('lg\:shadow-blue-950') {
        @include assert {
          @include output {
            @include lg\:shadow-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #172554;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-50') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eef2ff;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-100') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0e7ff;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-200') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c7d2fe;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-300') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5b4fc;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-400') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #818cf8;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-500') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6366f1;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-600') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4f46e5;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-700') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4338ca;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-800') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3730a3;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-900') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #312e81;
            }
          }
        }
      }

      @include it('lg\:shadow-indigo-950') {
        @include assert {
          @include output {
            @include lg\:shadow-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e1b4b;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-50') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f3ff;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-100') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ede9fe;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-200') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ddd6fe;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-300') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c4b5fd;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-400') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a78bfa;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-500') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #8b5cf6;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-600') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c3aed;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-700') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6d28d9;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-800') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5b21b6;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-900') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c1d95;
            }
          }
        }
      }

      @include it('lg\:shadow-violet-950') {
        @include assert {
          @include output {
            @include lg\:shadow-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2e1065;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-50') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #faf5ff;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-100') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3e8ff;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-200') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e9d5ff;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-300') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d8b4fe;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-400') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c084fc;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-500') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a855f7;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-600') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9333ea;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-700') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7e22ce;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-800') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b21a8;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-900') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #581c87;
            }
          }
        }
      }

      @include it('lg\:shadow-purple-950') {
        @include assert {
          @include output {
            @include lg\:shadow-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b0764;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf4ff;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fae8ff;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5d0fe;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0abfc;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e879f9;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d946ef;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c026d3;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a21caf;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86198f;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #701a75;
            }
          }
        }
      }

      @include it('lg\:shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4a044e;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-50') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf2f8;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-100') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fce7f3;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-200') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbcfe8;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-300') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9a8d4;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-400') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f472b6;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-500') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ec4899;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-600') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #db2777;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-700') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be185d;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-800') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9d174d;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-900') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #831843;
            }
          }
        }
      }

      @include it('lg\:shadow-pink-950') {
        @include assert {
          @include output {
            @include lg\:shadow-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #500724;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-50') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff1f2;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-100') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffe4e6;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-200') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecdd3;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-300') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fda4af;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-400') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb7185;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-500') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f43f5e;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-600') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e11d48;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-700') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be123c;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-800') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9f1239;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-900') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #881337;
            }
          }
        }
      }

      @include it('lg\:shadow-rose-950') {
        @include assert {
          @include output {
            @include lg\:shadow-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c0519;
            }
          }
        }
      }

      @include it('xl\:shadow-inherit') {
        @include assert {
          @include output {
            @include xl\:shadow-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 inherit;
            }
          }
        }
      }

      @include it('xl\:shadow-current') {
        @include assert {
          @include output {
            @include xl\:shadow-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 currentColor;
            }
          }
        }
      }

      @include it('xl\:shadow-transparent') {
        @include assert {
          @include output {
            @include xl\:shadow-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 transparent;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-100') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f1f5f9;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-200') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e2e8f0;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-300') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cbd5e1;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-400') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #94a3b8;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-500') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #64748b;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-600') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #475569;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-700') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #334155;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-800') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e293b;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-900') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f172a;
            }
          }
        }
      }

      @include it('xl\:shadow-slate-950') {
        @include assert {
          @include output {
            @include xl\:shadow-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #020617;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-50') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9fafb;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-100') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3f4f6;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-200') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e7eb;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-300') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1d5db;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-400') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9ca3af;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-500') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b7280;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-600') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4b5563;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-700') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #374151;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-800') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1f2937;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-900') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #111827;
            }
          }
        }
      }

      @include it('xl\:shadow-gray-950') {
        @include assert {
          @include output {
            @include xl\:shadow-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #030712;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-50') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-100') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f4f4f5;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-200') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e4e4e7;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-300') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d8;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-400') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a1a1aa;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-500') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #71717a;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-600') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #52525b;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-700') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f3f46;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-800') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #27272a;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-900') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #18181b;
            }
          }
        }
      }

      @include it('xl\:shadow-zinc-950') {
        @include assert {
          @include output {
            @include xl\:shadow-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #09090b;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-50') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-100') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f5;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-200') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e5e5;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-300') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d4;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-400') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3a3a3;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-500') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #737373;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-600') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #525252;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-700') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #404040;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-800') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #262626;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-900') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #171717;
            }
          }
        }
      }

      @include it('xl\:shadow-neutral-950') {
        @include assert {
          @include output {
            @include xl\:shadow-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0a0a0a;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-50') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafaf9;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-100') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f4;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-200') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e7e5e4;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-300') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d6d3d1;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-400') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a8a29e;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-500') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78716c;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-600') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #57534e;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-700') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #44403c;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-800') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #292524;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-900') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1c1917;
            }
          }
        }
      }

      @include it('xl\:shadow-stone-950') {
        @include assert {
          @include output {
            @include xl\:shadow-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c0a09;
            }
          }
        }
      }

      @include it('xl\:shadow-red-50') {
        @include assert {
          @include output {
            @include xl\:shadow-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef2f2;
            }
          }
        }
      }

      @include it('xl\:shadow-red-100') {
        @include assert {
          @include output {
            @include xl\:shadow-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fee2e2;
            }
          }
        }
      }

      @include it('xl\:shadow-red-200') {
        @include assert {
          @include output {
            @include xl\:shadow-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecaca;
            }
          }
        }
      }

      @include it('xl\:shadow-red-300') {
        @include assert {
          @include output {
            @include xl\:shadow-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fca5a5;
            }
          }
        }
      }

      @include it('xl\:shadow-red-400') {
        @include assert {
          @include output {
            @include xl\:shadow-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f87171;
            }
          }
        }
      }

      @include it('xl\:shadow-red-500') {
        @include assert {
          @include output {
            @include xl\:shadow-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ef4444;
            }
          }
        }
      }

      @include it('xl\:shadow-red-600') {
        @include assert {
          @include output {
            @include xl\:shadow-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dc2626;
            }
          }
        }
      }

      @include it('xl\:shadow-red-700') {
        @include assert {
          @include output {
            @include xl\:shadow-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b91c1c;
            }
          }
        }
      }

      @include it('xl\:shadow-red-800') {
        @include assert {
          @include output {
            @include xl\:shadow-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #991b1b;
            }
          }
        }
      }

      @include it('xl\:shadow-red-900') {
        @include assert {
          @include output {
            @include xl\:shadow-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7f1d1d;
            }
          }
        }
      }

      @include it('xl\:shadow-red-950') {
        @include assert {
          @include output {
            @include xl\:shadow-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #450a0a;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-50') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff7ed;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-100') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffedd5;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-200') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fed7aa;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-300') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdba74;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-400') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb923c;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-500') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f97316;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-600') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ea580c;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-700') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c2410c;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-800') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9a3412;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-900') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c2d12;
            }
          }
        }
      }

      @include it('xl\:shadow-orange-950') {
        @include assert {
          @include output {
            @include xl\:shadow-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #431407;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-50') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fffbeb;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-100') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef3c7;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-200') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde68a;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-300') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fcd34d;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-400') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbbf24;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-500') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f59e0b;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-600') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d97706;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-700') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b45309;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-800') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #92400e;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-900') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78350f;
            }
          }
        }
      }

      @include it('xl\:shadow-amber-950') {
        @include assert {
          @include output {
            @include xl\:shadow-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #451a03;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-50') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fefce8;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-100') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef9c3;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-200') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef08a;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-300') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde047;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-400') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #facc15;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-500') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eab308;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-600') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ca8a04;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-700') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a16207;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-800') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #854d0e;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-900') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #713f12;
            }
          }
        }
      }

      @include it('xl\:shadow-yellow-950') {
        @include assert {
          @include output {
            @include xl\:shadow-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #422006;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-50') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f7fee7;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-100') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfccb;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-200') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d9f99d;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-300') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bef264;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-400') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3e635;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-500') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #84cc16;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-600') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #65a30d;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-700') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4d7c0f;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-800') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f6212;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-900') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #365314;
            }
          }
        }
      }

      @include it('xl\:shadow-lime-950') {
        @include assert {
          @include output {
            @include xl\:shadow-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1a2e05;
            }
          }
        }
      }

      @include it('xl\:shadow-green-50') {
        @include assert {
          @include output {
            @include xl\:shadow-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdf4;
            }
          }
        }
      }

      @include it('xl\:shadow-green-100') {
        @include assert {
          @include output {
            @include xl\:shadow-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dcfce7;
            }
          }
        }
      }

      @include it('xl\:shadow-green-200') {
        @include assert {
          @include output {
            @include xl\:shadow-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bbf7d0;
            }
          }
        }
      }

      @include it('xl\:shadow-green-300') {
        @include assert {
          @include output {
            @include xl\:shadow-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86efac;
            }
          }
        }
      }

      @include it('xl\:shadow-green-400') {
        @include assert {
          @include output {
            @include xl\:shadow-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4ade80;
            }
          }
        }
      }

      @include it('xl\:shadow-green-500') {
        @include assert {
          @include output {
            @include xl\:shadow-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22c55e;
            }
          }
        }
      }

      @include it('xl\:shadow-green-600') {
        @include assert {
          @include output {
            @include xl\:shadow-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #16a34a;
            }
          }
        }
      }

      @include it('xl\:shadow-green-700') {
        @include assert {
          @include output {
            @include xl\:shadow-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #15803d;
            }
          }
        }
      }

      @include it('xl\:shadow-green-800') {
        @include assert {
          @include output {
            @include xl\:shadow-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #166534;
            }
          }
        }
      }

      @include it('xl\:shadow-green-900') {
        @include assert {
          @include output {
            @include xl\:shadow-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14532d;
            }
          }
        }
      }

      @include it('xl\:shadow-green-950') {
        @include assert {
          @include output {
            @include xl\:shadow-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #052e16;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-50') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfdf5;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-100') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1fae5;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-200') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a7f3d0;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-300') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6ee7b7;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-400') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #34d399;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-500') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #10b981;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-600') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #059669;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-700') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #047857;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-800') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #065f46;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-900') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #064e3b;
            }
          }
        }
      }

      @include it('xl\:shadow-emerald-950') {
        @include assert {
          @include output {
            @include xl\:shadow-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #022c22;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-50') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdfa;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-100') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ccfbf1;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-200') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #99f6e4;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-300') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5eead4;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-400') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2dd4bf;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-500') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14b8a6;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-600') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0d9488;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-700') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f766e;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-800') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #115e59;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-900') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #134e4a;
            }
          }
        }
      }

      @include it('xl\:shadow-teal-950') {
        @include assert {
          @include output {
            @include xl\:shadow-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #042f2e;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-50') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfeff;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-100') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cffafe;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-200') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5f3fc;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-300') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #67e8f9;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-400') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22d3ee;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-500') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #06b6d4;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-600') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0891b2;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-700') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0e7490;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-800') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #155e75;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-900') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #164e63;
            }
          }
        }
      }

      @include it('xl\:shadow-cyan-950') {
        @include assert {
          @include output {
            @include xl\:shadow-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #083344;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-50') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0f9ff;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-100') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0f2fe;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-200') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bae6fd;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-300') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7dd3fc;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-400') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #38bdf8;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-500') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0ea5e9;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-600') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0284c7;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-700') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0369a1;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-800') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #075985;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-900') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c4a6e;
            }
          }
        }
      }

      @include it('xl\:shadow-sky-950') {
        @include assert {
          @include output {
            @include xl\:shadow-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #082f49;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-50') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eff6ff;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-100') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dbeafe;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-200') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bfdbfe;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-300') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #93c5fd;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-400') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #60a5fa;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-500') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b82f6;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-600') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2563eb;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-700') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1d4ed8;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-800') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e40af;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-900') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e3a8a;
            }
          }
        }
      }

      @include it('xl\:shadow-blue-950') {
        @include assert {
          @include output {
            @include xl\:shadow-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #172554;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-50') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eef2ff;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-100') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0e7ff;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-200') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c7d2fe;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-300') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5b4fc;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-400') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #818cf8;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-500') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6366f1;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-600') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4f46e5;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-700') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4338ca;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-800') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3730a3;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-900') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #312e81;
            }
          }
        }
      }

      @include it('xl\:shadow-indigo-950') {
        @include assert {
          @include output {
            @include xl\:shadow-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e1b4b;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-50') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f3ff;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-100') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ede9fe;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-200') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ddd6fe;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-300') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c4b5fd;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-400') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a78bfa;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-500') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #8b5cf6;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-600') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c3aed;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-700') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6d28d9;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-800') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5b21b6;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-900') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c1d95;
            }
          }
        }
      }

      @include it('xl\:shadow-violet-950') {
        @include assert {
          @include output {
            @include xl\:shadow-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2e1065;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-50') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #faf5ff;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-100') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3e8ff;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-200') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e9d5ff;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-300') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d8b4fe;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-400') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c084fc;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-500') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a855f7;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-600') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9333ea;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-700') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7e22ce;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-800') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b21a8;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-900') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #581c87;
            }
          }
        }
      }

      @include it('xl\:shadow-purple-950') {
        @include assert {
          @include output {
            @include xl\:shadow-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b0764;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf4ff;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fae8ff;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5d0fe;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0abfc;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e879f9;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d946ef;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c026d3;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a21caf;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86198f;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #701a75;
            }
          }
        }
      }

      @include it('xl\:shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4a044e;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-50') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf2f8;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-100') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fce7f3;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-200') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbcfe8;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-300') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9a8d4;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-400') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f472b6;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-500') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ec4899;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-600') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #db2777;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-700') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be185d;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-800') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9d174d;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-900') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #831843;
            }
          }
        }
      }

      @include it('xl\:shadow-pink-950') {
        @include assert {
          @include output {
            @include xl\:shadow-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #500724;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-50') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff1f2;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-100') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffe4e6;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-200') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecdd3;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-300') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fda4af;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-400') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb7185;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-500') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f43f5e;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-600') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e11d48;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-700') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be123c;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-800') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9f1239;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-900') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #881337;
            }
          }
        }
      }

      @include it('xl\:shadow-rose-950') {
        @include assert {
          @include output {
            @include xl\:shadow-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c0519;
            }
          }
        }
      }

      @include it('2xl\:shadow-inherit') {
        @include assert {
          @include output {
            @include \2xl\:shadow-inherit;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 inherit;
            }
          }
        }
      }

      @include it('2xl\:shadow-current') {
        @include assert {
          @include output {
            @include \2xl\:shadow-current;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 currentColor;
            }
          }
        }
      }

      @include it('2xl\:shadow-transparent') {
        @include assert {
          @include output {
            @include \2xl\:shadow-transparent;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 transparent;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f1f5f9;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e2e8f0;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cbd5e1;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #94a3b8;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #64748b;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #475569;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #334155;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e293b;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f172a;
            }
          }
        }
      }

      @include it('2xl\:shadow-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-slate-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #020617;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9fafb;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3f4f6;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e7eb;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1d5db;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9ca3af;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b7280;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4b5563;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #374151;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1f2937;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #111827;
            }
          }
        }
      }

      @include it('2xl\:shadow-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-gray-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #030712;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f4f4f5;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e4e4e7;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d8;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a1a1aa;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #71717a;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #52525b;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f3f46;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #27272a;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #18181b;
            }
          }
        }
      }

      @include it('2xl\:shadow-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-zinc-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #09090b;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafafa;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f5;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e5e5e5;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d4d4d4;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3a3a3;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #737373;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #525252;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #404040;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #262626;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #171717;
            }
          }
        }
      }

      @include it('2xl\:shadow-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-neutral-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0a0a0a;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fafaf9;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f5f4;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e7e5e4;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d6d3d1;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a8a29e;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78716c;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #57534e;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #44403c;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #292524;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1c1917;
            }
          }
        }
      }

      @include it('2xl\:shadow-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-stone-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c0a09;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef2f2;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fee2e2;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecaca;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fca5a5;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f87171;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ef4444;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dc2626;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b91c1c;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #991b1b;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7f1d1d;
            }
          }
        }
      }

      @include it('2xl\:shadow-red-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-red-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #450a0a;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff7ed;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffedd5;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fed7aa;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdba74;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb923c;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f97316;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ea580c;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c2410c;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9a3412;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c2d12;
            }
          }
        }
      }

      @include it('2xl\:shadow-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-orange-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #431407;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fffbeb;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef3c7;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde68a;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fcd34d;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbbf24;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f59e0b;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d97706;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #b45309;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #92400e;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #78350f;
            }
          }
        }
      }

      @include it('2xl\:shadow-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-amber-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #451a03;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fefce8;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef9c3;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fef08a;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fde047;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #facc15;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eab308;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ca8a04;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a16207;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #854d0e;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #713f12;
            }
          }
        }
      }

      @include it('2xl\:shadow-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-yellow-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #422006;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f7fee7;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfccb;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d9f99d;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bef264;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a3e635;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #84cc16;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #65a30d;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4d7c0f;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3f6212;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #365314;
            }
          }
        }
      }

      @include it('2xl\:shadow-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-lime-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1a2e05;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdf4;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dcfce7;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bbf7d0;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86efac;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4ade80;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22c55e;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #16a34a;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #15803d;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #166534;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14532d;
            }
          }
        }
      }

      @include it('2xl\:shadow-green-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-green-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #052e16;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfdf5;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d1fae5;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a7f3d0;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6ee7b7;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #34d399;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #10b981;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #059669;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #047857;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #065f46;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #064e3b;
            }
          }
        }
      }

      @include it('2xl\:shadow-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-emerald-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #022c22;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0fdfa;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ccfbf1;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #99f6e4;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5eead4;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2dd4bf;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #14b8a6;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0d9488;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0f766e;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #115e59;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #134e4a;
            }
          }
        }
      }

      @include it('2xl\:shadow-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-teal-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #042f2e;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ecfeff;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #cffafe;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5f3fc;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #67e8f9;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #22d3ee;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #06b6d4;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0891b2;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0e7490;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #155e75;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #164e63;
            }
          }
        }
      }

      @include it('2xl\:shadow-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-cyan-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #083344;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0f9ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0f2fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bae6fd;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7dd3fc;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #38bdf8;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0ea5e9;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0284c7;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0369a1;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #075985;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #0c4a6e;
            }
          }
        }
      }

      @include it('2xl\:shadow-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-sky-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #082f49;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eff6ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #dbeafe;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #bfdbfe;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #93c5fd;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #60a5fa;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b82f6;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2563eb;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1d4ed8;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e40af;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e3a8a;
            }
          }
        }
      }

      @include it('2xl\:shadow-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-blue-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #172554;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #eef2ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e0e7ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c7d2fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a5b4fc;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #818cf8;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6366f1;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4f46e5;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4338ca;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3730a3;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #312e81;
            }
          }
        }
      }

      @include it('2xl\:shadow-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-indigo-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #1e1b4b;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5f3ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ede9fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ddd6fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c4b5fd;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a78bfa;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #8b5cf6;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7c3aed;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6d28d9;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #5b21b6;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c1d95;
            }
          }
        }
      }

      @include it('2xl\:shadow-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-violet-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #2e1065;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #faf5ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f3e8ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e9d5ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d8b4fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c084fc;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a855f7;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9333ea;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #7e22ce;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #6b21a8;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #581c87;
            }
          }
        }
      }

      @include it('2xl\:shadow-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-purple-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #3b0764;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf4ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fae8ff;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f5d0fe;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f0abfc;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e879f9;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #d946ef;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #c026d3;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #a21caf;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #86198f;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #701a75;
            }
          }
        }
      }

      @include it('2xl\:shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-fuchsia-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4a044e;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fdf2f8;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fce7f3;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fbcfe8;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f9a8d4;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f472b6;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ec4899;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #db2777;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be185d;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9d174d;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #831843;
            }
          }
        }
      }

      @include it('2xl\:shadow-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-pink-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #500724;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-50;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fff1f2;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-100;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #ffe4e6;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-200;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fecdd3;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-300;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fda4af;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-400;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #fb7185;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-500;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #f43f5e;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-600;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #e11d48;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-700;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #be123c;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-800;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #9f1239;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-900;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #881337;
            }
          }
        }
      }

      @include it('2xl\:shadow-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:shadow-rose-950;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #4c0519;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #50d71e;
          }
        }
      }

      @include it('sm\:shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include sm\:shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #50d71e;
            }
          }
        }
      }

      @include it('md\:shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include md\:shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #50d71e;
            }
          }
        }
      }

      @include it('lg\:shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include lg\:shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #50d71e;
            }
          }
        }
      }

      @include it('xl\:shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include xl\:shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #50d71e;
            }
          }
        }
      }

      @include it('2xl\:shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include \2xl\:shadow-(#50d71e);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              box-shadow:
                0 0 0 0 #fff,
                0 0 0 0 rgba(59, 130, 246, 0.5),
                0 0 0 0 #50d71e;
            }
          }
        }
      }
    }
  }
}
