@use '../../mode0' as *;
@use 'true' as *;

@include describe('9.Filters') {
  @include describe('Drop Shadow') {
    @include describe('Basic') {
      @include it('drop-shadow-sm') {
        @include assert {
          @include output {
            @include drop-shadow-sm;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
          }
        }
      }

      @include it('drop-shadow') {
        @include assert {
          @include output {
            @include drop-shadow;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
              drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
          }
        }
      }

      @include it('drop-shadow-md') {
        @include assert {
          @include output {
            @include drop-shadow-md;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
              drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
          }
        }
      }

      @include it('drop-shadow-lg') {
        @include assert {
          @include output {
            @include drop-shadow-lg;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04))
              drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
          }
        }
      }

      @include it('drop-shadow-xl') {
        @include assert {
          @include output {
            @include drop-shadow-xl;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03))
              drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
          }
        }
      }

      @include it('drop-shadow-2xl') {
        @include assert {
          @include output {
            @include drop-shadow-2xl;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
          }
        }
      }

      @include it('drop-shadow-none') {
        @include assert {
          @include output {
            @include drop-shadow-none;
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 0 #0000);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('md\:drop-shadow-sm') {
        @include assert {
          @include output {
            @include md\:drop-shadow-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
            }
          }
        }
      }

      @include it('md\:drop-shadow') {
        @include assert {
          @include output {
            @include md\:drop-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
                drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('md\:drop-shadow-md') {
        @include assert {
          @include output {
            @include md\:drop-shadow-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
                drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('md\:drop-shadow-lg') {
        @include assert {
          @include output {
            @include md\:drop-shadow-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04))
                drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
            }
          }
        }
      }

      @include it('md\:drop-shadow-xl') {
        @include assert {
          @include output {
            @include md\:drop-shadow-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03))
                drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
            }
          }
        }
      }

      @include it('md\:drop-shadow-2xl') {
        @include assert {
          @include output {
            @include md\:drop-shadow-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
            }
          }
        }
      }

      @include it('md\:drop-shadow-none') {
        @include assert {
          @include output {
            @include md\:drop-shadow-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 0 #0000);
            }
          }
        }
      }

      @include it('lg\:drop-shadow-sm') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
            }
          }
        }
      }

      @include it('lg\:drop-shadow') {
        @include assert {
          @include output {
            @include lg\:drop-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
                drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-md') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
                drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-lg') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04))
                drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-xl') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03))
                drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-2xl') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-none') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 0 #0000);
            }
          }
        }
      }

      @include it('xl\:drop-shadow-sm') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
            }
          }
        }
      }

      @include it('xl\:drop-shadow') {
        @include assert {
          @include output {
            @include xl\:drop-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
                drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-md') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
                drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-lg') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04))
                drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-xl') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03))
                drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-2xl') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-none') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 0 #0000);
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-sm') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
                drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-md') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
                drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-lg') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04))
                drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-xl') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03))
                drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-2xl') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-none') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 0 #0000);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
          }
        }
      }

      @include it('sm\:drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include sm\:drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
            }
          }
        }
      }

      @include it('md\:drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include md\:drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
            }
          }
        }
      }

      @include it('lg\:drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include lg\:drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
            }
          }
        }
      }

      @include it('xl\:drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include xl\:drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
            }
          }
        }
      }

      @include it('2xl\:drop-shadow-(0 35px 35px rgba(0,0,0,0.25))') {
        @include assert {
          @include output {
            @include \2xl\:drop-shadow-(0 35px 35px rgba(0, 0, 0, 0.25));
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: drop-shadow(0 35px 35px rgba(0, 0, 0, 0.25));
            }
          }
        }
      }
    }
  }
}
