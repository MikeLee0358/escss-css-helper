@use '../../mode0' as *;
@use 'true' as *;

// private member(prefix - or _) can't be imported, so I put here for testing

@mixin -backdrop-hue-rotate-0 {
  $tw-backdrop-hue-rotate: hue-rotate(-0deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-15 {
  $tw-backdrop-hue-rotate: hue-rotate(-15deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-30 {
  $tw-backdrop-hue-rotate: hue-rotate(-30deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-60 {
  $tw-backdrop-hue-rotate: hue-rotate(-60deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-90 {
  $tw-backdrop-hue-rotate: hue-rotate(-90deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-180 {
  $tw-backdrop-hue-rotate: hue-rotate(-180deg) !global;
  backdrop-filter: get_backdrop-filter();
}

@mixin -backdrop-hue-rotate-($v) {
  $tw-backdrop-hue-rotate: hue-rotate(-$v) !global;
  @include backdrop-filter(get_backdrop-filter());
}

@include describe('9.Filters') {
  @include describe('Backdrop Hue Rotate') {
    @include describe('Basic') {
      @include it('backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(0deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(15deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(30deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(60deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(90deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(180deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-0deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-15deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-30deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-60deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-90deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-180deg);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(0deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(15deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(30deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(60deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(90deg);
          }
        }
      }

      @include it('backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(180deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-0deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-15deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-30deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-60deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-90deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-180deg);
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-0') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-15') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-15;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-30') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-30;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-60') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-90') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-90;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-180') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-180;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(270deg);
          }
        }
      }

      @include it('-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include -backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            backdrop-filter: hue-rotate(-270deg);
          }
        }
      }

      @include it('sm\:backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include sm\:backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }

      @include it('sm\:-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include sm\:-backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }

      @include it('md\:backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include md\:backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }

      @include it('md\:-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include md\:-backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }

      @include it('lg\:backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include lg\:backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }

      @include it('lg\:-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include lg\:-backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }

      @include it('xl\:backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include xl\:backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }

      @include it('xl\:-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include xl\:-backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }

      @include it('2xl\:backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include \2xl\:backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }

      @include it('2xl\:-backdrop-hue-rotate-(270deg)') {
        @include assert {
          @include output {
            @include \2xl\:-backdrop-hue-rotate-(270deg);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }
    }
  }
}
