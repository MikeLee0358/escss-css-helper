@use '../../mode0' as *;
@use 'true' as *;

@include describe('9.Filters') {
  @include describe('Blur') {
    @include describe('Basic') {
      @include it('blur-none') {
        @include assert {
          @include output {
            @include blur-none;
            @include reset;
          }

          @include expect {
            filter: blur(0);
          }
        }
      }

      @include it('blur-sm') {
        @include assert {
          @include output {
            @include blur-sm;
            @include reset;
          }

          @include expect {
            filter: blur(4px);
          }
        }
      }

      @include it('blur') {
        @include assert {
          @include output {
            @include blur;
            @include reset;
          }

          @include expect {
            filter: blur(8px);
          }
        }
      }

      @include it('blur-md') {
        @include assert {
          @include output {
            @include blur-md;
            @include reset;
          }

          @include expect {
            filter: blur(12px);
          }
        }
      }

      @include it('blur-lg') {
        @include assert {
          @include output {
            @include blur-lg;
            @include reset;
          }

          @include expect {
            filter: blur(16px);
          }
        }
      }

      @include it('blur-xl') {
        @include assert {
          @include output {
            @include blur-xl;
            @include reset;
          }

          @include expect {
            filter: blur(24px);
          }
        }
      }

      @include it('blur-2xl') {
        @include assert {
          @include output {
            @include blur-2xl;
            @include reset;
          }

          @include expect {
            filter: blur(40px);
          }
        }
      }

      @include it('blur-3xl') {
        @include assert {
          @include output {
            @include blur-3xl;
            @include reset;
          }

          @include expect {
            filter: blur(64px);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:blur-none') {
        @include assert {
          @include output {
            @include sm\:blur-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(0);
            }
          }
        }
      }

      @include it('sm\:blur-sm') {
        @include assert {
          @include output {
            @include sm\:blur-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(4px);
            }
          }
        }
      }

      @include it('sm\:blur') {
        @include assert {
          @include output {
            @include sm\:blur;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(8px);
            }
          }
        }
      }

      @include it('sm\:blur-md') {
        @include assert {
          @include output {
            @include sm\:blur-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(12px);
            }
          }
        }
      }

      @include it('sm\:blur-lg') {
        @include assert {
          @include output {
            @include sm\:blur-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(16px);
            }
          }
        }
      }

      @include it('sm\:blur-xl') {
        @include assert {
          @include output {
            @include sm\:blur-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(24px);
            }
          }
        }
      }

      @include it('sm\:blur-2xl') {
        @include assert {
          @include output {
            @include sm\:blur-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(40px);
            }
          }
        }
      }

      @include it('sm\:blur-3xl') {
        @include assert {
          @include output {
            @include sm\:blur-3xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(64px);
            }
          }
        }
      }

      @include it('md\:blur-none') {
        @include assert {
          @include output {
            @include md\:blur-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(0);
            }
          }
        }
      }

      @include it('md\:blur-sm') {
        @include assert {
          @include output {
            @include md\:blur-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(4px);
            }
          }
        }
      }

      @include it('md\:blur') {
        @include assert {
          @include output {
            @include md\:blur;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(8px);
            }
          }
        }
      }

      @include it('md\:blur-md') {
        @include assert {
          @include output {
            @include md\:blur-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(12px);
            }
          }
        }
      }

      @include it('md\:blur-lg') {
        @include assert {
          @include output {
            @include md\:blur-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(16px);
            }
          }
        }
      }

      @include it('md\:blur-xl') {
        @include assert {
          @include output {
            @include md\:blur-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(24px);
            }
          }
        }
      }

      @include it('md\:blur-2xl') {
        @include assert {
          @include output {
            @include md\:blur-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(40px);
            }
          }
        }
      }

      @include it('md\:blur-3xl') {
        @include assert {
          @include output {
            @include md\:blur-3xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(64px);
            }
          }
        }
      }

      @include it('lg\:blur-none') {
        @include assert {
          @include output {
            @include lg\:blur-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(0);
            }
          }
        }
      }

      @include it('lg\:blur-sm') {
        @include assert {
          @include output {
            @include lg\:blur-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(4px);
            }
          }
        }
      }

      @include it('lg\:blur') {
        @include assert {
          @include output {
            @include lg\:blur;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(8px);
            }
          }
        }
      }

      @include it('lg\:blur-md') {
        @include assert {
          @include output {
            @include lg\:blur-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(12px);
            }
          }
        }
      }

      @include it('lg\:blur-lg') {
        @include assert {
          @include output {
            @include lg\:blur-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(16px);
            }
          }
        }
      }

      @include it('lg\:blur-xl') {
        @include assert {
          @include output {
            @include lg\:blur-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(24px);
            }
          }
        }
      }

      @include it('lg\:blur-2xl') {
        @include assert {
          @include output {
            @include lg\:blur-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(40px);
            }
          }
        }
      }

      @include it('lg\:blur-3xl') {
        @include assert {
          @include output {
            @include lg\:blur-3xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(64px);
            }
          }
        }
      }

      @include it('xl\:blur-none') {
        @include assert {
          @include output {
            @include xl\:blur-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(0);
            }
          }
        }
      }

      @include it('xl\:blur-sm') {
        @include assert {
          @include output {
            @include xl\:blur-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(4px);
            }
          }
        }
      }

      @include it('xl\:blur') {
        @include assert {
          @include output {
            @include xl\:blur;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(8px);
            }
          }
        }
      }

      @include it('xl\:blur-md') {
        @include assert {
          @include output {
            @include xl\:blur-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(12px);
            }
          }
        }
      }

      @include it('xl\:blur-lg') {
        @include assert {
          @include output {
            @include xl\:blur-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(16px);
            }
          }
        }
      }

      @include it('xl\:blur-xl') {
        @include assert {
          @include output {
            @include xl\:blur-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(24px);
            }
          }
        }
      }

      @include it('xl\:blur-2xl') {
        @include assert {
          @include output {
            @include xl\:blur-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(40px);
            }
          }
        }
      }

      @include it('xl\:blur-3xl') {
        @include assert {
          @include output {
            @include xl\:blur-3xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(64px);
            }
          }
        }
      }

      @include it('2xl\:blur-none') {
        @include assert {
          @include output {
            @include \2xl\:blur-none;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(0);
            }
          }
        }
      }

      @include it('2xl\:blur-sm') {
        @include assert {
          @include output {
            @include \2xl\:blur-sm;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(4px);
            }
          }
        }
      }

      @include it('2xl\:blur') {
        @include assert {
          @include output {
            @include \2xl\:blur;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(8px);
            }
          }
        }
      }

      @include it('2xl\:blur-md') {
        @include assert {
          @include output {
            @include \2xl\:blur-md;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(12px);
            }
          }
        }
      }

      @include it('2xl\:blur-lg') {
        @include assert {
          @include output {
            @include \2xl\:blur-lg;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(16px);
            }
          }
        }
      }

      @include it('2xl\:blur-xl') {
        @include assert {
          @include output {
            @include \2xl\:blur-xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(24px);
            }
          }
        }
      }

      @include it('2xl\:blur-2xl') {
        @include assert {
          @include output {
            @include \2xl\:blur-2xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(40px);
            }
          }
        }
      }

      @include it('2xl\:blur-3xl') {
        @include assert {
          @include output {
            @include \2xl\:blur-3xl;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(64px);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('blur-(2px)') {
        @include assert {
          @include output {
            @include blur-(2px);
            @include reset;
          }

          @include expect {
            filter: blur(2px);
          }
        }
      }

      @include it('sm\:blur-(2px)') {
        @include assert {
          @include output {
            @include sm\:blur-(2px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: blur(2px);
            }
          }
        }
      }

      @include it('md\:blur-(2px)') {
        @include assert {
          @include output {
            @include md\:blur-(2px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: blur(2px);
            }
          }
        }
      }

      @include it('lg\:blur-(2px)') {
        @include assert {
          @include output {
            @include lg\:blur-(2px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: blur(2px);
            }
          }
        }
      }

      @include it('xl\:blur-(2px)') {
        @include assert {
          @include output {
            @include xl\:blur-(2px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: blur(2px);
            }
          }
        }
      }

      @include it('2xl\:blur-(2px)') {
        @include assert {
          @include output {
            @include \2xl\:blur-(2px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: blur(2px);
            }
          }
        }
      }
    }
  }
}
