@use '../../mode0' as *;
@use 'true' as *;

@include describe('9.Filters') {
  @include describe('Invert') {
    @include describe('Basic') {
      @include it('invert-0') {
        @include assert {
          @include output {
            @include invert-0;
            @include reset;
          }

          @include expect {
            filter: invert(0);
          }
        }
      }

      @include it('invert') {
        @include assert {
          @include output {
            @include invert;
            @include reset;
          }

          @include expect {
            filter: invert(100%);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:invert-0') {
        @include assert {
          @include output {
            @include sm\:invert-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: invert(0);
            }
          }
        }
      }

      @include it('sm\:invert') {
        @include assert {
          @include output {
            @include sm\:invert;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: invert(100%);
            }
          }
        }
      }

      @include it('md\:invert-0') {
        @include assert {
          @include output {
            @include md\:invert-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: invert(0);
            }
          }
        }
      }

      @include it('md\:invert') {
        @include assert {
          @include output {
            @include md\:invert;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: invert(100%);
            }
          }
        }
      }

      @include it('lg\:invert-0') {
        @include assert {
          @include output {
            @include lg\:invert-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: invert(0);
            }
          }
        }
      }

      @include it('lg\:invert') {
        @include assert {
          @include output {
            @include lg\:invert;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: invert(100%);
            }
          }
        }
      }

      @include it('xl\:invert-0') {
        @include assert {
          @include output {
            @include xl\:invert-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: invert(0);
            }
          }
        }
      }

      @include it('xl\:invert') {
        @include assert {
          @include output {
            @include xl\:invert;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: invert(100%);
            }
          }
        }
      }

      @include it('2xl\:invert-0') {
        @include assert {
          @include output {
            @include \2xl\:invert-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: invert(0);
            }
          }
        }
      }

      @include it('2xl\:invert') {
        @include assert {
          @include output {
            @include \2xl\:invert;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: invert(100%);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('invert-(.25)') {
        @include assert {
          @include output {
            @include invert-(0.25);
            @include reset;
          }

          @include expect {
            filter: invert(0.25);
          }
        }
      }

      @include it('sm\:invert-(.25)') {
        @include assert {
          @include output {
            @include sm\:invert-(0.25);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              filter: invert(0.25);
            }
          }
        }
      }

      @include it('md\:invert-(.25)') {
        @include assert {
          @include output {
            @include md\:invert-(0.25);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              filter: invert(0.25);
            }
          }
        }
      }

      @include it('lg\:invert-(.25)') {
        @include assert {
          @include output {
            @include lg\:invert-(0.25);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              filter: invert(0.25);
            }
          }
        }
      }

      @include it('xl\:invert-(.25)') {
        @include assert {
          @include output {
            @include xl\:invert-(0.25);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              filter: invert(0.25);
            }
          }
        }
      }

      @include it('2xl\:invert-(.25)') {
        @include assert {
          @include output {
            @include \2xl\:invert-(0.25);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              filter: invert(0.25);
            }
          }
        }
      }
    }
  }
}
