@import '../_classic_only';

@include describe('2.Flexbox & Grid') {
  @include describe('Grid Auto Rows') {
    @include describe('Basic') {
      @include it('auto-rows-auto') {
        @include assert {
          @include output {
            @include auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            grid-auto-rows: auto;
          }
        }
      }

      @include it('auto-rows-min') {
        @include assert {
          @include output {
            @include auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            grid-auto-rows: min-content;
          }
        }
      }

      @include it('auto-rows-max') {
        @include assert {
          @include output {
            @include auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            grid-auto-rows: max-content;
          }
        }
      }

      @include it('auto-rows-fr') {
        @include assert {
          @include output {
            @include auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            grid-auto-rows: minmax(0, 1fr);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:auto-rows-auto') {
        @include assert {
          @include output {
            @include sm\:auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              grid-auto-rows: auto;
            }
          }
        }
      }

      @include it('sm\:auto-rows-min') {
        @include assert {
          @include output {
            @include sm\:auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              grid-auto-rows: min-content;
            }
          }
        }
      }

      @include it('sm\:auto-rows-max') {
        @include assert {
          @include output {
            @include sm\:auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              grid-auto-rows: max-content;
            }
          }
        }
      }

      @include it('sm\:auto-rows-fr') {
        @include assert {
          @include output {
            @include sm\:auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              grid-auto-rows: minmax(0, 1fr);
            }
          }
        }
      }

      @include it('md\:auto-rows-auto') {
        @include assert {
          @include output {
            @include md\:auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              grid-auto-rows: auto;
            }
          }
        }
      }

      @include it('md\:auto-rows-min') {
        @include assert {
          @include output {
            @include md\:auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              grid-auto-rows: min-content;
            }
          }
        }
      }

      @include it('md\:auto-rows-max') {
        @include assert {
          @include output {
            @include md\:auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              grid-auto-rows: max-content;
            }
          }
        }
      }

      @include it('md\:auto-rows-fr') {
        @include assert {
          @include output {
            @include md\:auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              grid-auto-rows: minmax(0, 1fr);
            }
          }
        }
      }

      @include it('lg\:auto-rows-auto') {
        @include assert {
          @include output {
            @include lg\:auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              grid-auto-rows: auto;
            }
          }
        }
      }

      @include it('lg\:auto-rows-min') {
        @include assert {
          @include output {
            @include lg\:auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              grid-auto-rows: min-content;
            }
          }
        }
      }

      @include it('lg\:auto-rows-max') {
        @include assert {
          @include output {
            @include lg\:auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              grid-auto-rows: max-content;
            }
          }
        }
      }

      @include it('lg\:auto-rows-fr') {
        @include assert {
          @include output {
            @include lg\:auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              grid-auto-rows: minmax(0, 1fr);
            }
          }
        }
      }

      @include it('xl\:auto-rows-auto') {
        @include assert {
          @include output {
            @include xl\:auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              grid-auto-rows: auto;
            }
          }
        }
      }

      @include it('xl\:auto-rows-min') {
        @include assert {
          @include output {
            @include xl\:auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              grid-auto-rows: min-content;
            }
          }
        }
      }

      @include it('xl\:auto-rows-max') {
        @include assert {
          @include output {
            @include xl\:auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              grid-auto-rows: max-content;
            }
          }
        }
      }

      @include it('xl\:auto-rows-fr') {
        @include assert {
          @include output {
            @include xl\:auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              grid-auto-rows: minmax(0, 1fr);
            }
          }
        }
      }

      @include it('2xl\:auto-rows-auto') {
        @include assert {
          @include output {
            @include \2xl\:auto-rows-auto;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              grid-auto-rows: auto;
            }
          }
        }
      }

      @include it('2xl\:auto-rows-min') {
        @include assert {
          @include output {
            @include \2xl\:auto-rows-min;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              grid-auto-rows: min-content;
            }
          }
        }
      }

      @include it('2xl\:auto-rows-max') {
        @include assert {
          @include output {
            @include \2xl\:auto-rows-max;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              grid-auto-rows: max-content;
            }
          }
        }
      }

      @include it('2xl\:auto-rows-fr') {
        @include assert {
          @include output {
            @include \2xl\:auto-rows-fr;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              grid-auto-rows: minmax(0, 1fr);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            grid-auto-rows: minmax(0, 2fr);
          }
        }
      }

      @include it('sm\:auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include sm\:auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              grid-auto-rows: minmax(0, 2fr);
            }
          }
        }
      }

      @include it('md\:auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include md\:auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              grid-auto-rows: minmax(0, 2fr);
            }
          }
        }
      }

      @include it('lg\:auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include lg\:auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              grid-auto-rows: minmax(0, 2fr);
            }
          }
        }
      }

      @include it('xl\:auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include xl\:auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              grid-auto-rows: minmax(0, 2fr);
            }
          }
        }
      }

      @include it('2xl\:auto-rows-(minmax(0, 2fr))') {
        @include assert {
          @include output {
            @include \2xl\:auto-rows-(minmax(0, 2fr));
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              grid-auto-rows: minmax(0, 2fr);
            }
          }
        }
      }
    }
  }
}
