@import '../_classic_only';

@include describe('2.Flexbox & Grid') {
  @include describe('Gap') {
    @include describe('Basic') {
      @include it('gap-0') {
        @include assert {
          @include output {
            @include gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0px;
          }
        }
      }

      @include it('gap-x-0') {
        @include assert {
          @include output {
            @include gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0px;
          }
        }
      }

      @include it('gap-y-0') {
        @include assert {
          @include output {
            @include gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0px;
          }
        }
      }

      @include it('gap-px') {
        @include assert {
          @include output {
            @include gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 1px;
          }
        }
      }

      @include it('gap-x-px') {
        @include assert {
          @include output {
            @include gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 1px;
          }
        }
      }

      @include it('gap-y-px') {
        @include assert {
          @include output {
            @include gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 1px;
          }
        }
      }

      @include it('gap-0\.5') {
        @include assert {
          @include output {
            @include gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.125rem;
          }
        }
      }

      @include it('gap-x-0\.5') {
        @include assert {
          @include output {
            @include gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.125rem;
          }
        }
      }

      @include it('gap-y-0\.5') {
        @include assert {
          @include output {
            @include gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.125rem;
          }
        }
      }

      @include it('gap-1') {
        @include assert {
          @include output {
            @include gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.25rem;
          }
        }
      }

      @include it('gap-x-1') {
        @include assert {
          @include output {
            @include gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.25rem;
          }
        }
      }

      @include it('gap-y-1') {
        @include assert {
          @include output {
            @include gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.25rem;
          }
        }
      }

      @include it('gap-1\.5') {
        @include assert {
          @include output {
            @include gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.375rem;
          }
        }
      }

      @include it('gap-x-1\.5') {
        @include assert {
          @include output {
            @include gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.375rem;
          }
        }
      }

      @include it('gap-y-1\.5') {
        @include assert {
          @include output {
            @include gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.375rem;
          }
        }
      }

      @include it('gap-2') {
        @include assert {
          @include output {
            @include gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.5rem;
          }
        }
      }

      @include it('gap-x-2') {
        @include assert {
          @include output {
            @include gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.5rem;
          }
        }
      }

      @include it('gap-y-2') {
        @include assert {
          @include output {
            @include gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.5rem;
          }
        }
      }

      @include it('gap-2\.5') {
        @include assert {
          @include output {
            @include gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.625rem;
          }
        }
      }

      @include it('gap-x-2\.5') {
        @include assert {
          @include output {
            @include gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.625rem;
          }
        }
      }

      @include it('gap-y-2\.5') {
        @include assert {
          @include output {
            @include gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.625rem;
          }
        }
      }

      @include it('gap-3') {
        @include assert {
          @include output {
            @include gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.75rem;
          }
        }
      }

      @include it('gap-x-3') {
        @include assert {
          @include output {
            @include gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.75rem;
          }
        }
      }

      @include it('gap-y-3') {
        @include assert {
          @include output {
            @include gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.75rem;
          }
        }
      }

      @include it('gap-3\.5') {
        @include assert {
          @include output {
            @include gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 0.875rem;
          }
        }
      }

      @include it('gap-x-3\.5') {
        @include assert {
          @include output {
            @include gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 0.875rem;
          }
        }
      }

      @include it('gap-y-3\.5') {
        @include assert {
          @include output {
            @include gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 0.875rem;
          }
        }
      }

      @include it('gap-4') {
        @include assert {
          @include output {
            @include gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 1rem;
          }
        }
      }

      @include it('gap-x-4') {
        @include assert {
          @include output {
            @include gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 1rem;
          }
        }
      }

      @include it('gap-y-4') {
        @include assert {
          @include output {
            @include gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 1rem;
          }
        }
      }

      @include it('gap-5') {
        @include assert {
          @include output {
            @include gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 1.25rem;
          }
        }
      }

      @include it('gap-x-5') {
        @include assert {
          @include output {
            @include gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 1.25rem;
          }
        }
      }

      @include it('gap-y-5') {
        @include assert {
          @include output {
            @include gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 1.25rem;
          }
        }
      }

      @include it('gap-6') {
        @include assert {
          @include output {
            @include gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 1.5rem;
          }
        }
      }

      @include it('gap-x-6') {
        @include assert {
          @include output {
            @include gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 1.5rem;
          }
        }
      }

      @include it('gap-y-6') {
        @include assert {
          @include output {
            @include gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 1.5rem;
          }
        }
      }

      @include it('gap-7') {
        @include assert {
          @include output {
            @include gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 1.75rem;
          }
        }
      }

      @include it('gap-x-7') {
        @include assert {
          @include output {
            @include gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 1.75rem;
          }
        }
      }

      @include it('gap-y-7') {
        @include assert {
          @include output {
            @include gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 1.75rem;
          }
        }
      }

      @include it('gap-8') {
        @include assert {
          @include output {
            @include gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 2rem;
          }
        }
      }

      @include it('gap-x-8') {
        @include assert {
          @include output {
            @include gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 2rem;
          }
        }
      }

      @include it('gap-y-8') {
        @include assert {
          @include output {
            @include gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 2rem;
          }
        }
      }

      @include it('gap-9') {
        @include assert {
          @include output {
            @include gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 2.25rem;
          }
        }
      }

      @include it('gap-x-9') {
        @include assert {
          @include output {
            @include gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 2.25rem;
          }
        }
      }

      @include it('gap-y-9') {
        @include assert {
          @include output {
            @include gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 2.25rem;
          }
        }
      }

      @include it('gap-10') {
        @include assert {
          @include output {
            @include gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 2.5rem;
          }
        }
      }

      @include it('gap-x-10') {
        @include assert {
          @include output {
            @include gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 2.5rem;
          }
        }
      }

      @include it('gap-y-10') {
        @include assert {
          @include output {
            @include gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 2.5rem;
          }
        }
      }

      @include it('gap-11') {
        @include assert {
          @include output {
            @include gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 2.75rem;
          }
        }
      }

      @include it('gap-x-11') {
        @include assert {
          @include output {
            @include gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 2.75rem;
          }
        }
      }

      @include it('gap-y-11') {
        @include assert {
          @include output {
            @include gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 2.75rem;
          }
        }
      }

      @include it('gap-12') {
        @include assert {
          @include output {
            @include gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 3rem;
          }
        }
      }

      @include it('gap-x-12') {
        @include assert {
          @include output {
            @include gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 3rem;
          }
        }
      }

      @include it('gap-y-12') {
        @include assert {
          @include output {
            @include gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 3rem;
          }
        }
      }

      @include it('gap-14') {
        @include assert {
          @include output {
            @include gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 3.5rem;
          }
        }
      }

      @include it('gap-x-14') {
        @include assert {
          @include output {
            @include gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 3.5rem;
          }
        }
      }

      @include it('gap-y-14') {
        @include assert {
          @include output {
            @include gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 3.5rem;
          }
        }
      }

      @include it('gap-16') {
        @include assert {
          @include output {
            @include gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 4rem;
          }
        }
      }

      @include it('gap-x-16') {
        @include assert {
          @include output {
            @include gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 4rem;
          }
        }
      }

      @include it('gap-y-16') {
        @include assert {
          @include output {
            @include gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 4rem;
          }
        }
      }

      @include it('gap-20') {
        @include assert {
          @include output {
            @include gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 5rem;
          }
        }
      }

      @include it('gap-x-20') {
        @include assert {
          @include output {
            @include gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 5rem;
          }
        }
      }

      @include it('gap-y-20') {
        @include assert {
          @include output {
            @include gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 5rem;
          }
        }
      }

      @include it('gap-24') {
        @include assert {
          @include output {
            @include gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 6rem;
          }
        }
      }

      @include it('gap-x-24') {
        @include assert {
          @include output {
            @include gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 6rem;
          }
        }
      }

      @include it('gap-y-24') {
        @include assert {
          @include output {
            @include gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 6rem;
          }
        }
      }

      @include it('gap-28') {
        @include assert {
          @include output {
            @include gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 7rem;
          }
        }
      }

      @include it('gap-x-28') {
        @include assert {
          @include output {
            @include gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 7rem;
          }
        }
      }

      @include it('gap-y-28') {
        @include assert {
          @include output {
            @include gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 7rem;
          }
        }
      }

      @include it('gap-32') {
        @include assert {
          @include output {
            @include gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 8rem;
          }
        }
      }

      @include it('gap-x-32') {
        @include assert {
          @include output {
            @include gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 8rem;
          }
        }
      }

      @include it('gap-y-32') {
        @include assert {
          @include output {
            @include gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 8rem;
          }
        }
      }

      @include it('gap-36') {
        @include assert {
          @include output {
            @include gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 9rem;
          }
        }
      }

      @include it('gap-x-36') {
        @include assert {
          @include output {
            @include gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 9rem;
          }
        }
      }

      @include it('gap-y-36') {
        @include assert {
          @include output {
            @include gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 9rem;
          }
        }
      }

      @include it('gap-40') {
        @include assert {
          @include output {
            @include gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 10rem;
          }
        }
      }

      @include it('gap-x-40') {
        @include assert {
          @include output {
            @include gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 10rem;
          }
        }
      }

      @include it('gap-y-40') {
        @include assert {
          @include output {
            @include gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 10rem;
          }
        }
      }

      @include it('gap-44') {
        @include assert {
          @include output {
            @include gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 11rem;
          }
        }
      }

      @include it('gap-x-44') {
        @include assert {
          @include output {
            @include gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 11rem;
          }
        }
      }

      @include it('gap-y-44') {
        @include assert {
          @include output {
            @include gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 11rem;
          }
        }
      }

      @include it('gap-48') {
        @include assert {
          @include output {
            @include gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 12rem;
          }
        }
      }

      @include it('gap-x-48') {
        @include assert {
          @include output {
            @include gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 12rem;
          }
        }
      }

      @include it('gap-y-48') {
        @include assert {
          @include output {
            @include gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 12rem;
          }
        }
      }

      @include it('gap-52') {
        @include assert {
          @include output {
            @include gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 13rem;
          }
        }
      }

      @include it('gap-x-52') {
        @include assert {
          @include output {
            @include gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 13rem;
          }
        }
      }

      @include it('gap-y-52') {
        @include assert {
          @include output {
            @include gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 13rem;
          }
        }
      }

      @include it('gap-56') {
        @include assert {
          @include output {
            @include gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 14rem;
          }
        }
      }

      @include it('gap-x-56') {
        @include assert {
          @include output {
            @include gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 14rem;
          }
        }
      }

      @include it('gap-y-56') {
        @include assert {
          @include output {
            @include gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 14rem;
          }
        }
      }

      @include it('gap-60') {
        @include assert {
          @include output {
            @include gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 15rem;
          }
        }
      }

      @include it('gap-x-60') {
        @include assert {
          @include output {
            @include gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 15rem;
          }
        }
      }

      @include it('gap-y-60') {
        @include assert {
          @include output {
            @include gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 15rem;
          }
        }
      }

      @include it('gap-64') {
        @include assert {
          @include output {
            @include gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 16rem;
          }
        }
      }

      @include it('gap-x-64') {
        @include assert {
          @include output {
            @include gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 16rem;
          }
        }
      }

      @include it('gap-y-64') {
        @include assert {
          @include output {
            @include gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 16rem;
          }
        }
      }

      @include it('gap-72') {
        @include assert {
          @include output {
            @include gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 18rem;
          }
        }
      }

      @include it('gap-x-72') {
        @include assert {
          @include output {
            @include gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 18rem;
          }
        }
      }

      @include it('gap-y-72') {
        @include assert {
          @include output {
            @include gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 18rem;
          }
        }
      }

      @include it('gap-80') {
        @include assert {
          @include output {
            @include gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 20rem;
          }
        }
      }

      @include it('gap-x-80') {
        @include assert {
          @include output {
            @include gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 20rem;
          }
        }
      }

      @include it('gap-y-80') {
        @include assert {
          @include output {
            @include gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 20rem;
          }
        }
      }

      @include it('gap-96') {
        @include assert {
          @include output {
            @include gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 24rem;
          }
        }
      }

      @include it('gap-x-96') {
        @include assert {
          @include output {
            @include gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 24rem;
          }
        }
      }

      @include it('gap-y-96') {
        @include assert {
          @include output {
            @include gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 24rem;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:gap-0') {
        @include assert {
          @include output {
            @include sm\:gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0px;
            }
          }
        }
      }

      @include it('sm\:gap-x-0') {
        @include assert {
          @include output {
            @include sm\:gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0px;
            }
          }
        }
      }

      @include it('sm\:gap-y-0') {
        @include assert {
          @include output {
            @include sm\:gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0px;
            }
          }
        }
      }

      @include it('sm\:gap-px') {
        @include assert {
          @include output {
            @include sm\:gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 1px;
            }
          }
        }
      }

      @include it('sm\:gap-x-px') {
        @include assert {
          @include output {
            @include sm\:gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 1px;
            }
          }
        }
      }

      @include it('sm\:gap-y-px') {
        @include assert {
          @include output {
            @include sm\:gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 1px;
            }
          }
        }
      }

      @include it('sm\:gap-0\.5') {
        @include assert {
          @include output {
            @include sm\:gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-0\.5') {
        @include assert {
          @include output {
            @include sm\:gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-0\.5') {
        @include assert {
          @include output {
            @include sm\:gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:gap-1') {
        @include assert {
          @include output {
            @include sm\:gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-1') {
        @include assert {
          @include output {
            @include sm\:gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-1') {
        @include assert {
          @include output {
            @include sm\:gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-1\.5') {
        @include assert {
          @include output {
            @include sm\:gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-1\.5') {
        @include assert {
          @include output {
            @include sm\:gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-1\.5') {
        @include assert {
          @include output {
            @include sm\:gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:gap-2') {
        @include assert {
          @include output {
            @include sm\:gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-2') {
        @include assert {
          @include output {
            @include sm\:gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-2') {
        @include assert {
          @include output {
            @include sm\:gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-2\.5') {
        @include assert {
          @include output {
            @include sm\:gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-2\.5') {
        @include assert {
          @include output {
            @include sm\:gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-2\.5') {
        @include assert {
          @include output {
            @include sm\:gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:gap-3') {
        @include assert {
          @include output {
            @include sm\:gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-3') {
        @include assert {
          @include output {
            @include sm\:gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-3') {
        @include assert {
          @include output {
            @include sm\:gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-3\.5') {
        @include assert {
          @include output {
            @include sm\:gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-3\.5') {
        @include assert {
          @include output {
            @include sm\:gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-3\.5') {
        @include assert {
          @include output {
            @include sm\:gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:gap-4') {
        @include assert {
          @include output {
            @include sm\:gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 1rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-4') {
        @include assert {
          @include output {
            @include sm\:gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 1rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-4') {
        @include assert {
          @include output {
            @include sm\:gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 1rem;
            }
          }
        }
      }

      @include it('sm\:gap-5') {
        @include assert {
          @include output {
            @include sm\:gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-5') {
        @include assert {
          @include output {
            @include sm\:gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-5') {
        @include assert {
          @include output {
            @include sm\:gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-6') {
        @include assert {
          @include output {
            @include sm\:gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-6') {
        @include assert {
          @include output {
            @include sm\:gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-6') {
        @include assert {
          @include output {
            @include sm\:gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-7') {
        @include assert {
          @include output {
            @include sm\:gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-7') {
        @include assert {
          @include output {
            @include sm\:gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-7') {
        @include assert {
          @include output {
            @include sm\:gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-8') {
        @include assert {
          @include output {
            @include sm\:gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 2rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-8') {
        @include assert {
          @include output {
            @include sm\:gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 2rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-8') {
        @include assert {
          @include output {
            @include sm\:gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 2rem;
            }
          }
        }
      }

      @include it('sm\:gap-9') {
        @include assert {
          @include output {
            @include sm\:gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-9') {
        @include assert {
          @include output {
            @include sm\:gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-9') {
        @include assert {
          @include output {
            @include sm\:gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:gap-10') {
        @include assert {
          @include output {
            @include sm\:gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-10') {
        @include assert {
          @include output {
            @include sm\:gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-10') {
        @include assert {
          @include output {
            @include sm\:gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-11') {
        @include assert {
          @include output {
            @include sm\:gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-11') {
        @include assert {
          @include output {
            @include sm\:gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-11') {
        @include assert {
          @include output {
            @include sm\:gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-12') {
        @include assert {
          @include output {
            @include sm\:gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 3rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-12') {
        @include assert {
          @include output {
            @include sm\:gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 3rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-12') {
        @include assert {
          @include output {
            @include sm\:gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 3rem;
            }
          }
        }
      }

      @include it('sm\:gap-14') {
        @include assert {
          @include output {
            @include sm\:gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-14') {
        @include assert {
          @include output {
            @include sm\:gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-14') {
        @include assert {
          @include output {
            @include sm\:gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:gap-16') {
        @include assert {
          @include output {
            @include sm\:gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 4rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-16') {
        @include assert {
          @include output {
            @include sm\:gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 4rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-16') {
        @include assert {
          @include output {
            @include sm\:gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 4rem;
            }
          }
        }
      }

      @include it('sm\:gap-20') {
        @include assert {
          @include output {
            @include sm\:gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 5rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-20') {
        @include assert {
          @include output {
            @include sm\:gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 5rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-20') {
        @include assert {
          @include output {
            @include sm\:gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 5rem;
            }
          }
        }
      }

      @include it('sm\:gap-24') {
        @include assert {
          @include output {
            @include sm\:gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 6rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-24') {
        @include assert {
          @include output {
            @include sm\:gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 6rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-24') {
        @include assert {
          @include output {
            @include sm\:gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 6rem;
            }
          }
        }
      }

      @include it('sm\:gap-28') {
        @include assert {
          @include output {
            @include sm\:gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 7rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-28') {
        @include assert {
          @include output {
            @include sm\:gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 7rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-28') {
        @include assert {
          @include output {
            @include sm\:gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 7rem;
            }
          }
        }
      }

      @include it('sm\:gap-32') {
        @include assert {
          @include output {
            @include sm\:gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 8rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-32') {
        @include assert {
          @include output {
            @include sm\:gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 8rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-32') {
        @include assert {
          @include output {
            @include sm\:gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 8rem;
            }
          }
        }
      }

      @include it('sm\:gap-36') {
        @include assert {
          @include output {
            @include sm\:gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 9rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-36') {
        @include assert {
          @include output {
            @include sm\:gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 9rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-36') {
        @include assert {
          @include output {
            @include sm\:gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 9rem;
            }
          }
        }
      }

      @include it('sm\:gap-40') {
        @include assert {
          @include output {
            @include sm\:gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 10rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-40') {
        @include assert {
          @include output {
            @include sm\:gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 10rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-40') {
        @include assert {
          @include output {
            @include sm\:gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 10rem;
            }
          }
        }
      }

      @include it('sm\:gap-44') {
        @include assert {
          @include output {
            @include sm\:gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 11rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-44') {
        @include assert {
          @include output {
            @include sm\:gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 11rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-44') {
        @include assert {
          @include output {
            @include sm\:gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 11rem;
            }
          }
        }
      }

      @include it('sm\:gap-48') {
        @include assert {
          @include output {
            @include sm\:gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 12rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-48') {
        @include assert {
          @include output {
            @include sm\:gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 12rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-48') {
        @include assert {
          @include output {
            @include sm\:gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 12rem;
            }
          }
        }
      }

      @include it('sm\:gap-52') {
        @include assert {
          @include output {
            @include sm\:gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 13rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-52') {
        @include assert {
          @include output {
            @include sm\:gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 13rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-52') {
        @include assert {
          @include output {
            @include sm\:gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 13rem;
            }
          }
        }
      }

      @include it('sm\:gap-56') {
        @include assert {
          @include output {
            @include sm\:gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 14rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-56') {
        @include assert {
          @include output {
            @include sm\:gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 14rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-56') {
        @include assert {
          @include output {
            @include sm\:gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 14rem;
            }
          }
        }
      }

      @include it('sm\:gap-60') {
        @include assert {
          @include output {
            @include sm\:gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 15rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-60') {
        @include assert {
          @include output {
            @include sm\:gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 15rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-60') {
        @include assert {
          @include output {
            @include sm\:gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 15rem;
            }
          }
        }
      }

      @include it('sm\:gap-64') {
        @include assert {
          @include output {
            @include sm\:gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 16rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-64') {
        @include assert {
          @include output {
            @include sm\:gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 16rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-64') {
        @include assert {
          @include output {
            @include sm\:gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 16rem;
            }
          }
        }
      }

      @include it('sm\:gap-72') {
        @include assert {
          @include output {
            @include sm\:gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 18rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-72') {
        @include assert {
          @include output {
            @include sm\:gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 18rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-72') {
        @include assert {
          @include output {
            @include sm\:gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 18rem;
            }
          }
        }
      }

      @include it('sm\:gap-80') {
        @include assert {
          @include output {
            @include sm\:gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 20rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-80') {
        @include assert {
          @include output {
            @include sm\:gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 20rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-80') {
        @include assert {
          @include output {
            @include sm\:gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 20rem;
            }
          }
        }
      }

      @include it('sm\:gap-96') {
        @include assert {
          @include output {
            @include sm\:gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 24rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-96') {
        @include assert {
          @include output {
            @include sm\:gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 24rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-96') {
        @include assert {
          @include output {
            @include sm\:gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 24rem;
            }
          }
        }
      }

      @include it('md\:gap-0') {
        @include assert {
          @include output {
            @include md\:gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0px;
            }
          }
        }
      }

      @include it('md\:gap-x-0') {
        @include assert {
          @include output {
            @include md\:gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0px;
            }
          }
        }
      }

      @include it('md\:gap-y-0') {
        @include assert {
          @include output {
            @include md\:gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0px;
            }
          }
        }
      }

      @include it('md\:gap-px') {
        @include assert {
          @include output {
            @include md\:gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 1px;
            }
          }
        }
      }

      @include it('md\:gap-x-px') {
        @include assert {
          @include output {
            @include md\:gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 1px;
            }
          }
        }
      }

      @include it('md\:gap-y-px') {
        @include assert {
          @include output {
            @include md\:gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 1px;
            }
          }
        }
      }

      @include it('md\:gap-0\.5') {
        @include assert {
          @include output {
            @include md\:gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.125rem;
            }
          }
        }
      }

      @include it('md\:gap-x-0\.5') {
        @include assert {
          @include output {
            @include md\:gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.125rem;
            }
          }
        }
      }

      @include it('md\:gap-y-0\.5') {
        @include assert {
          @include output {
            @include md\:gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.125rem;
            }
          }
        }
      }

      @include it('md\:gap-1') {
        @include assert {
          @include output {
            @include md\:gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.25rem;
            }
          }
        }
      }

      @include it('md\:gap-x-1') {
        @include assert {
          @include output {
            @include md\:gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.25rem;
            }
          }
        }
      }

      @include it('md\:gap-y-1') {
        @include assert {
          @include output {
            @include md\:gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.25rem;
            }
          }
        }
      }

      @include it('md\:gap-1\.5') {
        @include assert {
          @include output {
            @include md\:gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.375rem;
            }
          }
        }
      }

      @include it('md\:gap-x-1\.5') {
        @include assert {
          @include output {
            @include md\:gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.375rem;
            }
          }
        }
      }

      @include it('md\:gap-y-1\.5') {
        @include assert {
          @include output {
            @include md\:gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.375rem;
            }
          }
        }
      }

      @include it('md\:gap-2') {
        @include assert {
          @include output {
            @include md\:gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.5rem;
            }
          }
        }
      }

      @include it('md\:gap-x-2') {
        @include assert {
          @include output {
            @include md\:gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.5rem;
            }
          }
        }
      }

      @include it('md\:gap-y-2') {
        @include assert {
          @include output {
            @include md\:gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.5rem;
            }
          }
        }
      }

      @include it('md\:gap-2\.5') {
        @include assert {
          @include output {
            @include md\:gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.625rem;
            }
          }
        }
      }

      @include it('md\:gap-x-2\.5') {
        @include assert {
          @include output {
            @include md\:gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.625rem;
            }
          }
        }
      }

      @include it('md\:gap-y-2\.5') {
        @include assert {
          @include output {
            @include md\:gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.625rem;
            }
          }
        }
      }

      @include it('md\:gap-3') {
        @include assert {
          @include output {
            @include md\:gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.75rem;
            }
          }
        }
      }

      @include it('md\:gap-x-3') {
        @include assert {
          @include output {
            @include md\:gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.75rem;
            }
          }
        }
      }

      @include it('md\:gap-y-3') {
        @include assert {
          @include output {
            @include md\:gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.75rem;
            }
          }
        }
      }

      @include it('md\:gap-3\.5') {
        @include assert {
          @include output {
            @include md\:gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 0.875rem;
            }
          }
        }
      }

      @include it('md\:gap-x-3\.5') {
        @include assert {
          @include output {
            @include md\:gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 0.875rem;
            }
          }
        }
      }

      @include it('md\:gap-y-3\.5') {
        @include assert {
          @include output {
            @include md\:gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 0.875rem;
            }
          }
        }
      }

      @include it('md\:gap-4') {
        @include assert {
          @include output {
            @include md\:gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 1rem;
            }
          }
        }
      }

      @include it('md\:gap-x-4') {
        @include assert {
          @include output {
            @include md\:gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 1rem;
            }
          }
        }
      }

      @include it('md\:gap-y-4') {
        @include assert {
          @include output {
            @include md\:gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 1rem;
            }
          }
        }
      }

      @include it('md\:gap-5') {
        @include assert {
          @include output {
            @include md\:gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 1.25rem;
            }
          }
        }
      }

      @include it('md\:gap-x-5') {
        @include assert {
          @include output {
            @include md\:gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 1.25rem;
            }
          }
        }
      }

      @include it('md\:gap-y-5') {
        @include assert {
          @include output {
            @include md\:gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 1.25rem;
            }
          }
        }
      }

      @include it('md\:gap-6') {
        @include assert {
          @include output {
            @include md\:gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 1.5rem;
            }
          }
        }
      }

      @include it('md\:gap-x-6') {
        @include assert {
          @include output {
            @include md\:gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 1.5rem;
            }
          }
        }
      }

      @include it('md\:gap-y-6') {
        @include assert {
          @include output {
            @include md\:gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 1.5rem;
            }
          }
        }
      }

      @include it('md\:gap-7') {
        @include assert {
          @include output {
            @include md\:gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 1.75rem;
            }
          }
        }
      }

      @include it('md\:gap-x-7') {
        @include assert {
          @include output {
            @include md\:gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 1.75rem;
            }
          }
        }
      }

      @include it('md\:gap-y-7') {
        @include assert {
          @include output {
            @include md\:gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 1.75rem;
            }
          }
        }
      }

      @include it('md\:gap-8') {
        @include assert {
          @include output {
            @include md\:gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 2rem;
            }
          }
        }
      }

      @include it('md\:gap-x-8') {
        @include assert {
          @include output {
            @include md\:gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 2rem;
            }
          }
        }
      }

      @include it('md\:gap-y-8') {
        @include assert {
          @include output {
            @include md\:gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 2rem;
            }
          }
        }
      }

      @include it('md\:gap-9') {
        @include assert {
          @include output {
            @include md\:gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 2.25rem;
            }
          }
        }
      }

      @include it('md\:gap-x-9') {
        @include assert {
          @include output {
            @include md\:gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 2.25rem;
            }
          }
        }
      }

      @include it('md\:gap-y-9') {
        @include assert {
          @include output {
            @include md\:gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 2.25rem;
            }
          }
        }
      }

      @include it('md\:gap-10') {
        @include assert {
          @include output {
            @include md\:gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 2.5rem;
            }
          }
        }
      }

      @include it('md\:gap-x-10') {
        @include assert {
          @include output {
            @include md\:gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 2.5rem;
            }
          }
        }
      }

      @include it('md\:gap-y-10') {
        @include assert {
          @include output {
            @include md\:gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 2.5rem;
            }
          }
        }
      }

      @include it('md\:gap-11') {
        @include assert {
          @include output {
            @include md\:gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-x-11') {
        @include assert {
          @include output {
            @include md\:gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-y-11') {
        @include assert {
          @include output {
            @include md\:gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-12') {
        @include assert {
          @include output {
            @include md\:gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 3rem;
            }
          }
        }
      }

      @include it('md\:gap-x-12') {
        @include assert {
          @include output {
            @include md\:gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 3rem;
            }
          }
        }
      }

      @include it('md\:gap-y-12') {
        @include assert {
          @include output {
            @include md\:gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 3rem;
            }
          }
        }
      }

      @include it('md\:gap-14') {
        @include assert {
          @include output {
            @include md\:gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 3.5rem;
            }
          }
        }
      }

      @include it('md\:gap-x-14') {
        @include assert {
          @include output {
            @include md\:gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 3.5rem;
            }
          }
        }
      }

      @include it('md\:gap-y-14') {
        @include assert {
          @include output {
            @include md\:gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 3.5rem;
            }
          }
        }
      }

      @include it('md\:gap-16') {
        @include assert {
          @include output {
            @include md\:gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 4rem;
            }
          }
        }
      }

      @include it('md\:gap-x-16') {
        @include assert {
          @include output {
            @include md\:gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 4rem;
            }
          }
        }
      }

      @include it('md\:gap-y-16') {
        @include assert {
          @include output {
            @include md\:gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 4rem;
            }
          }
        }
      }

      @include it('md\:gap-20') {
        @include assert {
          @include output {
            @include md\:gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 5rem;
            }
          }
        }
      }

      @include it('md\:gap-x-20') {
        @include assert {
          @include output {
            @include md\:gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 5rem;
            }
          }
        }
      }

      @include it('md\:gap-y-20') {
        @include assert {
          @include output {
            @include md\:gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 5rem;
            }
          }
        }
      }

      @include it('md\:gap-24') {
        @include assert {
          @include output {
            @include md\:gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 6rem;
            }
          }
        }
      }

      @include it('md\:gap-x-24') {
        @include assert {
          @include output {
            @include md\:gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 6rem;
            }
          }
        }
      }

      @include it('md\:gap-y-24') {
        @include assert {
          @include output {
            @include md\:gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 6rem;
            }
          }
        }
      }

      @include it('md\:gap-28') {
        @include assert {
          @include output {
            @include md\:gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 7rem;
            }
          }
        }
      }

      @include it('md\:gap-x-28') {
        @include assert {
          @include output {
            @include md\:gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 7rem;
            }
          }
        }
      }

      @include it('md\:gap-y-28') {
        @include assert {
          @include output {
            @include md\:gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 7rem;
            }
          }
        }
      }

      @include it('md\:gap-32') {
        @include assert {
          @include output {
            @include md\:gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 8rem;
            }
          }
        }
      }

      @include it('md\:gap-x-32') {
        @include assert {
          @include output {
            @include md\:gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 8rem;
            }
          }
        }
      }

      @include it('md\:gap-y-32') {
        @include assert {
          @include output {
            @include md\:gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 8rem;
            }
          }
        }
      }

      @include it('md\:gap-36') {
        @include assert {
          @include output {
            @include md\:gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 9rem;
            }
          }
        }
      }

      @include it('md\:gap-x-36') {
        @include assert {
          @include output {
            @include md\:gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 9rem;
            }
          }
        }
      }

      @include it('md\:gap-y-36') {
        @include assert {
          @include output {
            @include md\:gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 9rem;
            }
          }
        }
      }

      @include it('md\:gap-40') {
        @include assert {
          @include output {
            @include md\:gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 10rem;
            }
          }
        }
      }

      @include it('md\:gap-x-40') {
        @include assert {
          @include output {
            @include md\:gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 10rem;
            }
          }
        }
      }

      @include it('md\:gap-y-40') {
        @include assert {
          @include output {
            @include md\:gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 10rem;
            }
          }
        }
      }

      @include it('md\:gap-44') {
        @include assert {
          @include output {
            @include md\:gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 11rem;
            }
          }
        }
      }

      @include it('md\:gap-x-44') {
        @include assert {
          @include output {
            @include md\:gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 11rem;
            }
          }
        }
      }

      @include it('md\:gap-y-44') {
        @include assert {
          @include output {
            @include md\:gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 11rem;
            }
          }
        }
      }

      @include it('md\:gap-48') {
        @include assert {
          @include output {
            @include md\:gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 12rem;
            }
          }
        }
      }

      @include it('md\:gap-x-48') {
        @include assert {
          @include output {
            @include md\:gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 12rem;
            }
          }
        }
      }

      @include it('md\:gap-y-48') {
        @include assert {
          @include output {
            @include md\:gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 12rem;
            }
          }
        }
      }

      @include it('md\:gap-52') {
        @include assert {
          @include output {
            @include md\:gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 13rem;
            }
          }
        }
      }

      @include it('md\:gap-x-52') {
        @include assert {
          @include output {
            @include md\:gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 13rem;
            }
          }
        }
      }

      @include it('md\:gap-y-52') {
        @include assert {
          @include output {
            @include md\:gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 13rem;
            }
          }
        }
      }

      @include it('md\:gap-56') {
        @include assert {
          @include output {
            @include md\:gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 14rem;
            }
          }
        }
      }

      @include it('md\:gap-x-56') {
        @include assert {
          @include output {
            @include md\:gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 14rem;
            }
          }
        }
      }

      @include it('md\:gap-y-56') {
        @include assert {
          @include output {
            @include md\:gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 14rem;
            }
          }
        }
      }

      @include it('md\:gap-60') {
        @include assert {
          @include output {
            @include md\:gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 15rem;
            }
          }
        }
      }

      @include it('md\:gap-x-60') {
        @include assert {
          @include output {
            @include md\:gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 15rem;
            }
          }
        }
      }

      @include it('md\:gap-y-60') {
        @include assert {
          @include output {
            @include md\:gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 15rem;
            }
          }
        }
      }

      @include it('md\:gap-64') {
        @include assert {
          @include output {
            @include md\:gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 16rem;
            }
          }
        }
      }

      @include it('md\:gap-x-64') {
        @include assert {
          @include output {
            @include md\:gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 16rem;
            }
          }
        }
      }

      @include it('md\:gap-y-64') {
        @include assert {
          @include output {
            @include md\:gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 16rem;
            }
          }
        }
      }

      @include it('md\:gap-72') {
        @include assert {
          @include output {
            @include md\:gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 18rem;
            }
          }
        }
      }

      @include it('md\:gap-x-72') {
        @include assert {
          @include output {
            @include md\:gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 18rem;
            }
          }
        }
      }

      @include it('md\:gap-y-72') {
        @include assert {
          @include output {
            @include md\:gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 18rem;
            }
          }
        }
      }

      @include it('md\:gap-80') {
        @include assert {
          @include output {
            @include md\:gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 20rem;
            }
          }
        }
      }

      @include it('md\:gap-x-80') {
        @include assert {
          @include output {
            @include md\:gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 20rem;
            }
          }
        }
      }

      @include it('md\:gap-y-80') {
        @include assert {
          @include output {
            @include md\:gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 20rem;
            }
          }
        }
      }

      @include it('md\:gap-96') {
        @include assert {
          @include output {
            @include md\:gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 24rem;
            }
          }
        }
      }

      @include it('md\:gap-x-96') {
        @include assert {
          @include output {
            @include md\:gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 24rem;
            }
          }
        }
      }

      @include it('md\:gap-y-96') {
        @include assert {
          @include output {
            @include md\:gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 24rem;
            }
          }
        }
      }

      @include it('lg\:gap-0') {
        @include assert {
          @include output {
            @include lg\:gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0px;
            }
          }
        }
      }

      @include it('lg\:gap-x-0') {
        @include assert {
          @include output {
            @include lg\:gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0px;
            }
          }
        }
      }

      @include it('lg\:gap-y-0') {
        @include assert {
          @include output {
            @include lg\:gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0px;
            }
          }
        }
      }

      @include it('lg\:gap-px') {
        @include assert {
          @include output {
            @include lg\:gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 1px;
            }
          }
        }
      }

      @include it('lg\:gap-x-px') {
        @include assert {
          @include output {
            @include lg\:gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 1px;
            }
          }
        }
      }

      @include it('lg\:gap-y-px') {
        @include assert {
          @include output {
            @include lg\:gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 1px;
            }
          }
        }
      }

      @include it('lg\:gap-0\.5') {
        @include assert {
          @include output {
            @include lg\:gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-0\.5') {
        @include assert {
          @include output {
            @include lg\:gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-0\.5') {
        @include assert {
          @include output {
            @include lg\:gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:gap-1') {
        @include assert {
          @include output {
            @include lg\:gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-1') {
        @include assert {
          @include output {
            @include lg\:gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-1') {
        @include assert {
          @include output {
            @include lg\:gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-1\.5') {
        @include assert {
          @include output {
            @include lg\:gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-1\.5') {
        @include assert {
          @include output {
            @include lg\:gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-1\.5') {
        @include assert {
          @include output {
            @include lg\:gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:gap-2') {
        @include assert {
          @include output {
            @include lg\:gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-2') {
        @include assert {
          @include output {
            @include lg\:gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-2') {
        @include assert {
          @include output {
            @include lg\:gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-2\.5') {
        @include assert {
          @include output {
            @include lg\:gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-2\.5') {
        @include assert {
          @include output {
            @include lg\:gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-2\.5') {
        @include assert {
          @include output {
            @include lg\:gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:gap-3') {
        @include assert {
          @include output {
            @include lg\:gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-3') {
        @include assert {
          @include output {
            @include lg\:gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-3') {
        @include assert {
          @include output {
            @include lg\:gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-3\.5') {
        @include assert {
          @include output {
            @include lg\:gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-3\.5') {
        @include assert {
          @include output {
            @include lg\:gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-3\.5') {
        @include assert {
          @include output {
            @include lg\:gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:gap-4') {
        @include assert {
          @include output {
            @include lg\:gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 1rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-4') {
        @include assert {
          @include output {
            @include lg\:gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 1rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-4') {
        @include assert {
          @include output {
            @include lg\:gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 1rem;
            }
          }
        }
      }

      @include it('lg\:gap-5') {
        @include assert {
          @include output {
            @include lg\:gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-5') {
        @include assert {
          @include output {
            @include lg\:gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-5') {
        @include assert {
          @include output {
            @include lg\:gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-6') {
        @include assert {
          @include output {
            @include lg\:gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-6') {
        @include assert {
          @include output {
            @include lg\:gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-6') {
        @include assert {
          @include output {
            @include lg\:gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-7') {
        @include assert {
          @include output {
            @include lg\:gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-7') {
        @include assert {
          @include output {
            @include lg\:gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-7') {
        @include assert {
          @include output {
            @include lg\:gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-8') {
        @include assert {
          @include output {
            @include lg\:gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 2rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-8') {
        @include assert {
          @include output {
            @include lg\:gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 2rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-8') {
        @include assert {
          @include output {
            @include lg\:gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 2rem;
            }
          }
        }
      }

      @include it('lg\:gap-9') {
        @include assert {
          @include output {
            @include lg\:gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-9') {
        @include assert {
          @include output {
            @include lg\:gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-9') {
        @include assert {
          @include output {
            @include lg\:gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:gap-10') {
        @include assert {
          @include output {
            @include lg\:gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-10') {
        @include assert {
          @include output {
            @include lg\:gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-10') {
        @include assert {
          @include output {
            @include lg\:gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-11') {
        @include assert {
          @include output {
            @include lg\:gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-11') {
        @include assert {
          @include output {
            @include lg\:gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-11') {
        @include assert {
          @include output {
            @include lg\:gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-12') {
        @include assert {
          @include output {
            @include lg\:gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 3rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-12') {
        @include assert {
          @include output {
            @include lg\:gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 3rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-12') {
        @include assert {
          @include output {
            @include lg\:gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 3rem;
            }
          }
        }
      }

      @include it('lg\:gap-14') {
        @include assert {
          @include output {
            @include lg\:gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-14') {
        @include assert {
          @include output {
            @include lg\:gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-14') {
        @include assert {
          @include output {
            @include lg\:gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:gap-16') {
        @include assert {
          @include output {
            @include lg\:gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 4rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-16') {
        @include assert {
          @include output {
            @include lg\:gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 4rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-16') {
        @include assert {
          @include output {
            @include lg\:gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 4rem;
            }
          }
        }
      }

      @include it('lg\:gap-20') {
        @include assert {
          @include output {
            @include lg\:gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 5rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-20') {
        @include assert {
          @include output {
            @include lg\:gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 5rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-20') {
        @include assert {
          @include output {
            @include lg\:gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 5rem;
            }
          }
        }
      }

      @include it('lg\:gap-24') {
        @include assert {
          @include output {
            @include lg\:gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 6rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-24') {
        @include assert {
          @include output {
            @include lg\:gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 6rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-24') {
        @include assert {
          @include output {
            @include lg\:gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 6rem;
            }
          }
        }
      }

      @include it('lg\:gap-28') {
        @include assert {
          @include output {
            @include lg\:gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 7rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-28') {
        @include assert {
          @include output {
            @include lg\:gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 7rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-28') {
        @include assert {
          @include output {
            @include lg\:gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 7rem;
            }
          }
        }
      }

      @include it('lg\:gap-32') {
        @include assert {
          @include output {
            @include lg\:gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 8rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-32') {
        @include assert {
          @include output {
            @include lg\:gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 8rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-32') {
        @include assert {
          @include output {
            @include lg\:gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 8rem;
            }
          }
        }
      }

      @include it('lg\:gap-36') {
        @include assert {
          @include output {
            @include lg\:gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 9rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-36') {
        @include assert {
          @include output {
            @include lg\:gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 9rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-36') {
        @include assert {
          @include output {
            @include lg\:gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 9rem;
            }
          }
        }
      }

      @include it('lg\:gap-40') {
        @include assert {
          @include output {
            @include lg\:gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 10rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-40') {
        @include assert {
          @include output {
            @include lg\:gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 10rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-40') {
        @include assert {
          @include output {
            @include lg\:gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 10rem;
            }
          }
        }
      }

      @include it('lg\:gap-44') {
        @include assert {
          @include output {
            @include lg\:gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 11rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-44') {
        @include assert {
          @include output {
            @include lg\:gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 11rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-44') {
        @include assert {
          @include output {
            @include lg\:gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 11rem;
            }
          }
        }
      }

      @include it('lg\:gap-48') {
        @include assert {
          @include output {
            @include lg\:gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 12rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-48') {
        @include assert {
          @include output {
            @include lg\:gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 12rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-48') {
        @include assert {
          @include output {
            @include lg\:gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 12rem;
            }
          }
        }
      }

      @include it('lg\:gap-52') {
        @include assert {
          @include output {
            @include lg\:gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 13rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-52') {
        @include assert {
          @include output {
            @include lg\:gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 13rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-52') {
        @include assert {
          @include output {
            @include lg\:gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 13rem;
            }
          }
        }
      }

      @include it('lg\:gap-56') {
        @include assert {
          @include output {
            @include lg\:gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 14rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-56') {
        @include assert {
          @include output {
            @include lg\:gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 14rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-56') {
        @include assert {
          @include output {
            @include lg\:gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 14rem;
            }
          }
        }
      }

      @include it('lg\:gap-60') {
        @include assert {
          @include output {
            @include lg\:gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 15rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-60') {
        @include assert {
          @include output {
            @include lg\:gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 15rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-60') {
        @include assert {
          @include output {
            @include lg\:gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 15rem;
            }
          }
        }
      }

      @include it('lg\:gap-64') {
        @include assert {
          @include output {
            @include lg\:gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 16rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-64') {
        @include assert {
          @include output {
            @include lg\:gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 16rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-64') {
        @include assert {
          @include output {
            @include lg\:gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 16rem;
            }
          }
        }
      }

      @include it('lg\:gap-72') {
        @include assert {
          @include output {
            @include lg\:gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 18rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-72') {
        @include assert {
          @include output {
            @include lg\:gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 18rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-72') {
        @include assert {
          @include output {
            @include lg\:gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 18rem;
            }
          }
        }
      }

      @include it('lg\:gap-80') {
        @include assert {
          @include output {
            @include lg\:gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 20rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-80') {
        @include assert {
          @include output {
            @include lg\:gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 20rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-80') {
        @include assert {
          @include output {
            @include lg\:gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 20rem;
            }
          }
        }
      }

      @include it('lg\:gap-96') {
        @include assert {
          @include output {
            @include lg\:gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 24rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-96') {
        @include assert {
          @include output {
            @include lg\:gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 24rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-96') {
        @include assert {
          @include output {
            @include lg\:gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 24rem;
            }
          }
        }
      }

      @include it('xl\:gap-0') {
        @include assert {
          @include output {
            @include xl\:gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0px;
            }
          }
        }
      }

      @include it('xl\:gap-x-0') {
        @include assert {
          @include output {
            @include xl\:gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0px;
            }
          }
        }
      }

      @include it('xl\:gap-y-0') {
        @include assert {
          @include output {
            @include xl\:gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0px;
            }
          }
        }
      }

      @include it('xl\:gap-px') {
        @include assert {
          @include output {
            @include xl\:gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 1px;
            }
          }
        }
      }

      @include it('xl\:gap-x-px') {
        @include assert {
          @include output {
            @include xl\:gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 1px;
            }
          }
        }
      }

      @include it('xl\:gap-y-px') {
        @include assert {
          @include output {
            @include xl\:gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 1px;
            }
          }
        }
      }

      @include it('xl\:gap-0\.5') {
        @include assert {
          @include output {
            @include xl\:gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-0\.5') {
        @include assert {
          @include output {
            @include xl\:gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-0\.5') {
        @include assert {
          @include output {
            @include xl\:gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:gap-1') {
        @include assert {
          @include output {
            @include xl\:gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-1') {
        @include assert {
          @include output {
            @include xl\:gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-1') {
        @include assert {
          @include output {
            @include xl\:gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-1\.5') {
        @include assert {
          @include output {
            @include xl\:gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-1\.5') {
        @include assert {
          @include output {
            @include xl\:gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-1\.5') {
        @include assert {
          @include output {
            @include xl\:gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:gap-2') {
        @include assert {
          @include output {
            @include xl\:gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-2') {
        @include assert {
          @include output {
            @include xl\:gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-2') {
        @include assert {
          @include output {
            @include xl\:gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-2\.5') {
        @include assert {
          @include output {
            @include xl\:gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-2\.5') {
        @include assert {
          @include output {
            @include xl\:gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-2\.5') {
        @include assert {
          @include output {
            @include xl\:gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:gap-3') {
        @include assert {
          @include output {
            @include xl\:gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-3') {
        @include assert {
          @include output {
            @include xl\:gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-3') {
        @include assert {
          @include output {
            @include xl\:gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-3\.5') {
        @include assert {
          @include output {
            @include xl\:gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-3\.5') {
        @include assert {
          @include output {
            @include xl\:gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-3\.5') {
        @include assert {
          @include output {
            @include xl\:gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:gap-4') {
        @include assert {
          @include output {
            @include xl\:gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 1rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-4') {
        @include assert {
          @include output {
            @include xl\:gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 1rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-4') {
        @include assert {
          @include output {
            @include xl\:gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 1rem;
            }
          }
        }
      }

      @include it('xl\:gap-5') {
        @include assert {
          @include output {
            @include xl\:gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-5') {
        @include assert {
          @include output {
            @include xl\:gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-5') {
        @include assert {
          @include output {
            @include xl\:gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-6') {
        @include assert {
          @include output {
            @include xl\:gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-6') {
        @include assert {
          @include output {
            @include xl\:gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-6') {
        @include assert {
          @include output {
            @include xl\:gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-7') {
        @include assert {
          @include output {
            @include xl\:gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-7') {
        @include assert {
          @include output {
            @include xl\:gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-7') {
        @include assert {
          @include output {
            @include xl\:gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-8') {
        @include assert {
          @include output {
            @include xl\:gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 2rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-8') {
        @include assert {
          @include output {
            @include xl\:gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 2rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-8') {
        @include assert {
          @include output {
            @include xl\:gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 2rem;
            }
          }
        }
      }

      @include it('xl\:gap-9') {
        @include assert {
          @include output {
            @include xl\:gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-9') {
        @include assert {
          @include output {
            @include xl\:gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-9') {
        @include assert {
          @include output {
            @include xl\:gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:gap-10') {
        @include assert {
          @include output {
            @include xl\:gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-10') {
        @include assert {
          @include output {
            @include xl\:gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-10') {
        @include assert {
          @include output {
            @include xl\:gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-11') {
        @include assert {
          @include output {
            @include xl\:gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-11') {
        @include assert {
          @include output {
            @include xl\:gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-11') {
        @include assert {
          @include output {
            @include xl\:gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-12') {
        @include assert {
          @include output {
            @include xl\:gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 3rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-12') {
        @include assert {
          @include output {
            @include xl\:gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 3rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-12') {
        @include assert {
          @include output {
            @include xl\:gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 3rem;
            }
          }
        }
      }

      @include it('xl\:gap-14') {
        @include assert {
          @include output {
            @include xl\:gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-14') {
        @include assert {
          @include output {
            @include xl\:gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-14') {
        @include assert {
          @include output {
            @include xl\:gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:gap-16') {
        @include assert {
          @include output {
            @include xl\:gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 4rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-16') {
        @include assert {
          @include output {
            @include xl\:gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 4rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-16') {
        @include assert {
          @include output {
            @include xl\:gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 4rem;
            }
          }
        }
      }

      @include it('xl\:gap-20') {
        @include assert {
          @include output {
            @include xl\:gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 5rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-20') {
        @include assert {
          @include output {
            @include xl\:gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 5rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-20') {
        @include assert {
          @include output {
            @include xl\:gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 5rem;
            }
          }
        }
      }

      @include it('xl\:gap-24') {
        @include assert {
          @include output {
            @include xl\:gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 6rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-24') {
        @include assert {
          @include output {
            @include xl\:gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 6rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-24') {
        @include assert {
          @include output {
            @include xl\:gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 6rem;
            }
          }
        }
      }

      @include it('xl\:gap-28') {
        @include assert {
          @include output {
            @include xl\:gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 7rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-28') {
        @include assert {
          @include output {
            @include xl\:gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 7rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-28') {
        @include assert {
          @include output {
            @include xl\:gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 7rem;
            }
          }
        }
      }

      @include it('xl\:gap-32') {
        @include assert {
          @include output {
            @include xl\:gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 8rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-32') {
        @include assert {
          @include output {
            @include xl\:gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 8rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-32') {
        @include assert {
          @include output {
            @include xl\:gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 8rem;
            }
          }
        }
      }

      @include it('xl\:gap-36') {
        @include assert {
          @include output {
            @include xl\:gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 9rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-36') {
        @include assert {
          @include output {
            @include xl\:gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 9rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-36') {
        @include assert {
          @include output {
            @include xl\:gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 9rem;
            }
          }
        }
      }

      @include it('xl\:gap-40') {
        @include assert {
          @include output {
            @include xl\:gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 10rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-40') {
        @include assert {
          @include output {
            @include xl\:gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 10rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-40') {
        @include assert {
          @include output {
            @include xl\:gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 10rem;
            }
          }
        }
      }

      @include it('xl\:gap-44') {
        @include assert {
          @include output {
            @include xl\:gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 11rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-44') {
        @include assert {
          @include output {
            @include xl\:gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 11rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-44') {
        @include assert {
          @include output {
            @include xl\:gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 11rem;
            }
          }
        }
      }

      @include it('xl\:gap-48') {
        @include assert {
          @include output {
            @include xl\:gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 12rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-48') {
        @include assert {
          @include output {
            @include xl\:gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 12rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-48') {
        @include assert {
          @include output {
            @include xl\:gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 12rem;
            }
          }
        }
      }

      @include it('xl\:gap-52') {
        @include assert {
          @include output {
            @include xl\:gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 13rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-52') {
        @include assert {
          @include output {
            @include xl\:gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 13rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-52') {
        @include assert {
          @include output {
            @include xl\:gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 13rem;
            }
          }
        }
      }

      @include it('xl\:gap-56') {
        @include assert {
          @include output {
            @include xl\:gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 14rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-56') {
        @include assert {
          @include output {
            @include xl\:gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 14rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-56') {
        @include assert {
          @include output {
            @include xl\:gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 14rem;
            }
          }
        }
      }

      @include it('xl\:gap-60') {
        @include assert {
          @include output {
            @include xl\:gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 15rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-60') {
        @include assert {
          @include output {
            @include xl\:gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 15rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-60') {
        @include assert {
          @include output {
            @include xl\:gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 15rem;
            }
          }
        }
      }

      @include it('xl\:gap-64') {
        @include assert {
          @include output {
            @include xl\:gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 16rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-64') {
        @include assert {
          @include output {
            @include xl\:gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 16rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-64') {
        @include assert {
          @include output {
            @include xl\:gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 16rem;
            }
          }
        }
      }

      @include it('xl\:gap-72') {
        @include assert {
          @include output {
            @include xl\:gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 18rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-72') {
        @include assert {
          @include output {
            @include xl\:gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 18rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-72') {
        @include assert {
          @include output {
            @include xl\:gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 18rem;
            }
          }
        }
      }

      @include it('xl\:gap-80') {
        @include assert {
          @include output {
            @include xl\:gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 20rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-80') {
        @include assert {
          @include output {
            @include xl\:gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 20rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-80') {
        @include assert {
          @include output {
            @include xl\:gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 20rem;
            }
          }
        }
      }

      @include it('xl\:gap-96') {
        @include assert {
          @include output {
            @include xl\:gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 24rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-96') {
        @include assert {
          @include output {
            @include xl\:gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 24rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-96') {
        @include assert {
          @include output {
            @include xl\:gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 24rem;
            }
          }
        }
      }

      @include it('2xl\:gap-0') {
        @include assert {
          @include output {
            @include \2xl\:gap-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0px;
            }
          }
        }
      }

      @include it('2xl\:gap-x-0') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0px;
            }
          }
        }
      }

      @include it('2xl\:gap-y-0') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-0;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0px;
            }
          }
        }
      }

      @include it('2xl\:gap-px') {
        @include assert {
          @include output {
            @include \2xl\:gap-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 1px;
            }
          }
        }
      }

      @include it('2xl\:gap-x-px') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 1px;
            }
          }
        }
      }

      @include it('2xl\:gap-y-px') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-px;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 1px;
            }
          }
        }
      }

      @include it('2xl\:gap-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-0\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:gap-1') {
        @include assert {
          @include output {
            @include \2xl\:gap-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-1') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-1') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-1;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-1\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:gap-2') {
        @include assert {
          @include output {
            @include \2xl\:gap-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-2') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-2') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-2;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-2\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:gap-3') {
        @include assert {
          @include output {
            @include \2xl\:gap-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-3') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-3') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-3;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-3\.5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:gap-4') {
        @include assert {
          @include output {
            @include \2xl\:gap-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 1rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-4') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 1rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-4') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-4;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 1rem;
            }
          }
        }
      }

      @include it('2xl\:gap-5') {
        @include assert {
          @include output {
            @include \2xl\:gap-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-5') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-5') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-5;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-6') {
        @include assert {
          @include output {
            @include \2xl\:gap-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-6') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-6') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-6;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-7') {
        @include assert {
          @include output {
            @include \2xl\:gap-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-7') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-7') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-7;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-8') {
        @include assert {
          @include output {
            @include \2xl\:gap-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 2rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-8') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 2rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-8') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-8;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 2rem;
            }
          }
        }
      }

      @include it('2xl\:gap-9') {
        @include assert {
          @include output {
            @include \2xl\:gap-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-9') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-9') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-9;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:gap-10') {
        @include assert {
          @include output {
            @include \2xl\:gap-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-10') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-10') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-10;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-11') {
        @include assert {
          @include output {
            @include \2xl\:gap-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-11') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-11') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-11;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-12') {
        @include assert {
          @include output {
            @include \2xl\:gap-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 3rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-12') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 3rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-12') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-12;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 3rem;
            }
          }
        }
      }

      @include it('2xl\:gap-14') {
        @include assert {
          @include output {
            @include \2xl\:gap-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-14') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-14') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-14;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-16') {
        @include assert {
          @include output {
            @include \2xl\:gap-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 4rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-16') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 4rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-16') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-16;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 4rem;
            }
          }
        }
      }

      @include it('2xl\:gap-20') {
        @include assert {
          @include output {
            @include \2xl\:gap-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-20') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-20') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-20;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 5rem;
            }
          }
        }
      }

      @include it('2xl\:gap-24') {
        @include assert {
          @include output {
            @include \2xl\:gap-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 6rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-24') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 6rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-24') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-24;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 6rem;
            }
          }
        }
      }

      @include it('2xl\:gap-28') {
        @include assert {
          @include output {
            @include \2xl\:gap-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 7rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-28') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 7rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-28') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-28;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 7rem;
            }
          }
        }
      }

      @include it('2xl\:gap-32') {
        @include assert {
          @include output {
            @include \2xl\:gap-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 8rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-32') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 8rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-32') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-32;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 8rem;
            }
          }
        }
      }

      @include it('2xl\:gap-36') {
        @include assert {
          @include output {
            @include \2xl\:gap-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 9rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-36') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 9rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-36') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-36;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 9rem;
            }
          }
        }
      }

      @include it('2xl\:gap-40') {
        @include assert {
          @include output {
            @include \2xl\:gap-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 10rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-40') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 10rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-40') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-40;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 10rem;
            }
          }
        }
      }

      @include it('2xl\:gap-44') {
        @include assert {
          @include output {
            @include \2xl\:gap-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 11rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-44') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 11rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-44') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-44;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 11rem;
            }
          }
        }
      }

      @include it('2xl\:gap-48') {
        @include assert {
          @include output {
            @include \2xl\:gap-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 12rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-48') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 12rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-48') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-48;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 12rem;
            }
          }
        }
      }

      @include it('2xl\:gap-52') {
        @include assert {
          @include output {
            @include \2xl\:gap-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 13rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-52') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 13rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-52') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-52;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 13rem;
            }
          }
        }
      }

      @include it('2xl\:gap-56') {
        @include assert {
          @include output {
            @include \2xl\:gap-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 14rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-56') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 14rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-56') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-56;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 14rem;
            }
          }
        }
      }

      @include it('2xl\:gap-60') {
        @include assert {
          @include output {
            @include \2xl\:gap-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 15rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-60') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 15rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-60') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-60;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 15rem;
            }
          }
        }
      }

      @include it('2xl\:gap-64') {
        @include assert {
          @include output {
            @include \2xl\:gap-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 16rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-64') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 16rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-64') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-64;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 16rem;
            }
          }
        }
      }

      @include it('2xl\:gap-72') {
        @include assert {
          @include output {
            @include \2xl\:gap-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 18rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-72') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 18rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-72') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-72;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 18rem;
            }
          }
        }
      }

      @include it('2xl\:gap-80') {
        @include assert {
          @include output {
            @include \2xl\:gap-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 20rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-80') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 20rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-80') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-80;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 20rem;
            }
          }
        }
      }

      @include it('2xl\:gap-96') {
        @include assert {
          @include output {
            @include \2xl\:gap-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 24rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-96') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 24rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-96') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-96;
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 24rem;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('gap-(2.75rem)') {
        @include assert {
          @include output {
            @include gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            gap: 2.75rem;
          }
        }
      }

      @include it('gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            column-gap: 2.75rem;
          }
        }
      }

      @include it('gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            row-gap: 2.75rem;
          }
        }
      }

      @include it('sm\:gap-(2.75rem)') {
        @include assert {
          @include output {
            @include sm\:gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include sm\:gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include sm\:gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_sm) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-(2.75rem)') {
        @include assert {
          @include output {
            @include md\:gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include md\:gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('md\:gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include md\:gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_md) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-(2.75rem)') {
        @include assert {
          @include output {
            @include lg\:gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include lg\:gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include lg\:gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_lg) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-(2.75rem)') {
        @include assert {
          @include output {
            @include xl\:gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include xl\:gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include xl\:gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_xl) {
              row-gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-(2.75rem)') {
        @include assert {
          @include output {
            @include \2xl\:gap-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-x-(2.75rem)') {
        @include assert {
          @include output {
            @include \2xl\:gap-x-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              column-gap: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:gap-y-(2.75rem)') {
        @include assert {
          @include output {
            @include \2xl\:gap-y-(2.75rem);
            @include utils_reset-scss-tw-variables;
          }

          @include expect {
            @media (min-width: $_2xl) {
              row-gap: 2.75rem;
            }
          }
        }
      }
    }
  }
}
