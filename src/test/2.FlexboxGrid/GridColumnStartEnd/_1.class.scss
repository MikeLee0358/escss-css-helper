@use '../../mode0' as *;
@use 'true' as *;

@include describe('2.Flexbox & Grid') {
  @include describe('Grid Column Start / End') {
    @include describe('Basic') {
      @include it('col-auto') {
        @include assert {
          @include output {
            @include col-auto;
            @include reset;
          }

          @include expect {
            grid-column: auto;
          }
        }
      }

      @include it('col-span-1') {
        @include assert {
          @include output {
            @include col-span-1;
            @include reset;
          }

          @include expect {
            grid-column: #{span 1 / span 1};
          }
        }
      }

      @include it('col-span-2') {
        @include assert {
          @include output {
            @include col-span-2;
            @include reset;
          }

          @include expect {
            grid-column: #{span 2 / span 2};
          }
        }
      }

      @include it('col-span-3') {
        @include assert {
          @include output {
            @include col-span-3;
            @include reset;
          }

          @include expect {
            grid-column: #{span 3 / span 3};
          }
        }
      }

      @include it('col-span-4') {
        @include assert {
          @include output {
            @include col-span-4;
            @include reset;
          }

          @include expect {
            grid-column: #{span 4 / span 4};
          }
        }
      }

      @include it('col-span-5') {
        @include assert {
          @include output {
            @include col-span-5;
            @include reset;
          }

          @include expect {
            grid-column: #{span 5 / span 5};
          }
        }
      }

      @include it('col-span-6') {
        @include assert {
          @include output {
            @include col-span-6;
            @include reset;
          }

          @include expect {
            grid-column: #{span 6 / span 6};
          }
        }
      }

      @include it('col-span-7') {
        @include assert {
          @include output {
            @include col-span-7;
            @include reset;
          }

          @include expect {
            grid-column: #{span 7 / span 7};
          }
        }
      }

      @include it('col-span-8') {
        @include assert {
          @include output {
            @include col-span-8;
            @include reset;
          }

          @include expect {
            grid-column: #{span 8 / span 8};
          }
        }
      }

      @include it('col-span-9') {
        @include assert {
          @include output {
            @include col-span-9;
            @include reset;
          }

          @include expect {
            grid-column: #{span 9 / span 9};
          }
        }
      }

      @include it('col-span-10') {
        @include assert {
          @include output {
            @include col-span-10;
            @include reset;
          }

          @include expect {
            grid-column: #{span 10 / span 10};
          }
        }
      }

      @include it('col-span-11') {
        @include assert {
          @include output {
            @include col-span-11;
            @include reset;
          }

          @include expect {
            grid-column: #{span 11 / span 11};
          }
        }
      }

      @include it('col-span-12') {
        @include assert {
          @include output {
            @include col-span-12;
            @include reset;
          }

          @include expect {
            grid-column: #{span 12 / span 12};
          }
        }
      }

      @include it('col-span-full') {
        @include assert {
          @include output {
            @include col-span-full;
            @include reset;
          }

          @include expect {
            grid-column: #{1 / -1};
          }
        }
      }

      @include it('col-start-1') {
        @include assert {
          @include output {
            @include col-start-1;
            @include reset;
          }

          @include expect {
            grid-column-start: #{1};
          }
        }
      }

      @include it('col-start-2') {
        @include assert {
          @include output {
            @include col-start-2;
            @include reset;
          }

          @include expect {
            grid-column-start: #{2};
          }
        }
      }

      @include it('col-start-3') {
        @include assert {
          @include output {
            @include col-start-3;
            @include reset;
          }

          @include expect {
            grid-column-start: #{3};
          }
        }
      }

      @include it('col-start-4') {
        @include assert {
          @include output {
            @include col-start-4;
            @include reset;
          }

          @include expect {
            grid-column-start: #{4};
          }
        }
      }

      @include it('col-start-5') {
        @include assert {
          @include output {
            @include col-start-5;
            @include reset;
          }

          @include expect {
            grid-column-start: #{5};
          }
        }
      }

      @include it('col-start-6') {
        @include assert {
          @include output {
            @include col-start-6;
            @include reset;
          }

          @include expect {
            grid-column-start: #{6};
          }
        }
      }

      @include it('col-start-7') {
        @include assert {
          @include output {
            @include col-start-7;
            @include reset;
          }

          @include expect {
            grid-column-start: #{7};
          }
        }
      }

      @include it('col-start-8') {
        @include assert {
          @include output {
            @include col-start-8;
            @include reset;
          }

          @include expect {
            grid-column-start: #{8};
          }
        }
      }

      @include it('col-start-9') {
        @include assert {
          @include output {
            @include col-start-9;
            @include reset;
          }

          @include expect {
            grid-column-start: #{9};
          }
        }
      }

      @include it('col-start-10') {
        @include assert {
          @include output {
            @include col-start-10;
            @include reset;
          }

          @include expect {
            grid-column-start: #{10};
          }
        }
      }

      @include it('col-start-11') {
        @include assert {
          @include output {
            @include col-start-11;
            @include reset;
          }

          @include expect {
            grid-column-start: #{11};
          }
        }
      }

      @include it('col-start-12') {
        @include assert {
          @include output {
            @include col-start-12;
            @include reset;
          }

          @include expect {
            grid-column-start: #{12};
          }
        }
      }

      @include it('col-start-13') {
        @include assert {
          @include output {
            @include col-start-13;
            @include reset;
          }

          @include expect {
            grid-column-start: #{13};
          }
        }
      }

      @include it('col-start-auto') {
        @include assert {
          @include output {
            @include col-start-auto;
            @include reset;
          }

          @include expect {
            grid-column-start: auto;
          }
        }
      }

      @include it('col-end-1') {
        @include assert {
          @include output {
            @include col-end-1;
            @include reset;
          }

          @include expect {
            grid-column-end: #{1};
          }
        }
      }

      @include it('col-end-2') {
        @include assert {
          @include output {
            @include col-end-2;
            @include reset;
          }

          @include expect {
            grid-column-end: #{2};
          }
        }
      }

      @include it('col-end-3') {
        @include assert {
          @include output {
            @include col-end-3;
            @include reset;
          }

          @include expect {
            grid-column-end: #{3};
          }
        }
      }

      @include it('col-end-4') {
        @include assert {
          @include output {
            @include col-end-4;
            @include reset;
          }

          @include expect {
            grid-column-end: #{4};
          }
        }
      }

      @include it('col-end-5') {
        @include assert {
          @include output {
            @include col-end-5;
            @include reset;
          }

          @include expect {
            grid-column-end: #{5};
          }
        }
      }

      @include it('col-end-6') {
        @include assert {
          @include output {
            @include col-end-6;
            @include reset;
          }

          @include expect {
            grid-column-end: #{6};
          }
        }
      }

      @include it('col-end-7') {
        @include assert {
          @include output {
            @include col-end-7;
            @include reset;
          }

          @include expect {
            grid-column-end: #{7};
          }
        }
      }

      @include it('col-end-8') {
        @include assert {
          @include output {
            @include col-end-8;
            @include reset;
          }

          @include expect {
            grid-column-end: #{8};
          }
        }
      }

      @include it('col-end-9') {
        @include assert {
          @include output {
            @include col-end-9;
            @include reset;
          }

          @include expect {
            grid-column-end: #{9};
          }
        }
      }

      @include it('col-end-10') {
        @include assert {
          @include output {
            @include col-end-10;
            @include reset;
          }

          @include expect {
            grid-column-end: #{10};
          }
        }
      }

      @include it('col-end-11') {
        @include assert {
          @include output {
            @include col-end-11;
            @include reset;
          }

          @include expect {
            grid-column-end: #{11};
          }
        }
      }

      @include it('col-end-12') {
        @include assert {
          @include output {
            @include col-end-12;
            @include reset;
          }

          @include expect {
            grid-column-end: #{12};
          }
        }
      }

      @include it('col-end-13') {
        @include assert {
          @include output {
            @include col-end-13;
            @include reset;
          }

          @include expect {
            grid-column-end: #{13};
          }
        }
      }

      @include it('col-end-auto') {
        @include assert {
          @include output {
            @include col-end-auto;
            @include reset;
          }

          @include expect {
            grid-column-end: auto;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:col-auto') {
        @include assert {
          @include output {
            @include sm\:col-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: auto;
            }
          }
        }
      }

      @include it('sm\:col-span-1') {
        @include assert {
          @include output {
            @include sm\:col-span-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 1 / span 1};
            }
          }
        }
      }

      @include it('sm\:col-span-2') {
        @include assert {
          @include output {
            @include sm\:col-span-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 2 / span 2};
            }
          }
        }
      }

      @include it('sm\:col-span-3') {
        @include assert {
          @include output {
            @include sm\:col-span-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 3 / span 3};
            }
          }
        }
      }

      @include it('sm\:col-span-4') {
        @include assert {
          @include output {
            @include sm\:col-span-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 4 / span 4};
            }
          }
        }
      }

      @include it('sm\:col-span-5') {
        @include assert {
          @include output {
            @include sm\:col-span-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 5 / span 5};
            }
          }
        }
      }

      @include it('sm\:col-span-6') {
        @include assert {
          @include output {
            @include sm\:col-span-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 6 / span 6};
            }
          }
        }
      }

      @include it('sm\:col-span-7') {
        @include assert {
          @include output {
            @include sm\:col-span-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 7 / span 7};
            }
          }
        }
      }

      @include it('sm\:col-span-8') {
        @include assert {
          @include output {
            @include sm\:col-span-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 8 / span 8};
            }
          }
        }
      }

      @include it('sm\:col-span-9') {
        @include assert {
          @include output {
            @include sm\:col-span-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 9 / span 9};
            }
          }
        }
      }

      @include it('sm\:col-span-10') {
        @include assert {
          @include output {
            @include sm\:col-span-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 10 / span 10};
            }
          }
        }
      }

      @include it('sm\:col-span-11') {
        @include assert {
          @include output {
            @include sm\:col-span-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 11 / span 11};
            }
          }
        }
      }

      @include it('sm\:col-span-12') {
        @include assert {
          @include output {
            @include sm\:col-span-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{span 12 / span 12};
            }
          }
        }
      }

      @include it('sm\:col-span-full') {
        @include assert {
          @include output {
            @include sm\:col-span-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{1 / -1};
            }
          }
        }
      }

      @include it('sm\:col-start-1') {
        @include assert {
          @include output {
            @include sm\:col-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{1};
            }
          }
        }
      }

      @include it('sm\:col-start-2') {
        @include assert {
          @include output {
            @include sm\:col-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{2};
            }
          }
        }
      }

      @include it('sm\:col-start-3') {
        @include assert {
          @include output {
            @include sm\:col-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{3};
            }
          }
        }
      }

      @include it('sm\:col-start-4') {
        @include assert {
          @include output {
            @include sm\:col-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{4};
            }
          }
        }
      }

      @include it('sm\:col-start-5') {
        @include assert {
          @include output {
            @include sm\:col-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{5};
            }
          }
        }
      }

      @include it('sm\:col-start-6') {
        @include assert {
          @include output {
            @include sm\:col-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{6};
            }
          }
        }
      }

      @include it('sm\:col-start-7') {
        @include assert {
          @include output {
            @include sm\:col-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{7};
            }
          }
        }
      }

      @include it('sm\:col-start-8') {
        @include assert {
          @include output {
            @include sm\:col-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{8};
            }
          }
        }
      }

      @include it('sm\:col-start-9') {
        @include assert {
          @include output {
            @include sm\:col-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{9};
            }
          }
        }
      }

      @include it('sm\:col-start-10') {
        @include assert {
          @include output {
            @include sm\:col-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{10};
            }
          }
        }
      }

      @include it('sm\:col-start-11') {
        @include assert {
          @include output {
            @include sm\:col-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{11};
            }
          }
        }
      }

      @include it('sm\:col-start-12') {
        @include assert {
          @include output {
            @include sm\:col-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{12};
            }
          }
        }
      }

      @include it('sm\:col-start-13') {
        @include assert {
          @include output {
            @include sm\:col-start-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{13};
            }
          }
        }
      }

      @include it('sm\:col-start-auto') {
        @include assert {
          @include output {
            @include sm\:col-start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: auto;
            }
          }
        }
      }

      @include it('sm\:col-end-1') {
        @include assert {
          @include output {
            @include sm\:col-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{1};
            }
          }
        }
      }

      @include it('sm\:col-end-2') {
        @include assert {
          @include output {
            @include sm\:col-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{2};
            }
          }
        }
      }

      @include it('sm\:col-end-3') {
        @include assert {
          @include output {
            @include sm\:col-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{3};
            }
          }
        }
      }

      @include it('sm\:col-end-4') {
        @include assert {
          @include output {
            @include sm\:col-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{4};
            }
          }
        }
      }

      @include it('sm\:col-end-5') {
        @include assert {
          @include output {
            @include sm\:col-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{5};
            }
          }
        }
      }

      @include it('sm\:col-end-6') {
        @include assert {
          @include output {
            @include sm\:col-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{6};
            }
          }
        }
      }

      @include it('sm\:col-end-7') {
        @include assert {
          @include output {
            @include sm\:col-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{7};
            }
          }
        }
      }

      @include it('sm\:col-end-8') {
        @include assert {
          @include output {
            @include sm\:col-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{8};
            }
          }
        }
      }

      @include it('sm\:col-end-9') {
        @include assert {
          @include output {
            @include sm\:col-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{9};
            }
          }
        }
      }

      @include it('sm\:col-end-10') {
        @include assert {
          @include output {
            @include sm\:col-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{10};
            }
          }
        }
      }

      @include it('sm\:col-end-11') {
        @include assert {
          @include output {
            @include sm\:col-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{11};
            }
          }
        }
      }

      @include it('sm\:col-end-12') {
        @include assert {
          @include output {
            @include sm\:col-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{12};
            }
          }
        }
      }

      @include it('sm\:col-end-13') {
        @include assert {
          @include output {
            @include sm\:col-end-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{13};
            }
          }
        }
      }

      @include it('sm\:col-end-auto') {
        @include assert {
          @include output {
            @include sm\:col-end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: auto;
            }
          }
        }
      }
      @include it('md\:col-auto') {
        @include assert {
          @include output {
            @include md\:col-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: auto;
            }
          }
        }
      }

      @include it('md\:col-span-1') {
        @include assert {
          @include output {
            @include md\:col-span-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 1 / span 1};
            }
          }
        }
      }

      @include it('md\:col-span-2') {
        @include assert {
          @include output {
            @include md\:col-span-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 2 / span 2};
            }
          }
        }
      }

      @include it('md\:col-span-3') {
        @include assert {
          @include output {
            @include md\:col-span-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 3 / span 3};
            }
          }
        }
      }

      @include it('md\:col-span-4') {
        @include assert {
          @include output {
            @include md\:col-span-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 4 / span 4};
            }
          }
        }
      }

      @include it('md\:col-span-5') {
        @include assert {
          @include output {
            @include md\:col-span-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 5 / span 5};
            }
          }
        }
      }

      @include it('md\:col-span-6') {
        @include assert {
          @include output {
            @include md\:col-span-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 6 / span 6};
            }
          }
        }
      }

      @include it('md\:col-span-7') {
        @include assert {
          @include output {
            @include md\:col-span-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 7 / span 7};
            }
          }
        }
      }

      @include it('md\:col-span-8') {
        @include assert {
          @include output {
            @include md\:col-span-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 8 / span 8};
            }
          }
        }
      }

      @include it('md\:col-span-9') {
        @include assert {
          @include output {
            @include md\:col-span-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 9 / span 9};
            }
          }
        }
      }

      @include it('md\:col-span-10') {
        @include assert {
          @include output {
            @include md\:col-span-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 10 / span 10};
            }
          }
        }
      }

      @include it('md\:col-span-11') {
        @include assert {
          @include output {
            @include md\:col-span-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 11 / span 11};
            }
          }
        }
      }

      @include it('md\:col-span-12') {
        @include assert {
          @include output {
            @include md\:col-span-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{span 12 / span 12};
            }
          }
        }
      }

      @include it('md\:col-span-full') {
        @include assert {
          @include output {
            @include md\:col-span-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{1 / -1};
            }
          }
        }
      }

      @include it('md\:col-start-1') {
        @include assert {
          @include output {
            @include md\:col-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{1};
            }
          }
        }
      }

      @include it('md\:col-start-2') {
        @include assert {
          @include output {
            @include md\:col-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{2};
            }
          }
        }
      }

      @include it('md\:col-start-3') {
        @include assert {
          @include output {
            @include md\:col-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{3};
            }
          }
        }
      }

      @include it('md\:col-start-4') {
        @include assert {
          @include output {
            @include md\:col-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{4};
            }
          }
        }
      }

      @include it('md\:col-start-5') {
        @include assert {
          @include output {
            @include md\:col-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{5};
            }
          }
        }
      }

      @include it('md\:col-start-6') {
        @include assert {
          @include output {
            @include md\:col-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{6};
            }
          }
        }
      }

      @include it('md\:col-start-7') {
        @include assert {
          @include output {
            @include md\:col-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{7};
            }
          }
        }
      }

      @include it('md\:col-start-8') {
        @include assert {
          @include output {
            @include md\:col-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{8};
            }
          }
        }
      }

      @include it('md\:col-start-9') {
        @include assert {
          @include output {
            @include md\:col-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{9};
            }
          }
        }
      }

      @include it('md\:col-start-10') {
        @include assert {
          @include output {
            @include md\:col-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{10};
            }
          }
        }
      }

      @include it('md\:col-start-11') {
        @include assert {
          @include output {
            @include md\:col-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{11};
            }
          }
        }
      }

      @include it('md\:col-start-12') {
        @include assert {
          @include output {
            @include md\:col-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{12};
            }
          }
        }
      }

      @include it('md\:col-start-13') {
        @include assert {
          @include output {
            @include md\:col-start-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{13};
            }
          }
        }
      }

      @include it('md\:col-start-auto') {
        @include assert {
          @include output {
            @include md\:col-start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: auto;
            }
          }
        }
      }

      @include it('md\:col-end-1') {
        @include assert {
          @include output {
            @include md\:col-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{1};
            }
          }
        }
      }

      @include it('md\:col-end-2') {
        @include assert {
          @include output {
            @include md\:col-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{2};
            }
          }
        }
      }

      @include it('md\:col-end-3') {
        @include assert {
          @include output {
            @include md\:col-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{3};
            }
          }
        }
      }

      @include it('md\:col-end-4') {
        @include assert {
          @include output {
            @include md\:col-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{4};
            }
          }
        }
      }

      @include it('md\:col-end-5') {
        @include assert {
          @include output {
            @include md\:col-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{5};
            }
          }
        }
      }

      @include it('md\:col-end-6') {
        @include assert {
          @include output {
            @include md\:col-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{6};
            }
          }
        }
      }

      @include it('md\:col-end-7') {
        @include assert {
          @include output {
            @include md\:col-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{7};
            }
          }
        }
      }

      @include it('md\:col-end-8') {
        @include assert {
          @include output {
            @include md\:col-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{8};
            }
          }
        }
      }

      @include it('md\:col-end-9') {
        @include assert {
          @include output {
            @include md\:col-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{9};
            }
          }
        }
      }

      @include it('md\:col-end-10') {
        @include assert {
          @include output {
            @include md\:col-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{10};
            }
          }
        }
      }

      @include it('md\:col-end-11') {
        @include assert {
          @include output {
            @include md\:col-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{11};
            }
          }
        }
      }

      @include it('md\:col-end-12') {
        @include assert {
          @include output {
            @include md\:col-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{12};
            }
          }
        }
      }

      @include it('md\:col-end-13') {
        @include assert {
          @include output {
            @include md\:col-end-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{13};
            }
          }
        }
      }

      @include it('md\:col-end-auto') {
        @include assert {
          @include output {
            @include md\:col-end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: auto;
            }
          }
        }
      }
      @include it('lg\:col-auto') {
        @include assert {
          @include output {
            @include lg\:col-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: auto;
            }
          }
        }
      }

      @include it('lg\:col-span-1') {
        @include assert {
          @include output {
            @include lg\:col-span-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 1 / span 1};
            }
          }
        }
      }

      @include it('lg\:col-span-2') {
        @include assert {
          @include output {
            @include lg\:col-span-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 2 / span 2};
            }
          }
        }
      }

      @include it('lg\:col-span-3') {
        @include assert {
          @include output {
            @include lg\:col-span-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 3 / span 3};
            }
          }
        }
      }

      @include it('lg\:col-span-4') {
        @include assert {
          @include output {
            @include lg\:col-span-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 4 / span 4};
            }
          }
        }
      }

      @include it('lg\:col-span-5') {
        @include assert {
          @include output {
            @include lg\:col-span-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 5 / span 5};
            }
          }
        }
      }

      @include it('lg\:col-span-6') {
        @include assert {
          @include output {
            @include lg\:col-span-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 6 / span 6};
            }
          }
        }
      }

      @include it('lg\:col-span-7') {
        @include assert {
          @include output {
            @include lg\:col-span-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 7 / span 7};
            }
          }
        }
      }

      @include it('lg\:col-span-8') {
        @include assert {
          @include output {
            @include lg\:col-span-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 8 / span 8};
            }
          }
        }
      }

      @include it('lg\:col-span-9') {
        @include assert {
          @include output {
            @include lg\:col-span-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 9 / span 9};
            }
          }
        }
      }

      @include it('lg\:col-span-10') {
        @include assert {
          @include output {
            @include lg\:col-span-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 10 / span 10};
            }
          }
        }
      }

      @include it('lg\:col-span-11') {
        @include assert {
          @include output {
            @include lg\:col-span-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 11 / span 11};
            }
          }
        }
      }

      @include it('lg\:col-span-12') {
        @include assert {
          @include output {
            @include lg\:col-span-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{span 12 / span 12};
            }
          }
        }
      }

      @include it('lg\:col-span-full') {
        @include assert {
          @include output {
            @include lg\:col-span-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{1 / -1};
            }
          }
        }
      }

      @include it('lg\:col-start-1') {
        @include assert {
          @include output {
            @include lg\:col-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{1};
            }
          }
        }
      }

      @include it('lg\:col-start-2') {
        @include assert {
          @include output {
            @include lg\:col-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{2};
            }
          }
        }
      }

      @include it('lg\:col-start-3') {
        @include assert {
          @include output {
            @include lg\:col-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{3};
            }
          }
        }
      }

      @include it('lg\:col-start-4') {
        @include assert {
          @include output {
            @include lg\:col-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{4};
            }
          }
        }
      }

      @include it('lg\:col-start-5') {
        @include assert {
          @include output {
            @include lg\:col-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{5};
            }
          }
        }
      }

      @include it('lg\:col-start-6') {
        @include assert {
          @include output {
            @include lg\:col-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{6};
            }
          }
        }
      }

      @include it('lg\:col-start-7') {
        @include assert {
          @include output {
            @include lg\:col-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{7};
            }
          }
        }
      }

      @include it('lg\:col-start-8') {
        @include assert {
          @include output {
            @include lg\:col-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{8};
            }
          }
        }
      }

      @include it('lg\:col-start-9') {
        @include assert {
          @include output {
            @include lg\:col-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{9};
            }
          }
        }
      }

      @include it('lg\:col-start-10') {
        @include assert {
          @include output {
            @include lg\:col-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{10};
            }
          }
        }
      }

      @include it('lg\:col-start-11') {
        @include assert {
          @include output {
            @include lg\:col-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{11};
            }
          }
        }
      }

      @include it('lg\:col-start-12') {
        @include assert {
          @include output {
            @include lg\:col-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{12};
            }
          }
        }
      }

      @include it('lg\:col-start-13') {
        @include assert {
          @include output {
            @include lg\:col-start-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{13};
            }
          }
        }
      }

      @include it('lg\:col-start-auto') {
        @include assert {
          @include output {
            @include lg\:col-start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: auto;
            }
          }
        }
      }

      @include it('lg\:col-end-1') {
        @include assert {
          @include output {
            @include lg\:col-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{1};
            }
          }
        }
      }

      @include it('lg\:col-end-2') {
        @include assert {
          @include output {
            @include lg\:col-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{2};
            }
          }
        }
      }

      @include it('lg\:col-end-3') {
        @include assert {
          @include output {
            @include lg\:col-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{3};
            }
          }
        }
      }

      @include it('lg\:col-end-4') {
        @include assert {
          @include output {
            @include lg\:col-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{4};
            }
          }
        }
      }

      @include it('lg\:col-end-5') {
        @include assert {
          @include output {
            @include lg\:col-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{5};
            }
          }
        }
      }

      @include it('lg\:col-end-6') {
        @include assert {
          @include output {
            @include lg\:col-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{6};
            }
          }
        }
      }

      @include it('lg\:col-end-7') {
        @include assert {
          @include output {
            @include lg\:col-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{7};
            }
          }
        }
      }

      @include it('lg\:col-end-8') {
        @include assert {
          @include output {
            @include lg\:col-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{8};
            }
          }
        }
      }

      @include it('lg\:col-end-9') {
        @include assert {
          @include output {
            @include lg\:col-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{9};
            }
          }
        }
      }

      @include it('lg\:col-end-10') {
        @include assert {
          @include output {
            @include lg\:col-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{10};
            }
          }
        }
      }

      @include it('lg\:col-end-11') {
        @include assert {
          @include output {
            @include lg\:col-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{11};
            }
          }
        }
      }

      @include it('lg\:col-end-12') {
        @include assert {
          @include output {
            @include lg\:col-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{12};
            }
          }
        }
      }

      @include it('lg\:col-end-13') {
        @include assert {
          @include output {
            @include lg\:col-end-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{13};
            }
          }
        }
      }

      @include it('lg\:col-end-auto') {
        @include assert {
          @include output {
            @include lg\:col-end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: auto;
            }
          }
        }
      }
      @include it('xl\:col-auto') {
        @include assert {
          @include output {
            @include xl\:col-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: auto;
            }
          }
        }
      }

      @include it('xl\:col-span-1') {
        @include assert {
          @include output {
            @include xl\:col-span-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 1 / span 1};
            }
          }
        }
      }

      @include it('xl\:col-span-2') {
        @include assert {
          @include output {
            @include xl\:col-span-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 2 / span 2};
            }
          }
        }
      }

      @include it('xl\:col-span-3') {
        @include assert {
          @include output {
            @include xl\:col-span-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 3 / span 3};
            }
          }
        }
      }

      @include it('xl\:col-span-4') {
        @include assert {
          @include output {
            @include xl\:col-span-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 4 / span 4};
            }
          }
        }
      }

      @include it('xl\:col-span-5') {
        @include assert {
          @include output {
            @include xl\:col-span-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 5 / span 5};
            }
          }
        }
      }

      @include it('xl\:col-span-6') {
        @include assert {
          @include output {
            @include xl\:col-span-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 6 / span 6};
            }
          }
        }
      }

      @include it('xl\:col-span-7') {
        @include assert {
          @include output {
            @include xl\:col-span-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 7 / span 7};
            }
          }
        }
      }

      @include it('xl\:col-span-8') {
        @include assert {
          @include output {
            @include xl\:col-span-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 8 / span 8};
            }
          }
        }
      }

      @include it('xl\:col-span-9') {
        @include assert {
          @include output {
            @include xl\:col-span-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 9 / span 9};
            }
          }
        }
      }

      @include it('xl\:col-span-10') {
        @include assert {
          @include output {
            @include xl\:col-span-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 10 / span 10};
            }
          }
        }
      }

      @include it('xl\:col-span-11') {
        @include assert {
          @include output {
            @include xl\:col-span-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 11 / span 11};
            }
          }
        }
      }

      @include it('xl\:col-span-12') {
        @include assert {
          @include output {
            @include xl\:col-span-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{span 12 / span 12};
            }
          }
        }
      }

      @include it('xl\:col-span-full') {
        @include assert {
          @include output {
            @include xl\:col-span-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{1 / -1};
            }
          }
        }
      }

      @include it('xl\:col-start-1') {
        @include assert {
          @include output {
            @include xl\:col-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{1};
            }
          }
        }
      }

      @include it('xl\:col-start-2') {
        @include assert {
          @include output {
            @include xl\:col-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{2};
            }
          }
        }
      }

      @include it('xl\:col-start-3') {
        @include assert {
          @include output {
            @include xl\:col-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{3};
            }
          }
        }
      }

      @include it('xl\:col-start-4') {
        @include assert {
          @include output {
            @include xl\:col-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{4};
            }
          }
        }
      }

      @include it('xl\:col-start-5') {
        @include assert {
          @include output {
            @include xl\:col-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{5};
            }
          }
        }
      }

      @include it('xl\:col-start-6') {
        @include assert {
          @include output {
            @include xl\:col-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{6};
            }
          }
        }
      }

      @include it('xl\:col-start-7') {
        @include assert {
          @include output {
            @include xl\:col-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{7};
            }
          }
        }
      }

      @include it('xl\:col-start-8') {
        @include assert {
          @include output {
            @include xl\:col-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{8};
            }
          }
        }
      }

      @include it('xl\:col-start-9') {
        @include assert {
          @include output {
            @include xl\:col-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{9};
            }
          }
        }
      }

      @include it('xl\:col-start-10') {
        @include assert {
          @include output {
            @include xl\:col-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{10};
            }
          }
        }
      }

      @include it('xl\:col-start-11') {
        @include assert {
          @include output {
            @include xl\:col-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{11};
            }
          }
        }
      }

      @include it('xl\:col-start-12') {
        @include assert {
          @include output {
            @include xl\:col-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{12};
            }
          }
        }
      }

      @include it('xl\:col-start-13') {
        @include assert {
          @include output {
            @include xl\:col-start-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{13};
            }
          }
        }
      }

      @include it('xl\:col-start-auto') {
        @include assert {
          @include output {
            @include xl\:col-start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: auto;
            }
          }
        }
      }

      @include it('xl\:col-end-1') {
        @include assert {
          @include output {
            @include xl\:col-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{1};
            }
          }
        }
      }

      @include it('xl\:col-end-2') {
        @include assert {
          @include output {
            @include xl\:col-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{2};
            }
          }
        }
      }

      @include it('xl\:col-end-3') {
        @include assert {
          @include output {
            @include xl\:col-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{3};
            }
          }
        }
      }

      @include it('xl\:col-end-4') {
        @include assert {
          @include output {
            @include xl\:col-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{4};
            }
          }
        }
      }

      @include it('xl\:col-end-5') {
        @include assert {
          @include output {
            @include xl\:col-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{5};
            }
          }
        }
      }

      @include it('xl\:col-end-6') {
        @include assert {
          @include output {
            @include xl\:col-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{6};
            }
          }
        }
      }

      @include it('xl\:col-end-7') {
        @include assert {
          @include output {
            @include xl\:col-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{7};
            }
          }
        }
      }

      @include it('xl\:col-end-8') {
        @include assert {
          @include output {
            @include xl\:col-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{8};
            }
          }
        }
      }

      @include it('xl\:col-end-9') {
        @include assert {
          @include output {
            @include xl\:col-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{9};
            }
          }
        }
      }

      @include it('xl\:col-end-10') {
        @include assert {
          @include output {
            @include xl\:col-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{10};
            }
          }
        }
      }

      @include it('xl\:col-end-11') {
        @include assert {
          @include output {
            @include xl\:col-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{11};
            }
          }
        }
      }

      @include it('xl\:col-end-12') {
        @include assert {
          @include output {
            @include xl\:col-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{12};
            }
          }
        }
      }

      @include it('xl\:col-end-13') {
        @include assert {
          @include output {
            @include xl\:col-end-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{13};
            }
          }
        }
      }

      @include it('xl\:col-end-auto') {
        @include assert {
          @include output {
            @include xl\:col-end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: auto;
            }
          }
        }
      }
      @include it('2xl\:col-auto') {
        @include assert {
          @include output {
            @include \2xl\:col-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: auto;
            }
          }
        }
      }

      @include it('2xl\:col-span-1') {
        @include assert {
          @include output {
            @include \2xl\:col-span-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 1 / span 1};
            }
          }
        }
      }

      @include it('2xl\:col-span-2') {
        @include assert {
          @include output {
            @include \2xl\:col-span-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 2 / span 2};
            }
          }
        }
      }

      @include it('2xl\:col-span-3') {
        @include assert {
          @include output {
            @include \2xl\:col-span-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 3 / span 3};
            }
          }
        }
      }

      @include it('2xl\:col-span-4') {
        @include assert {
          @include output {
            @include \2xl\:col-span-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 4 / span 4};
            }
          }
        }
      }

      @include it('2xl\:col-span-5') {
        @include assert {
          @include output {
            @include \2xl\:col-span-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 5 / span 5};
            }
          }
        }
      }

      @include it('2xl\:col-span-6') {
        @include assert {
          @include output {
            @include \2xl\:col-span-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 6 / span 6};
            }
          }
        }
      }

      @include it('2xl\:col-span-7') {
        @include assert {
          @include output {
            @include \2xl\:col-span-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 7 / span 7};
            }
          }
        }
      }

      @include it('2xl\:col-span-8') {
        @include assert {
          @include output {
            @include \2xl\:col-span-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 8 / span 8};
            }
          }
        }
      }

      @include it('2xl\:col-span-9') {
        @include assert {
          @include output {
            @include \2xl\:col-span-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 9 / span 9};
            }
          }
        }
      }

      @include it('2xl\:col-span-10') {
        @include assert {
          @include output {
            @include \2xl\:col-span-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 10 / span 10};
            }
          }
        }
      }

      @include it('2xl\:col-span-11') {
        @include assert {
          @include output {
            @include \2xl\:col-span-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 11 / span 11};
            }
          }
        }
      }

      @include it('2xl\:col-span-12') {
        @include assert {
          @include output {
            @include \2xl\:col-span-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{span 12 / span 12};
            }
          }
        }
      }

      @include it('2xl\:col-span-full') {
        @include assert {
          @include output {
            @include \2xl\:col-span-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{1 / -1};
            }
          }
        }
      }

      @include it('2xl\:col-start-1') {
        @include assert {
          @include output {
            @include \2xl\:col-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{1};
            }
          }
        }
      }

      @include it('2xl\:col-start-2') {
        @include assert {
          @include output {
            @include \2xl\:col-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{2};
            }
          }
        }
      }

      @include it('2xl\:col-start-3') {
        @include assert {
          @include output {
            @include \2xl\:col-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{3};
            }
          }
        }
      }

      @include it('2xl\:col-start-4') {
        @include assert {
          @include output {
            @include \2xl\:col-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{4};
            }
          }
        }
      }

      @include it('2xl\:col-start-5') {
        @include assert {
          @include output {
            @include \2xl\:col-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{5};
            }
          }
        }
      }

      @include it('2xl\:col-start-6') {
        @include assert {
          @include output {
            @include \2xl\:col-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{6};
            }
          }
        }
      }

      @include it('2xl\:col-start-7') {
        @include assert {
          @include output {
            @include \2xl\:col-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{7};
            }
          }
        }
      }

      @include it('2xl\:col-start-8') {
        @include assert {
          @include output {
            @include \2xl\:col-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{8};
            }
          }
        }
      }

      @include it('2xl\:col-start-9') {
        @include assert {
          @include output {
            @include \2xl\:col-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{9};
            }
          }
        }
      }

      @include it('2xl\:col-start-10') {
        @include assert {
          @include output {
            @include \2xl\:col-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{10};
            }
          }
        }
      }

      @include it('2xl\:col-start-11') {
        @include assert {
          @include output {
            @include \2xl\:col-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{11};
            }
          }
        }
      }

      @include it('2xl\:col-start-12') {
        @include assert {
          @include output {
            @include \2xl\:col-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{12};
            }
          }
        }
      }

      @include it('2xl\:col-start-13') {
        @include assert {
          @include output {
            @include \2xl\:col-start-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{13};
            }
          }
        }
      }

      @include it('2xl\:col-start-auto') {
        @include assert {
          @include output {
            @include \2xl\:col-start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: auto;
            }
          }
        }
      }

      @include it('2xl\:col-end-1') {
        @include assert {
          @include output {
            @include \2xl\:col-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{1};
            }
          }
        }
      }

      @include it('2xl\:col-end-2') {
        @include assert {
          @include output {
            @include \2xl\:col-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{2};
            }
          }
        }
      }

      @include it('2xl\:col-end-3') {
        @include assert {
          @include output {
            @include \2xl\:col-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{3};
            }
          }
        }
      }

      @include it('2xl\:col-end-4') {
        @include assert {
          @include output {
            @include \2xl\:col-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{4};
            }
          }
        }
      }

      @include it('2xl\:col-end-5') {
        @include assert {
          @include output {
            @include \2xl\:col-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{5};
            }
          }
        }
      }

      @include it('2xl\:col-end-6') {
        @include assert {
          @include output {
            @include \2xl\:col-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{6};
            }
          }
        }
      }

      @include it('2xl\:col-end-7') {
        @include assert {
          @include output {
            @include \2xl\:col-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{7};
            }
          }
        }
      }

      @include it('2xl\:col-end-8') {
        @include assert {
          @include output {
            @include \2xl\:col-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{8};
            }
          }
        }
      }

      @include it('2xl\:col-end-9') {
        @include assert {
          @include output {
            @include \2xl\:col-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{9};
            }
          }
        }
      }

      @include it('2xl\:col-end-10') {
        @include assert {
          @include output {
            @include \2xl\:col-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{10};
            }
          }
        }
      }

      @include it('2xl\:col-end-11') {
        @include assert {
          @include output {
            @include \2xl\:col-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{11};
            }
          }
        }
      }

      @include it('2xl\:col-end-12') {
        @include assert {
          @include output {
            @include \2xl\:col-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{12};
            }
          }
        }
      }

      @include it('2xl\:col-end-13') {
        @include assert {
          @include output {
            @include \2xl\:col-end-13;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{13};
            }
          }
        }
      }

      @include it('2xl\:col-end-auto') {
        @include assert {
          @include output {
            @include \2xl\:col-end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: auto;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('col-(16 / span 16)') {
        @include assert {
          @include output {
            @include col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            grid-column: #{16 / span 16};
          }
        }
      }

      @include it('col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            grid-column-start: #{16 / span 16};
          }
        }
      }

      @include it('col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            grid-column-end: #{16 / span 16};
          }
        }
      }

      @include it('sm\:col-(16 / span 16)') {
        @include assert {
          @include output {
            @include sm\:col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column: #{16 / span 16};
            }
          }
        }
      }

      @include it('sm\:col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include sm\:col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-start: #{16 / span 16};
            }
          }
        }
      }

      @include it('sm\:col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include sm\:col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              grid-column-end: #{16 / span 16};
            }
          }
        }
      }

      @include it('md\:col-(16 / span 16)') {
        @include assert {
          @include output {
            @include md\:col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column: #{16 / span 16};
            }
          }
        }
      }

      @include it('md\:col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include md\:col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-start: #{16 / span 16};
            }
          }
        }
      }

      @include it('md\:col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include md\:col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              grid-column-end: #{16 / span 16};
            }
          }
        }
      }

      @include it('lg\:col-(16 / span 16)') {
        @include assert {
          @include output {
            @include lg\:col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column: #{16 / span 16};
            }
          }
        }
      }

      @include it('lg\:col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include lg\:col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-start: #{16 / span 16};
            }
          }
        }
      }

      @include it('lg\:col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include lg\:col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              grid-column-end: #{16 / span 16};
            }
          }
        }
      }

      @include it('xl\:col-(16 / span 16)') {
        @include assert {
          @include output {
            @include xl\:col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column: #{16 / span 16};
            }
          }
        }
      }

      @include it('xl\:col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include xl\:col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-start: #{16 / span 16};
            }
          }
        }
      }

      @include it('xl\:col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include xl\:col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              grid-column-end: #{16 / span 16};
            }
          }
        }
      }

      @include it('2xl\:col-(16 / span 16)') {
        @include assert {
          @include output {
            @include \2xl\:col-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column: #{16 / span 16};
            }
          }
        }
      }

      @include it('2xl\:col-start-(16 / span 16)') {
        @include assert {
          @include output {
            @include \2xl\:col-start-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-start: #{16 / span 16};
            }
          }
        }
      }

      @include it('2xl\:col-end-(16 / span 16)') {
        @include assert {
          @include output {
            @include \2xl\:col-end-(#{16 / span 16});
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              grid-column-end: #{16 / span 16};
            }
          }
        }
      }
    }
  }
}
